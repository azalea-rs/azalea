//! Autogenerated block collisions for every block

// This file is generated from codegen/lib/code/shapes.py. If you want to
// modify it, change that file.

#![allow(clippy::explicit_auto_deref)]
#![allow(clippy::redundant_closure)]

use std::sync::LazyLock;

use azalea_block::*;

use super::VoxelShape;
use crate::collision::{self, Shapes};

pub trait BlockWithShape {
    fn collision_shape(&self) -> &'static VoxelShape;
    fn outline_shape(&self) -> &'static VoxelShape;
    /// Tells you whether the block has an empty shape.
    ///
    /// This is slightly more efficient than calling `shape()` and comparing
    /// against `EMPTY_SHAPE`.
    fn is_collision_shape_empty(&self) -> bool;
    fn is_collision_shape_full(&self) -> bool;
}

static SHAPE0: LazyLock<VoxelShape> = LazyLock::new(|| collision::EMPTY_SHAPE.clone());
static SHAPE1: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 1., 1., 1.));
static SHAPE2: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.125, 0., 0.125, 0.875, 0.75, 0.875));
static SHAPE3: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0.8125, 0.1875, 0.3125, 1., 0.3125));
static SHAPE4: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0., 0.1875, 0.3125, 1., 0.3125));
static SHAPE5: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0.625, 0.1875, 0.3125, 1., 0.3125));
static SHAPE6: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0.4375, 0.1875, 0.3125, 1., 0.3125));
static SHAPE7: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0.1875, 0.1875, 0.3125, 1., 0.3125));
static SHAPE8: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.1875, 0.5625, 0.1875);
    let s = Shapes::or(s, collision::box_shape(0.8125, 0., 0., 1., 0.5625, 0.1875));
    let s = Shapes::or(s, collision::box_shape(0., 0.1875, 0.1875, 1., 0.5625, 1.));
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.5625, 0.1875),
    )
});
static SHAPE9: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.8125, 0.1875, 0.5625, 1.);
    let s = Shapes::or(s, collision::box_shape(0.8125, 0., 0.8125, 1., 0.5625, 1.));
    let s = Shapes::or(s, collision::box_shape(0., 0.1875, 0., 1., 0.5625, 0.8125));
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0.8125, 0.8125, 0.5625, 1.),
    )
});
static SHAPE10: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.1875, 0.5625, 0.1875);
    let s = Shapes::or(s, collision::box_shape(0., 0., 0.8125, 0.1875, 0.5625, 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.1875, 0.1875, 1., 0.5625, 0.8125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0., 1., 0.5625, 0.1875),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0.8125, 1., 0.5625, 1.),
    )
});
static SHAPE11: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.8125, 0., 0., 1., 0.5625, 0.1875);
    let s = Shapes::or(s, collision::box_shape(0.8125, 0., 0.8125, 1., 0.5625, 1.));
    let s = Shapes::or(s, collision::box_shape(0., 0.1875, 0., 0.8125, 0.5625, 1.));
    Shapes::or(
        s,
        collision::box_shape(0.8125, 0.1875, 0.1875, 1., 0.5625, 0.8125),
    )
});
static SHAPE12: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 1., 0.125, 1.));
static SHAPE13: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 1., 0.5, 1.));
static SHAPE14: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0.25, 1., 1., 1.));
static SHAPE15: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 0.75, 1., 1.));
static SHAPE16: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 1., 1., 0.75));
static SHAPE17: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.25, 0., 0., 1., 1., 1.));
static SHAPE18: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 1., 0.75, 1.));
static SHAPE19: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.25, 0., 1., 1., 1.));
static SHAPE20: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.125, 0., 0.125, 0.875, 0.8125, 0.875));
static SHAPE21: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 1., 0.8125, 1.));
static SHAPE22: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.125, 0., 0.125, 0.875, 0.625, 0.875));
static SHAPE23: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.0625, 0., 0.0625, 0.9375, 1., 0.9375));
static SHAPE24: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.125, 0., 0.125, 0.875, 1., 0.875));
static SHAPE25: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 1., 0.25);
    Shapes::or(
        s,
        collision::box_shape(0.375, 0.375, 0.25, 0.625, 0.625, 1.),
    )
});
static SHAPE26: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 1., 0.25);
    Shapes::or(
        s,
        collision::box_shape(0.375, 0.375, 0.25, 0.625, 0.625, 1.25),
    )
});
static SHAPE27: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.75, 0., 0., 1., 1., 1.);
    Shapes::or(
        s,
        collision::box_shape(0., 0.375, 0.375, 0.75, 0.625, 0.625),
    )
});
static SHAPE28: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.75, 0., 0., 1., 1., 1.);
    Shapes::or(
        s,
        collision::box_shape(-0.25, 0.375, 0.375, 0.75, 0.625, 0.625),
    )
});
static SHAPE29: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.75, 1., 1., 1.);
    Shapes::or(
        s,
        collision::box_shape(0.375, 0.375, 0., 0.625, 0.625, 0.75),
    )
});
static SHAPE30: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.75, 1., 1., 1.);
    Shapes::or(
        s,
        collision::box_shape(0.375, 0.375, -0.25, 0.625, 0.625, 0.75),
    )
});
static SHAPE31: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.25, 1., 1.);
    Shapes::or(
        s,
        collision::box_shape(0.25, 0.375, 0.375, 1., 0.625, 0.625),
    )
});
static SHAPE32: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.25, 1., 1.);
    Shapes::or(
        s,
        collision::box_shape(0.25, 0.375, 0.375, 1.25, 0.625, 0.625),
    )
});
static SHAPE33: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.375, 0., 0.375, 0.625, 1., 0.625);
    let s = Shapes::or(s, collision::box_shape(0., 0.75, 0., 0.375, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.375, 0.75, 0., 1., 1., 0.375));
    let s = Shapes::or(s, collision::box_shape(0.375, 0.75, 0.625, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.625, 0.75, 0.375, 1., 1., 0.625))
});
static SHAPE34: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.375, -0.25, 0.375, 0.625, 1., 0.625);
    let s = Shapes::or(s, collision::box_shape(0., 0.75, 0., 0.375, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.375, 0.75, 0., 1., 1., 0.375));
    let s = Shapes::or(s, collision::box_shape(0.375, 0.75, 0.625, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.625, 0.75, 0.375, 1., 1., 0.625))
});
static SHAPE35: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.25, 1.);
    Shapes::or(
        s,
        collision::box_shape(0.375, 0.25, 0.375, 0.625, 1., 0.625),
    )
});
static SHAPE36: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.25, 1.);
    Shapes::or(
        s,
        collision::box_shape(0.375, 0.25, 0.375, 0.625, 1.25, 0.625),
    )
});
static SHAPE37: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.0625, 0., 0.0625, 0.4375, 0.625, 0.4375));
static SHAPE38: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0., 0.3125, 0.6875, 0.375, 0.6875));
static SHAPE39: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.375, 0., 0.375, 0.625, 0.625, 0.625));
static SHAPE40: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.34375, 0.1875, 0.6875, 0.65625, 0.8125, 1.));
static SHAPE41: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.34375, 0.1875, 0., 0.65625, 0.8125, 0.3125));
static SHAPE42: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.6875, 0.1875, 0.34375, 1., 0.8125, 0.65625));
static SHAPE43: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.1875, 0.34375, 0.3125, 0.8125, 0.65625));
static SHAPE44: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0., 0.0625, 1., 1., 0.9375));
    Shapes::or(
        s,
        collision::box_shape(0.0625, 0.9375, 0.0625, 0.9375, 1., 0.9375),
    )
});
static SHAPE45: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 1., 0.0625);
    let s = Shapes::or(s, collision::box_shape(0., 0., 0.9375, 1., 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0., 0.0625, 1., 1., 0.9375));
    Shapes::or(
        s,
        collision::box_shape(0., 0.9375, 0.0625, 0.9375, 1., 0.9375),
    )
});
static SHAPE46: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.9375, 0., 0.0625, 1., 1., 0.9375))
});
static SHAPE47: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 1., 0.0625);
    let s = Shapes::or(s, collision::box_shape(0., 0., 0.9375, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.9375, 0., 0.0625, 1., 1., 0.9375))
});
static SHAPE48: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0., 0.0625, 1., 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.0625, 0.9375, 0.0625, 0.9375, 1., 1.),
    )
});
static SHAPE49: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 1., 0.0625);
    let s = Shapes::or(s, collision::box_shape(0.9375, 0., 0.0625, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0., 0.9375, 0.0625, 0.9375, 1., 1.))
});
static SHAPE50: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 1., 0.0625));
    Shapes::or(s, collision::box_shape(0.9375, 0., 0.0625, 1., 1., 1.))
});
static SHAPE51: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 1., 0.0625);
    Shapes::or(s, collision::box_shape(0.9375, 0., 0.0625, 1., 1., 1.))
});
static SHAPE52: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0., 0., 1., 1., 0.9375));
    Shapes::or(
        s,
        collision::box_shape(0.0625, 0.9375, 0., 0.9375, 1., 0.9375),
    )
});
static SHAPE53: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.9375, 1., 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.9375, 0., 0., 1., 1., 0.9375));
    Shapes::or(s, collision::box_shape(0., 0.9375, 0., 0.9375, 1., 0.9375))
});
static SHAPE54: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.9375, 0., 0., 1., 1., 0.9375))
});
static SHAPE55: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.9375, 1., 1., 1.);
    Shapes::or(s, collision::box_shape(0.9375, 0., 0., 1., 1., 0.9375))
});
static SHAPE56: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.9375, 0., 0., 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.0625, 0.9375, 0., 0.9375, 1., 1.))
});
static SHAPE57: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.9375, 0., 0., 1., 1., 1.);
    Shapes::or(s, collision::box_shape(0., 0.9375, 0., 0.9375, 1., 1.))
});
static SHAPE58: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    Shapes::or(s, collision::box_shape(0.9375, 0., 0., 1., 1., 1.))
});
static SHAPE59: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.9375, 0., 0., 1., 1., 1.));
static SHAPE60: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.0625, 0.9375, 0.0625, 1., 1., 0.9375),
    )
});
static SHAPE61: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 1., 0.0625);
    let s = Shapes::or(s, collision::box_shape(0., 0., 0.9375, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0., 0.9375, 0.0625, 1., 1., 0.9375))
});
static SHAPE62: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 1., 0.0625));
    Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 1., 1.))
});
static SHAPE63: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 1., 0.0625);
    Shapes::or(s, collision::box_shape(0., 0., 0.9375, 1., 1., 1.))
});
static SHAPE64: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 1., 0.0625));
    Shapes::or(s, collision::box_shape(0.0625, 0.9375, 0.0625, 1., 1., 1.))
});
static SHAPE65: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 1., 0.0625);
    Shapes::or(s, collision::box_shape(0., 0.9375, 0.0625, 1., 1., 1.))
});
static SHAPE66: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 1., 0.0625))
});
static SHAPE67: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 1., 1., 0.0625));
static SHAPE68: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.0625, 0.9375, 0., 1., 1., 0.9375))
});
static SHAPE69: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.9375, 1., 1., 1.);
    Shapes::or(s, collision::box_shape(0., 0.9375, 0., 1., 1., 0.9375))
});
static SHAPE70: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 1., 1.))
});
static SHAPE71: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0.9375, 1., 1., 1.));
static SHAPE72: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    Shapes::or(s, collision::box_shape(0.0625, 0.9375, 0., 1., 1., 1.))
});
static SHAPE73: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.9375, 0., 1., 1., 1.));
static SHAPE74: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 0.0625, 1., 1.));
static SHAPE75: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 1., 0.0625, 1.));
static SHAPE76: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 1., 0.5);
    Shapes::or(s, collision::box_shape(0., 0.5, 0.5, 1., 1., 1.))
});
static SHAPE77: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.5, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.5, 0., 0., 1., 1., 0.5));
    Shapes::or(s, collision::box_shape(0.5, 0.5, 0.5, 1., 1., 1.))
});
static SHAPE78: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 1., 0.5);
    let s = Shapes::or(s, collision::box_shape(0.5, 0., 0.5, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0., 0.5, 0.5, 0.5, 1., 1.))
});
static SHAPE79: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.5, 1., 0.5);
    let s = Shapes::or(s, collision::box_shape(0., 0.5, 0.5, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.5, 0.5, 0., 1., 1., 0.5))
});
static SHAPE80: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.5, 0., 0., 1., 1., 0.5);
    let s = Shapes::or(s, collision::box_shape(0., 0.5, 0., 0.5, 1., 1.));
    Shapes::or(s, collision::box_shape(0.5, 0.5, 0.5, 1., 1., 1.))
});
static SHAPE81: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.5, 1.);
    Shapes::or(s, collision::box_shape(0., 0.5, 0., 1., 1., 0.5))
});
static SHAPE82: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.5, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.5, 0., 0.5, 1., 1.));
    Shapes::or(s, collision::box_shape(0.5, 0.5, 0., 1., 1., 0.5))
});
static SHAPE83: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.5, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.5, 0., 1., 1., 0.5));
    Shapes::or(s, collision::box_shape(0.5, 0.5, 0.5, 1., 1., 1.))
});
static SHAPE84: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.5, 1.);
    Shapes::or(s, collision::box_shape(0., 0.5, 0., 0.5, 1., 0.5))
});
static SHAPE85: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.5, 1.);
    Shapes::or(s, collision::box_shape(0.5, 0.5, 0., 1., 1., 0.5))
});
static SHAPE86: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.5, 1., 1., 1.);
    Shapes::or(s, collision::box_shape(0., 0.5, 0., 1., 1., 0.5))
});
static SHAPE87: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.5, 1., 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.5, 0., 0., 1., 1., 0.5));
    Shapes::or(s, collision::box_shape(0., 0.5, 0., 0.5, 1., 0.5))
});
static SHAPE88: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.5, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.5, 0., 0.5, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.5, 0.5, 0., 1., 1., 0.5))
});
static SHAPE89: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.5, 0., 0.5, 1., 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.5, 0., 0.5, 1., 1.));
    Shapes::or(s, collision::box_shape(0.5, 0.5, 0., 1., 1., 0.5))
});
static SHAPE90: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.5, 0.5, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.5, 0., 1., 1., 0.5));
    Shapes::or(s, collision::box_shape(0.5, 0.5, 0.5, 1., 1., 1.))
});
static SHAPE91: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.5, 1.);
    Shapes::or(s, collision::box_shape(0., 0.5, 0.5, 1., 1., 1.))
});
static SHAPE92: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.5, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.5, 0.5, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.5, 0.5, 0., 1., 1., 0.5))
});
static SHAPE93: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.5, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.5, 0., 0.5, 1., 1.));
    Shapes::or(s, collision::box_shape(0.5, 0.5, 0.5, 1., 1., 1.))
});
static SHAPE94: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.5, 1.);
    Shapes::or(s, collision::box_shape(0.5, 0.5, 0.5, 1., 1., 1.))
});
static SHAPE95: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.5, 1.);
    Shapes::or(s, collision::box_shape(0., 0.5, 0.5, 0.5, 1., 1.))
});
static SHAPE96: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.5, 1., 1.);
    Shapes::or(s, collision::box_shape(0.5, 0.5, 0., 1., 1., 1.))
});
static SHAPE97: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.5, 1.);
    Shapes::or(s, collision::box_shape(0., 0.5, 0., 0.5, 1., 1.))
});
static SHAPE98: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.5, 0., 0., 1., 1., 1.);
    Shapes::or(s, collision::box_shape(0., 0.5, 0., 0.5, 1., 1.))
});
static SHAPE99: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.5, 1.);
    Shapes::or(s, collision::box_shape(0.5, 0.5, 0., 1., 1., 1.))
});
static SHAPE100: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.0625, 0., 0.0625, 0.9375, 0.875, 0.9375));
static SHAPE101: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.0625, 0., 0.0625, 1., 0.875, 0.9375));
static SHAPE102: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0.0625, 0.9375, 0.875, 0.9375));
static SHAPE103: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.0625, 0., 0., 0.9375, 0.875, 0.9375));
static SHAPE104: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.0625, 0., 0.0625, 0.9375, 0.875, 1.));
static SHAPE105: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.0625, 0.1875, 0.0625, 1., 0.8125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0., 0.8125, 1., 0.0625),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0.9375, 0.8125, 1., 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.1875, 1., 1., 0.8125),
    )
});
static SHAPE106: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0., 0.8125, 1., 0.0625),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0.9375, 0.8125, 1., 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.1875, 1., 1., 0.8125),
    )
});
static SHAPE107: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 1.);
    let s = Shapes::or(
        s,
        collision::box_shape(0.8125, 0., 0.1875, 1., 0.0625, 0.8125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0., 0.8125, 1., 0.0625),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0.9375, 0.8125, 1., 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.1875, 1., 1., 0.8125),
    )
});
static SHAPE108: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.0625, 0.1875, 0.0625, 1., 0.8125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0., 0.8125, 1., 0.0625),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.1875, 1., 1., 0.8125),
    )
});
static SHAPE109: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0., 0.8125, 1., 0.0625),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.1875, 1., 1., 0.8125),
    )
});
static SHAPE110: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 1.);
    let s = Shapes::or(
        s,
        collision::box_shape(0.8125, 0., 0.1875, 1., 0.0625, 0.8125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0., 0.8125, 1., 0.0625),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.1875, 1., 1., 0.8125),
    )
});
static SHAPE111: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.0625, 0.1875, 0.0625, 1., 0.8125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0., 0.8125, 1., 0.0625),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.1875, 1., 1., 0.8125),
    )
});
static SHAPE112: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0., 0.8125, 1., 0.0625),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.1875, 1., 1., 0.8125),
    )
});
static SHAPE113: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.8125, 0., 0.1875, 1., 0.0625, 0.8125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0., 0.8125, 1., 0.0625),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.1875, 1., 1., 0.8125),
    )
});
static SHAPE114: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.0625, 0.1875, 0.0625, 1., 0.8125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0.9375, 0.8125, 1., 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.1875, 1., 1., 0.8125),
    )
});
static SHAPE115: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0.9375, 0.8125, 1., 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.1875, 1., 1., 0.8125),
    )
});
static SHAPE116: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 1.);
    let s = Shapes::or(
        s,
        collision::box_shape(0.8125, 0., 0.1875, 1., 0.0625, 0.8125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0.9375, 0.8125, 1., 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.1875, 1., 1., 0.8125),
    )
});
static SHAPE117: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.0625, 0.1875, 0.0625, 1., 0.8125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.1875, 1., 1., 0.8125),
    )
});
static SHAPE118: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.1875, 1., 1., 0.8125),
    )
});
static SHAPE119: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 1.);
    let s = Shapes::or(
        s,
        collision::box_shape(0.8125, 0., 0.1875, 1., 0.0625, 0.8125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.1875, 1., 1., 0.8125),
    )
});
static SHAPE120: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.0625, 0.1875, 0.0625, 1., 0.8125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.1875, 1., 1., 0.8125),
    )
});
static SHAPE121: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.1875, 1., 1., 0.8125),
    )
});
static SHAPE122: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.8125, 0., 0.1875, 1., 0.0625, 0.8125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.1875, 1., 1., 0.8125),
    )
});
static SHAPE123: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.0625, 0.1875, 0.0625, 1., 0.8125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0.9375, 0.8125, 1., 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.1875, 1., 1., 0.8125),
    )
});
static SHAPE124: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0.9375, 0.8125, 1., 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.1875, 1., 1., 0.8125),
    )
});
static SHAPE125: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.0625, 1.);
    let s = Shapes::or(
        s,
        collision::box_shape(0.8125, 0., 0.1875, 1., 0.0625, 0.8125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0.9375, 0.8125, 1., 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.1875, 1., 1., 0.8125),
    )
});
static SHAPE126: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.0625, 0.1875, 0.0625, 1., 0.8125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.1875, 1., 1., 0.8125),
    )
});
static SHAPE127: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.1875, 1., 1., 0.8125),
    )
});
static SHAPE128: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.0625, 1.);
    let s = Shapes::or(
        s,
        collision::box_shape(0.8125, 0., 0.1875, 1., 0.0625, 0.8125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.1875, 1., 1., 0.8125),
    )
});
static SHAPE129: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.0625, 0.1875, 0.0625, 1., 0.8125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.1875, 1., 1., 0.8125),
    )
});
static SHAPE130: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.1875, 1., 1., 0.8125),
    )
});
static SHAPE131: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 1., 0.0625, 0.8125);
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.1875, 1., 1., 0.8125),
    )
});
static SHAPE132: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.0625, 0.1875, 0.0625, 1., 0.8125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0., 0.8125, 1., 0.0625),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0.9375, 0.8125, 1., 1.),
    )
});
static SHAPE133: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0., 0.8125, 1., 0.0625),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0.9375, 0.8125, 1., 1.),
    )
});
static SHAPE134: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 1.);
    let s = Shapes::or(
        s,
        collision::box_shape(0.8125, 0., 0.1875, 1., 0.0625, 0.8125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0., 0.8125, 1., 0.0625),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0.9375, 0.8125, 1., 1.),
    )
});
static SHAPE135: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.0625, 0.1875, 0.0625, 1., 0.8125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0., 0.8125, 1., 0.0625),
    )
});
static SHAPE136: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0., 0.8125, 1., 0.0625),
    )
});
static SHAPE137: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 1.);
    let s = Shapes::or(
        s,
        collision::box_shape(0.8125, 0., 0.1875, 1., 0.0625, 0.8125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0., 0.8125, 1., 0.0625),
    )
});
static SHAPE138: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.0625, 0.1875, 0.0625, 1., 0.8125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0., 0.8125, 1., 0.0625),
    )
});
static SHAPE139: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0., 0.8125, 1., 0.0625),
    )
});
static SHAPE140: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.8125, 0., 0.1875, 1., 0.0625, 0.8125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0., 0.8125, 1., 0.0625),
    )
});
static SHAPE141: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.0625, 0.1875, 0.0625, 1., 0.8125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0.9375, 0.8125, 1., 1.),
    )
});
static SHAPE142: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0.9375, 0.8125, 1., 1.),
    )
});
static SHAPE143: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 1.);
    let s = Shapes::or(
        s,
        collision::box_shape(0.8125, 0., 0.1875, 1., 0.0625, 0.8125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0.9375, 0.8125, 1., 1.),
    )
});
static SHAPE144: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0., 0.0625, 0.1875, 0.0625, 1., 0.8125),
    )
});
static SHAPE145: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    )
});
static SHAPE146: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 1.);
    Shapes::or(
        s,
        collision::box_shape(0.8125, 0., 0.1875, 1., 0.0625, 0.8125),
    )
});
static SHAPE147: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    Shapes::or(
        s,
        collision::box_shape(0., 0.0625, 0.1875, 0.0625, 1., 0.8125),
    )
});
static SHAPE148: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    )
});
static SHAPE149: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.8125);
    Shapes::or(
        s,
        collision::box_shape(0.8125, 0., 0.1875, 1., 0.0625, 0.8125),
    )
});
static SHAPE150: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.0625, 0.1875, 0.0625, 1., 0.8125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0.9375, 0.8125, 1., 1.),
    )
});
static SHAPE151: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0.9375, 0.8125, 1., 1.),
    )
});
static SHAPE152: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.0625, 1.);
    let s = Shapes::or(
        s,
        collision::box_shape(0.8125, 0., 0.1875, 1., 0.0625, 0.8125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0.9375, 0.8125, 1., 1.),
    )
});
static SHAPE153: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0., 0.0625, 0.1875, 0.0625, 1., 0.8125),
    )
});
static SHAPE154: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    )
});
static SHAPE155: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.0625, 1.);
    Shapes::or(
        s,
        collision::box_shape(0.8125, 0., 0.1875, 1., 0.0625, 0.8125),
    )
});
static SHAPE156: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125);
    Shapes::or(
        s,
        collision::box_shape(0., 0.0625, 0.1875, 0.0625, 1., 0.8125),
    )
});
static SHAPE157: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0.1875, 1., 0.0625, 0.8125));
static SHAPE158: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0., 0.1875, 1., 0.0625, 0.8125));
static SHAPE159: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 0.8125, 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.0625, 0.1875, 0.0625, 1., 0.8125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0., 0.8125, 1., 0.0625),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0.9375, 0.8125, 1., 1.),
    )
});
static SHAPE160: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 0.8125, 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0., 0.8125, 1., 0.0625),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0.9375, 0.8125, 1., 1.),
    )
});
static SHAPE161: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 1.);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0., 0.8125, 1., 0.0625),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0.9375, 0.8125, 1., 1.),
    )
});
static SHAPE162: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 0.8125, 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.0625, 0.1875, 0.0625, 1., 0.8125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0., 0.8125, 1., 0.0625),
    )
});
static SHAPE163: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 0.8125, 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0., 0.8125, 1., 0.0625),
    )
});
static SHAPE164: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 1.);
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0., 0.8125, 1., 0.0625),
    )
});
static SHAPE165: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 0.8125, 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.0625, 0.1875, 0.0625, 1., 0.8125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0., 0.8125, 1., 0.0625),
    )
});
static SHAPE166: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 0.8125, 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0., 0.8125, 1., 0.0625),
    )
});
static SHAPE167: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.8125);
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0., 0.8125, 1., 0.0625),
    )
});
static SHAPE168: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 0.8125, 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.0625, 0.1875, 0.0625, 1., 0.8125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0.9375, 0.8125, 1., 1.),
    )
});
static SHAPE169: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 0.8125, 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0.9375, 0.8125, 1., 1.),
    )
});
static SHAPE170: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 1.);
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0.9375, 0.8125, 1., 1.),
    )
});
static SHAPE171: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 0.8125, 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0., 0.0625, 0.1875, 0.0625, 1., 0.8125),
    )
});
static SHAPE172: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 0.8125, 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    )
});
static SHAPE173: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 1.));
static SHAPE174: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 0.8125, 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    );
    Shapes::or(
        s,
        collision::box_shape(0., 0.0625, 0.1875, 0.0625, 1., 0.8125),
    )
});
static SHAPE175: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 0.8125, 0.0625, 0.8125);
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.1875),
    )
});
static SHAPE176: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0., 0., 0.8125, 0.0625, 0.8125));
static SHAPE177: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 0.8125, 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.0625, 0.1875, 0.0625, 1., 0.8125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0.9375, 0.8125, 1., 1.),
    )
});
static SHAPE178: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 0.8125, 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0.9375, 0.8125, 1., 1.),
    )
});
static SHAPE179: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.0625, 1.);
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.0625, 0.9375, 0.8125, 1., 1.),
    )
});
static SHAPE180: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 0.8125, 0.0625, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0., 0.0625, 0.1875, 0.0625, 1., 0.8125),
    )
});
static SHAPE181: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 0.8125, 0.0625, 0.8125);
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0., 0.8125, 0.8125, 0.0625, 1.),
    )
});
static SHAPE182: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.0625, 1.));
static SHAPE183: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.1875, 0.8125, 0.0625, 0.8125);
    Shapes::or(
        s,
        collision::box_shape(0., 0.0625, 0.1875, 0.0625, 1., 0.8125),
    )
});
static SHAPE184: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0.1875, 0.8125, 0.0625, 0.8125));
static SHAPE185: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.0625, 0.8125));
static SHAPE186: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 1., 0.25, 1.));
static SHAPE187: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 1., 0.375, 1.));
static SHAPE188: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 1., 0.625, 1.));
static SHAPE189: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 1., 0.875, 1.));
static SHAPE190: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 1., 0.9375, 1.));
static SHAPE191: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.75));
static SHAPE192: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 0.1875, 1., 1.));
static SHAPE193: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0.8125, 1., 1., 1.));
static SHAPE194: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.8125, 0., 0., 1., 1., 1.));
static SHAPE195: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 1., 1., 0.1875));
static SHAPE196: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.28125, 0.875, 1., 0.78125, 1.));
static SHAPE197: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.28125, 0., 1., 0.78125, 0.125));
static SHAPE198: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.875, 0.28125, 0., 1., 0.78125, 1.));
static SHAPE199: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.28125, 0., 0.125, 0.78125, 1.));
static SHAPE200: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.0625, 0., 0.4375, 0.9375, 0.625, 0.5625));
static SHAPE201: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0., 0.1875, 0.8125, 1., 0.8125));
static SHAPE202: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.4375, 0., 0.0625, 0.5625, 0.625, 0.9375));
static SHAPE203: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.875, 0.375, 1., 1., 0.625));
static SHAPE204: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.0625, 0., 0.4375, 0.9375, 0.625, 0.5625);
    Shapes::or(s, collision::box_shape(0., 0.875, 0.375, 1., 1., 0.625))
});
static SHAPE205: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.375, 0.875, 0., 0.625, 1., 1.));
static SHAPE206: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.4375, 0., 0.0625, 0.5625, 0.625, 0.9375);
    Shapes::or(s, collision::box_shape(0.375, 0.875, 0., 0.625, 1., 1.))
});
static SHAPE207: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0., 0.25, 0.6875, 0.375, 0.75));
static SHAPE208: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.25, 0., 0.3125, 0.75, 0.375, 0.6875));
static SHAPE209: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0.25, 0.625, 0.6875, 0.75, 1.));
static SHAPE210: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0.25, 0., 0.6875, 0.75, 0.375));
static SHAPE211: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.625, 0.25, 0.3125, 1., 0.75, 0.6875));
static SHAPE212: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.25, 0.3125, 0.375, 0.75, 0.6875));
static SHAPE213: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0.625, 0.25, 0.6875, 1., 0.75));
static SHAPE214: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.25, 0.625, 0.3125, 0.75, 1., 0.6875));
static SHAPE215: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.0625, 0., 0.0625, 0.9375, 0.03125, 0.9375));
static SHAPE216: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.0625, 0., 0.0625, 0.9375, 0.0625, 0.9375));
static SHAPE217: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0., 0.375, 0.6875, 0.0625, 0.625));
static SHAPE218: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0., 0.375, 0.6875, 0.125, 0.625));
static SHAPE219: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.375, 0., 0.3125, 0.625, 0.0625, 0.6875));
static SHAPE220: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.375, 0., 0.3125, 0.625, 0.125, 0.6875));
static SHAPE221: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0.375, 0.9375, 0.6875, 0.625, 1.));
static SHAPE222: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0.375, 0.875, 0.6875, 0.625, 1.));
static SHAPE223: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0.375, 0., 0.6875, 0.625, 0.0625));
static SHAPE224: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0.375, 0., 0.6875, 0.625, 0.125));
static SHAPE225: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.9375, 0.375, 0.3125, 1., 0.625, 0.6875));
static SHAPE226: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.875, 0.375, 0.3125, 1., 0.625, 0.6875));
static SHAPE227: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.375, 0.3125, 0.0625, 0.625, 0.6875));
static SHAPE228: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.375, 0.3125, 0.125, 0.625, 0.6875));
static SHAPE229: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0.9375, 0.375, 0.6875, 1., 0.625));
static SHAPE230: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0.875, 0.375, 0.6875, 1., 0.625));
static SHAPE231: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.375, 0.9375, 0.3125, 0.625, 1., 0.6875));
static SHAPE232: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.375, 0.875, 0.3125, 0.625, 1., 0.6875));
static SHAPE233: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.0625, 0., 0.0625, 0.9375, 0.9375, 0.9375));
static SHAPE234: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.0625, 0., 0.0625, 0.9375, 0.75, 0.9375));
static SHAPE235: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.375, 1., 1.5, 0.625);
    let s = Shapes::or(s, collision::box_shape(0.375, 0., 0., 0.625, 1.5, 0.375));
    Shapes::or(s, collision::box_shape(0.375, 0., 0.625, 0.625, 1.5, 1.))
});
static SHAPE236: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.375, 1., 1., 0.625);
    let s = Shapes::or(s, collision::box_shape(0.375, 0., 0., 0.625, 1., 0.375));
    Shapes::or(s, collision::box_shape(0.375, 0., 0.625, 0.625, 1., 1.))
});
static SHAPE237: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.375, 0., 0., 0.625, 1.5, 1.);
    Shapes::or(s, collision::box_shape(0.625, 0., 0.375, 1., 1.5, 0.625))
});
static SHAPE238: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.375, 0., 0., 0.625, 1., 1.);
    Shapes::or(s, collision::box_shape(0.625, 0., 0.375, 1., 1., 0.625))
});
static SHAPE239: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.375, 1., 1.5, 0.625);
    Shapes::or(s, collision::box_shape(0.375, 0., 0., 0.625, 1.5, 0.375))
});
static SHAPE240: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.375, 1., 1., 0.625);
    Shapes::or(s, collision::box_shape(0.375, 0., 0., 0.625, 1., 0.375))
});
static SHAPE241: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.375, 0., 0., 0.625, 1.5, 0.625);
    Shapes::or(s, collision::box_shape(0.625, 0., 0.375, 1., 1.5, 0.625))
});
static SHAPE242: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.375, 0., 0., 0.625, 1., 0.625);
    Shapes::or(s, collision::box_shape(0.625, 0., 0.375, 1., 1., 0.625))
});
static SHAPE243: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.375, 1., 1.5, 0.625);
    Shapes::or(s, collision::box_shape(0.375, 0., 0.625, 0.625, 1.5, 1.))
});
static SHAPE244: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.375, 1., 1., 0.625);
    Shapes::or(s, collision::box_shape(0.375, 0., 0.625, 0.625, 1., 1.))
});
static SHAPE245: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.375, 0., 0.375, 0.625, 1.5, 1.);
    Shapes::or(s, collision::box_shape(0.625, 0., 0.375, 1., 1.5, 0.625))
});
static SHAPE246: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.375, 0., 0.375, 0.625, 1., 1.);
    Shapes::or(s, collision::box_shape(0.625, 0., 0.375, 1., 1., 0.625))
});
static SHAPE247: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0.375, 1., 1.5, 0.625));
static SHAPE248: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0.375, 1., 1., 0.625));
static SHAPE249: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.375, 0., 0.375, 1., 1.5, 0.625));
static SHAPE250: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.375, 0., 0.375, 1., 1., 0.625));
static SHAPE251: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.375, 0.625, 1.5, 0.625);
    let s = Shapes::or(s, collision::box_shape(0.375, 0., 0., 0.625, 1.5, 0.375));
    Shapes::or(s, collision::box_shape(0.375, 0., 0.625, 0.625, 1.5, 1.))
});
static SHAPE252: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.375, 0.625, 1., 0.625);
    let s = Shapes::or(s, collision::box_shape(0.375, 0., 0., 0.625, 1., 0.375));
    Shapes::or(s, collision::box_shape(0.375, 0., 0.625, 0.625, 1., 1.))
});
static SHAPE253: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.375, 0., 0., 0.625, 1.5, 1.));
static SHAPE254: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.375, 0., 0., 0.625, 1., 1.));
static SHAPE255: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.375, 0.625, 1.5, 0.625);
    Shapes::or(s, collision::box_shape(0.375, 0., 0., 0.625, 1.5, 0.375))
});
static SHAPE256: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.375, 0.625, 1., 0.625);
    Shapes::or(s, collision::box_shape(0.375, 0., 0., 0.625, 1., 0.375))
});
static SHAPE257: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.375, 0., 0., 0.625, 1.5, 0.625));
static SHAPE258: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.375, 0., 0., 0.625, 1., 0.625));
static SHAPE259: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.375, 0.625, 1.5, 0.625);
    Shapes::or(s, collision::box_shape(0.375, 0., 0.625, 0.625, 1.5, 1.))
});
static SHAPE260: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.375, 0.625, 1., 0.625);
    Shapes::or(s, collision::box_shape(0.375, 0., 0.625, 0.625, 1., 1.))
});
static SHAPE261: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.375, 0., 0.375, 0.625, 1.5, 1.));
static SHAPE262: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.375, 0., 0.375, 0.625, 1., 1.));
static SHAPE263: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0.375, 0.625, 1.5, 0.625));
static SHAPE264: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0.375, 0.625, 1., 0.625));
static SHAPE265: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.375, 0., 0.375, 0.625, 1.5, 0.625));
static SHAPE266: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.375, 0., 0.375, 0.625, 1., 0.625));
static SHAPE267: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.0625, 0., 0.0625, 0.9375, 0.5, 0.9375));
static SHAPE268: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0., 0.0625, 0.9375, 0.5, 0.9375));
static SHAPE269: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0., 0.0625, 0.9375, 0.5, 0.9375));
static SHAPE270: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.4375, 0., 0.0625, 0.9375, 0.5, 0.9375));
static SHAPE271: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.5625, 0., 0.0625, 0.9375, 0.5, 0.9375));
static SHAPE272: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.6875, 0., 0.0625, 0.9375, 0.5, 0.9375));
static SHAPE273: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.8125, 0., 0.0625, 0.9375, 0.5, 0.9375));
static SHAPE274: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.8125, 0., 1., 1., 1.));
static SHAPE275: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 1., 0.1875, 1.));
static SHAPE276: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.4375, 1., 1., 0.5625);
    let s = Shapes::or(s, collision::box_shape(0.4375, 0., 0., 0.5625, 1., 0.4375));
    Shapes::or(s, collision::box_shape(0.4375, 0., 0.5625, 0.5625, 1., 1.))
});
static SHAPE277: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.4375, 0., 0., 0.5625, 1., 1.);
    Shapes::or(s, collision::box_shape(0.5625, 0., 0.4375, 1., 1., 0.5625))
});
static SHAPE278: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.4375, 1., 1., 0.5625);
    Shapes::or(s, collision::box_shape(0.4375, 0., 0., 0.5625, 1., 0.4375))
});
static SHAPE279: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.4375, 0., 0., 0.5625, 1., 0.5625);
    Shapes::or(s, collision::box_shape(0.5625, 0., 0.4375, 1., 1., 0.5625))
});
static SHAPE280: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.4375, 1., 1., 0.5625);
    Shapes::or(s, collision::box_shape(0.4375, 0., 0.5625, 0.5625, 1., 1.))
});
static SHAPE281: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.4375, 0., 0.4375, 0.5625, 1., 1.);
    Shapes::or(s, collision::box_shape(0.5625, 0., 0.4375, 1., 1., 0.5625))
});
static SHAPE282: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0.4375, 1., 1., 0.5625));
static SHAPE283: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.4375, 0., 0.4375, 1., 1., 0.5625));
static SHAPE284: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.4375, 0.5625, 1., 0.5625);
    let s = Shapes::or(s, collision::box_shape(0.4375, 0., 0., 0.5625, 1., 0.4375));
    Shapes::or(s, collision::box_shape(0.4375, 0., 0.5625, 0.5625, 1., 1.))
});
static SHAPE285: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.4375, 0., 0., 0.5625, 1., 1.));
static SHAPE286: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.4375, 0.5625, 1., 0.5625);
    Shapes::or(s, collision::box_shape(0.4375, 0., 0., 0.5625, 1., 0.4375))
});
static SHAPE287: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.4375, 0., 0., 0.5625, 1., 0.5625));
static SHAPE288: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.4375, 0.5625, 1., 0.5625);
    Shapes::or(s, collision::box_shape(0.4375, 0., 0.5625, 0.5625, 1., 1.))
});
static SHAPE289: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.4375, 0., 0.4375, 0.5625, 1., 1.));
static SHAPE290: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0.4375, 0.5625, 1., 0.5625));
static SHAPE291: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.4375, 0., 0.4375, 0.5625, 1., 0.5625));
static SHAPE292: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.40625, 0.40625, 1., 0.59375, 0.59375));
static SHAPE293: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.40625, 0., 0.40625, 0.59375, 1., 0.59375));
static SHAPE294: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.40625, 0.40625, 0., 0.59375, 0.59375, 1.));
static SHAPE295: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.375, 0., 0., 0.625, 0.625, 0.625));
static SHAPE296: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.375, 0., 0.375, 0.625, 0.625, 1.));
static SHAPE297: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0.375, 0.625, 0.625, 0.625));
static SHAPE298: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.375, 0., 0.375, 1., 0.625, 0.625));
static SHAPE299: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.4375, 0., 0.4375, 0.5625, 0.125, 0.5625));
static SHAPE300: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.4375, 0., 0.4375, 0.5625, 0.25, 0.5625));
static SHAPE301: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.4375, 0., 0.4375, 0.5625, 0.375, 0.5625));
static SHAPE302: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.4375, 0., 0.4375, 0.5625, 0.5, 0.5625));
static SHAPE303: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.4375, 0., 0.4375, 0.5625, 0.625, 0.5625));
static SHAPE304: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.4375, 0., 0.4375, 0.5625, 0.75, 0.5625));
static SHAPE305: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.4375, 0., 0.4375, 0.5625, 0.875, 0.5625));
static SHAPE306: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0.9375, 1., 1., 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 1., 0.9375),
    );
    Shapes::or(
        s,
        collision::box_shape(0.0625, 0.9375, 0.0625, 0.9375, 1., 0.9375),
    )
});
static SHAPE307: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0.9375, 1., 1., 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 1., 0.9375),
    );
    Shapes::or(
        s,
        collision::box_shape(0., 0.9375, 0.0625, 0.9375, 1., 0.9375),
    )
});
static SHAPE308: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0.9375, 1., 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 1., 0.9375),
    )
});
static SHAPE309: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0.9375, 1., 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 1., 0.9375),
    )
});
static SHAPE310: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0.0625, 0.0625, 1., 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.0625, 0.9375, 0.0625, 0.9375, 1., 1.),
    )
});
static SHAPE311: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0.0625, 0.0625, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0., 0.9375, 0.0625, 0.9375, 1., 1.))
});
static SHAPE312: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0., 1., 1., 0.0625));
    Shapes::or(s, collision::box_shape(0.9375, 0.0625, 0.0625, 1., 1., 1.))
});
static SHAPE313: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 1., 1., 0.0625));
    Shapes::or(s, collision::box_shape(0.9375, 0.0625, 0.0625, 1., 1., 1.))
});
static SHAPE314: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0.9375, 1., 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0.0625, 0., 1., 1., 0.9375));
    Shapes::or(
        s,
        collision::box_shape(0.0625, 0.9375, 0., 0.9375, 1., 0.9375),
    )
});
static SHAPE315: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0.9375, 1., 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0.0625, 0., 1., 1., 0.9375));
    Shapes::or(s, collision::box_shape(0., 0.9375, 0., 0.9375, 1., 0.9375))
});
static SHAPE316: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0.9375, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.9375, 0.0625, 0., 1., 1., 0.9375))
});
static SHAPE317: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0.9375, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.9375, 0.0625, 0., 1., 1., 0.9375))
});
static SHAPE318: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0.0625, 0., 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.0625, 0.9375, 0., 0.9375, 1., 1.))
});
static SHAPE319: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0.9375, 0.0625, 0., 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0., 0.9375, 0., 0.9375, 1., 1.))
});
static SHAPE320: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    Shapes::or(s, collision::box_shape(0.9375, 0.0625, 0., 1., 1., 1.))
});
static SHAPE321: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    Shapes::or(s, collision::box_shape(0.9375, 0.0625, 0., 1., 1., 1.))
});
static SHAPE322: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0.9375, 1., 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.0625, 0.9375, 0.0625, 1., 1., 0.9375),
    )
});
static SHAPE323: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0.9375, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0., 0.9375, 0.0625, 1., 1., 0.9375))
});
static SHAPE324: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0., 1., 1., 0.0625));
    Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0.9375, 1., 1., 1.))
});
static SHAPE325: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 1., 1., 0.0625));
    Shapes::or(s, collision::box_shape(0., 0.0625, 0.9375, 1., 1., 1.))
});
static SHAPE326: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0., 1., 1., 0.0625));
    Shapes::or(s, collision::box_shape(0.0625, 0.9375, 0.0625, 1., 1., 1.))
});
static SHAPE327: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 1., 1., 0.0625));
    Shapes::or(s, collision::box_shape(0., 0.9375, 0.0625, 1., 1., 1.))
});
static SHAPE328: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0., 1., 1., 0.0625))
});
static SHAPE329: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    Shapes::or(s, collision::box_shape(0., 0.0625, 0., 1., 1., 0.0625))
});
static SHAPE330: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0.9375, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.0625, 0.9375, 0., 1., 1., 0.9375))
});
static SHAPE331: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0.9375, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0., 0.9375, 0., 1., 1., 0.9375))
});
static SHAPE332: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0.9375, 1., 1., 1.))
});
static SHAPE333: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    Shapes::or(s, collision::box_shape(0., 0.0625, 0.9375, 1., 1., 1.))
});
static SHAPE334: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    Shapes::or(s, collision::box_shape(0.0625, 0.9375, 0., 1., 1., 1.))
});
static SHAPE335: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    Shapes::or(s, collision::box_shape(0., 0.9375, 0., 1., 1., 1.))
});
static SHAPE336: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.))
});
static SHAPE337: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0.375, 1., 0.8125, 0.625));
static SHAPE338: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.375, 0., 0., 0.625, 0.8125, 1.));
static SHAPE339: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.0625, 0., 0.0625, 0.9375, 0.09375, 0.9375));
static SHAPE340: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.5, 0., 1., 1., 1.));
static SHAPE341: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.25, 0., 0.25, 0.75, 1.5, 0.75));
static SHAPE342: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.75, 1.5, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1.5, 0.3125));
    Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1.5, 0.75))
});
static SHAPE343: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.75, 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    Shapes::or(
        s,
        collision::box_shape(0.25, 0.875, 0.3125, 0.75, 1., 0.6875),
    )
});
static SHAPE344: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.75, 1., 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75))
});
static SHAPE345: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0.3125, 0.6875, 1.5, 0.6875));
static SHAPE346: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0.3125, 0.6875, 0.875, 0.6875));
static SHAPE347: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0.3125, 0.6875, 1., 0.6875));
static SHAPE348: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1.5, 0.75);
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1.5, 1.))
});
static SHAPE349: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.75);
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 0.875, 1.))
});
static SHAPE350: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.75, 1.5, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1.5, 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1.5, 0.75));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1.5, 1.))
});
static SHAPE351: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.75, 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 0.875, 1.));
    Shapes::or(
        s,
        collision::box_shape(0.25, 0.875, 0.3125, 0.75, 1., 0.6875),
    )
});
static SHAPE352: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.75, 1., 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 0.875, 1.))
});
static SHAPE353: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0., 0.3125, 0.6875, 1.5, 1.));
static SHAPE354: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0., 0.3125, 0.6875, 0.875, 1.));
static SHAPE355: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.6875, 1.5, 0.6875);
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.6875, 0.6875, 1.5, 1.))
});
static SHAPE356: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.6875, 0.875, 0.6875);
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0.6875, 0.6875, 0.875, 1.),
    )
});
static SHAPE357: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.6875, 1., 0.6875);
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0.6875, 0.6875, 0.875, 1.),
    )
});
static SHAPE358: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.75);
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1., 1.))
});
static SHAPE359: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.75, 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.25, 0.875, 0.3125, 0.75, 1., 0.6875),
    )
});
static SHAPE360: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.75, 1., 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1., 1.))
});
static SHAPE361: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0., 0.3125, 0.6875, 1., 1.));
static SHAPE362: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.6875, 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.6875, 0.6875, 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0.875, 0.3125, 0.6875, 1., 0.6875),
    )
});
static SHAPE363: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.6875, 1., 0.6875);
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.6875, 0.6875, 1., 1.))
});
static SHAPE364: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1.5, 0.75);
    Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1.5, 0.25))
});
static SHAPE365: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.75);
    Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.25))
});
static SHAPE366: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.75, 1.5, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1.5, 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1.5, 0.75));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1.5, 0.25))
});
static SHAPE367: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.75, 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.25));
    Shapes::or(
        s,
        collision::box_shape(0.25, 0.875, 0.3125, 0.75, 1., 0.6875),
    )
});
static SHAPE368: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.75, 1., 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.25))
});
static SHAPE369: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0., 0., 0.6875, 1.5, 0.6875));
static SHAPE370: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.6875));
static SHAPE371: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.6875, 1.5, 0.6875);
    Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1.5, 0.3125))
});
static SHAPE372: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.6875, 0.875, 0.6875);
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.3125),
    )
});
static SHAPE373: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.6875, 1., 0.6875);
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.3125),
    )
});
static SHAPE374: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1.5, 0.75);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1.5, 0.25));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1.5, 1.))
});
static SHAPE375: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.75);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.25));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 0.875, 1.))
});
static SHAPE376: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.75, 1.5, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1.5, 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1.5, 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1.5, 0.25));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1.5, 1.))
});
static SHAPE377: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.75, 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.25));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 0.875, 1.));
    Shapes::or(
        s,
        collision::box_shape(0.25, 0.875, 0.3125, 0.75, 1., 0.6875),
    )
});
static SHAPE378: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.75, 1., 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.25));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 0.875, 1.))
});
static SHAPE379: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0., 0., 0.6875, 1.5, 1.));
static SHAPE380: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 1.));
static SHAPE381: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.6875, 1.5, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1.5, 0.3125));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.6875, 0.6875, 1.5, 1.))
});
static SHAPE382: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.6875, 0.875, 0.6875);
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.3125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0.6875, 0.6875, 0.875, 1.),
    )
});
static SHAPE383: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.6875, 1., 0.6875);
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.3125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0.6875, 0.6875, 0.875, 1.),
    )
});
static SHAPE384: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.75);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.25));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1., 1.))
});
static SHAPE385: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.75, 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.25));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.25, 0.875, 0.3125, 0.75, 1., 0.6875),
    )
});
static SHAPE386: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.75, 1., 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.25));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1., 1.))
});
static SHAPE387: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 1.);
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0.875, 0.3125, 0.6875, 1., 1.),
    )
});
static SHAPE388: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.6875, 0.875, 0.6875);
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.3125),
    );
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.6875, 0.6875, 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0.875, 0.3125, 0.6875, 1., 0.6875),
    )
});
static SHAPE389: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.6875, 1., 0.6875);
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.3125),
    );
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.6875, 0.6875, 1., 1.))
});
static SHAPE390: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.75);
    Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.25))
});
static SHAPE391: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.75, 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.25));
    Shapes::or(
        s,
        collision::box_shape(0.25, 0.875, 0.3125, 0.75, 1., 0.6875),
    )
});
static SHAPE392: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.75, 1., 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.25))
});
static SHAPE393: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.6875));
static SHAPE394: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.6875, 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.3125));
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0.875, 0.3125, 0.6875, 1., 0.6875),
    )
});
static SHAPE395: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.6875, 1., 0.6875);
    Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.3125))
});
static SHAPE396: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.75);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.25));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 0.875, 1.))
});
static SHAPE397: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.75, 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.25));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 0.875, 1.));
    Shapes::or(
        s,
        collision::box_shape(0.25, 0.875, 0.3125, 0.75, 1., 0.6875),
    )
});
static SHAPE398: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.75, 1., 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.25));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 0.875, 1.))
});
static SHAPE399: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 1.);
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0.875, 0., 0.6875, 1., 0.6875),
    )
});
static SHAPE400: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.6875, 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.3125));
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0.6875, 0.6875, 0.875, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0.875, 0.3125, 0.6875, 1., 0.6875),
    )
});
static SHAPE401: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.6875, 1., 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.3125));
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0.6875, 0.6875, 0.875, 1.),
    )
});
static SHAPE402: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.75);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.25));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1., 1.))
});
static SHAPE403: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.75, 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.25));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.25, 0.875, 0.3125, 0.75, 1., 0.6875),
    )
});
static SHAPE404: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.75, 1., 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.25));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1., 1.))
});
static SHAPE405: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0., 0., 0.6875, 1., 1.));
static SHAPE406: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.6875, 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.6875, 0.6875, 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0.875, 0.3125, 0.6875, 1., 0.6875),
    )
});
static SHAPE407: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 0.6875, 1., 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.3125));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.6875, 0.6875, 1., 1.))
});
static SHAPE408: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1.5, 0.75);
    Shapes::or(s, collision::box_shape(0.75, 0., 0.3125, 1., 1.5, 0.6875))
});
static SHAPE409: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.75);
    Shapes::or(s, collision::box_shape(0.75, 0., 0.3125, 1., 0.875, 0.6875))
});
static SHAPE410: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 1.5, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1.5, 0.3125));
    Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1.5, 0.75))
});
static SHAPE411: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    Shapes::or(
        s,
        collision::box_shape(0.25, 0.875, 0.3125, 0.75, 1., 0.6875),
    )
});
static SHAPE412: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    Shapes::or(s, collision::box_shape(0., 0.875, 0.3125, 0.75, 1., 0.6875))
});
static SHAPE413: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0., 0.3125, 1., 1.5, 0.6875));
static SHAPE414: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0., 0.3125, 1., 0.875, 0.6875));
static SHAPE415: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0.3125, 1., 1.5, 0.6875));
static SHAPE416: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875));
static SHAPE417: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    Shapes::or(
        s,
        collision::box_shape(0., 0.875, 0.3125, 0.6875, 1., 0.6875),
    )
});
static SHAPE418: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1.5, 0.75);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1.5, 1.));
    Shapes::or(s, collision::box_shape(0.75, 0., 0.3125, 1., 1.5, 0.6875))
});
static SHAPE419: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.75);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 0.875, 1.));
    Shapes::or(s, collision::box_shape(0.75, 0., 0.3125, 1., 0.875, 0.6875))
});
static SHAPE420: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 1.5, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1.5, 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1.5, 0.75));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1.5, 1.))
});
static SHAPE421: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 0.875, 1.));
    Shapes::or(
        s,
        collision::box_shape(0.25, 0.875, 0.3125, 0.75, 1., 0.6875),
    )
});
static SHAPE422: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 0.875, 1.));
    Shapes::or(s, collision::box_shape(0., 0.875, 0.3125, 0.75, 1., 0.6875))
});
static SHAPE423: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.3125, 0., 0.3125, 0.6875, 1.5, 1.);
    Shapes::or(s, collision::box_shape(0.6875, 0., 0.3125, 1., 1.5, 0.6875))
});
static SHAPE424: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.3125, 0., 0.3125, 0.6875, 0.875, 1.);
    Shapes::or(
        s,
        collision::box_shape(0.6875, 0., 0.3125, 1., 0.875, 0.6875),
    )
});
static SHAPE425: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 1.5, 0.6875);
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.6875, 0.6875, 1.5, 1.))
});
static SHAPE426: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0.6875, 0.6875, 0.875, 1.),
    )
});
static SHAPE427: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0.6875, 0.6875, 0.875, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0., 0.875, 0.3125, 0.6875, 1., 0.6875),
    )
});
static SHAPE428: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.75);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1., 1.));
    Shapes::or(s, collision::box_shape(0.75, 0., 0.3125, 1., 0.875, 0.6875))
});
static SHAPE429: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.25, 0.875, 0.3125, 0.75, 1., 0.6875),
    )
});
static SHAPE430: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1., 1.));
    Shapes::or(s, collision::box_shape(0., 0.875, 0.3125, 0.75, 1., 0.6875))
});
static SHAPE431: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.3125, 0., 0.3125, 0.6875, 1., 1.);
    Shapes::or(
        s,
        collision::box_shape(0.6875, 0., 0.3125, 1., 0.875, 0.6875),
    )
});
static SHAPE432: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.6875, 0.6875, 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0.875, 0.3125, 0.6875, 1., 0.6875),
    )
});
static SHAPE433: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.6875, 0.6875, 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0., 0.875, 0.3125, 0.6875, 1., 0.6875),
    )
});
static SHAPE434: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1.5, 0.75);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1.5, 0.25));
    Shapes::or(s, collision::box_shape(0.75, 0., 0.3125, 1., 1.5, 0.6875))
});
static SHAPE435: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.75);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.25));
    Shapes::or(s, collision::box_shape(0.75, 0., 0.3125, 1., 0.875, 0.6875))
});
static SHAPE436: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 1.5, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1.5, 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1.5, 0.75));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1.5, 0.25))
});
static SHAPE437: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.25));
    Shapes::or(
        s,
        collision::box_shape(0.25, 0.875, 0.3125, 0.75, 1., 0.6875),
    )
});
static SHAPE438: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.25));
    Shapes::or(s, collision::box_shape(0., 0.875, 0.3125, 0.75, 1., 0.6875))
});
static SHAPE439: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.3125, 0., 0., 0.6875, 1.5, 0.6875);
    Shapes::or(s, collision::box_shape(0.6875, 0., 0.3125, 1., 1.5, 0.6875))
});
static SHAPE440: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.6875);
    Shapes::or(
        s,
        collision::box_shape(0.6875, 0., 0.3125, 1., 0.875, 0.6875),
    )
});
static SHAPE441: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 1.5, 0.6875);
    Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1.5, 0.3125))
});
static SHAPE442: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.3125),
    )
});
static SHAPE443: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.3125),
    );
    Shapes::or(
        s,
        collision::box_shape(0., 0.875, 0.3125, 0.6875, 1., 0.6875),
    )
});
static SHAPE444: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1.5, 0.75);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1.5, 0.25));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1.5, 1.));
    Shapes::or(s, collision::box_shape(0.75, 0., 0.3125, 1., 1.5, 0.6875))
});
static SHAPE445: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.75);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.25));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 0.875, 1.));
    Shapes::or(s, collision::box_shape(0.75, 0., 0.3125, 1., 0.875, 0.6875))
});
static SHAPE446: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 1.5, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1.5, 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1.5, 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1.5, 0.25));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1.5, 1.))
});
static SHAPE447: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.25));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 0.875, 1.));
    Shapes::or(
        s,
        collision::box_shape(0.25, 0.875, 0.3125, 0.75, 1., 0.6875),
    )
});
static SHAPE448: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.25));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 0.875, 1.));
    Shapes::or(s, collision::box_shape(0., 0.875, 0.3125, 0.75, 1., 0.6875))
});
static SHAPE449: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.3125, 0., 0., 0.6875, 1.5, 1.);
    Shapes::or(s, collision::box_shape(0.6875, 0., 0.3125, 1., 1.5, 0.6875))
});
static SHAPE450: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 1.);
    Shapes::or(
        s,
        collision::box_shape(0.6875, 0., 0.3125, 1., 0.875, 0.6875),
    )
});
static SHAPE451: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 1.5, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1.5, 0.3125));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.6875, 0.6875, 1.5, 1.))
});
static SHAPE452: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.3125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0.6875, 0.6875, 0.875, 1.),
    )
});
static SHAPE453: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.3125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0.6875, 0.6875, 0.875, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0., 0.875, 0.3125, 0.6875, 1., 0.6875),
    )
});
static SHAPE454: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.75);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.25));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1., 1.));
    Shapes::or(s, collision::box_shape(0.75, 0., 0.3125, 1., 0.875, 0.6875))
});
static SHAPE455: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.25));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.25, 0.875, 0.3125, 0.75, 1., 0.6875),
    )
});
static SHAPE456: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.25));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1., 1.));
    Shapes::or(s, collision::box_shape(0., 0.875, 0.3125, 0.75, 1., 0.6875))
});
static SHAPE457: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 1.);
    let s = Shapes::or(
        s,
        collision::box_shape(0.6875, 0., 0.3125, 1., 0.875, 0.6875),
    );
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0.875, 0.3125, 0.6875, 1., 1.),
    )
});
static SHAPE458: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.3125),
    );
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.6875, 0.6875, 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0.875, 0.3125, 0.6875, 1., 0.6875),
    )
});
static SHAPE459: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.3125),
    );
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.6875, 0.6875, 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0., 0.875, 0.3125, 0.6875, 1., 0.6875),
    )
});
static SHAPE460: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.75);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.25));
    Shapes::or(s, collision::box_shape(0.75, 0., 0.3125, 1., 0.875, 0.6875))
});
static SHAPE461: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.25));
    Shapes::or(
        s,
        collision::box_shape(0.25, 0.875, 0.3125, 0.75, 1., 0.6875),
    )
});
static SHAPE462: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.25));
    Shapes::or(s, collision::box_shape(0., 0.875, 0.3125, 0.75, 1., 0.6875))
});
static SHAPE463: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.6875);
    Shapes::or(
        s,
        collision::box_shape(0.6875, 0., 0.3125, 1., 0.875, 0.6875),
    )
});
static SHAPE464: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.3125));
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0.875, 0.3125, 0.6875, 1., 0.6875),
    )
});
static SHAPE465: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.3125));
    Shapes::or(
        s,
        collision::box_shape(0., 0.875, 0.3125, 0.6875, 1., 0.6875),
    )
});
static SHAPE466: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.75);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.25));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 0.875, 1.));
    Shapes::or(s, collision::box_shape(0.75, 0., 0.3125, 1., 0.875, 0.6875))
});
static SHAPE467: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.25));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 0.875, 1.));
    Shapes::or(
        s,
        collision::box_shape(0.25, 0.875, 0.3125, 0.75, 1., 0.6875),
    )
});
static SHAPE468: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.25));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 0.875, 1.));
    Shapes::or(s, collision::box_shape(0., 0.875, 0.3125, 0.75, 1., 0.6875))
});
static SHAPE469: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 1.);
    let s = Shapes::or(
        s,
        collision::box_shape(0.6875, 0., 0.3125, 1., 0.875, 0.6875),
    );
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0.875, 0., 0.6875, 1., 0.6875),
    )
});
static SHAPE470: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.3125));
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0.6875, 0.6875, 0.875, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0.875, 0.3125, 0.6875, 1., 0.6875),
    )
});
static SHAPE471: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.3125));
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0.6875, 0.6875, 0.875, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0., 0.875, 0.3125, 0.6875, 1., 0.6875),
    )
});
static SHAPE472: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.75);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.25));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1., 1.));
    Shapes::or(s, collision::box_shape(0.75, 0., 0.3125, 1., 0.875, 0.6875))
});
static SHAPE473: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.25));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.25, 0.875, 0.3125, 0.75, 1., 0.6875),
    )
});
static SHAPE474: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.25));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1., 1.));
    Shapes::or(s, collision::box_shape(0., 0.875, 0.3125, 0.75, 1., 0.6875))
});
static SHAPE475: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.3125, 0., 0., 0.6875, 1., 1.);
    Shapes::or(
        s,
        collision::box_shape(0.6875, 0., 0.3125, 1., 0.875, 0.6875),
    )
});
static SHAPE476: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.6875, 0.6875, 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0.875, 0.3125, 0.6875, 1., 0.6875),
    )
});
static SHAPE477: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.6875, 0.6875, 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0., 0.875, 0.3125, 0.6875, 1., 0.6875),
    )
});
static SHAPE478: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.75);
    Shapes::or(s, collision::box_shape(0.75, 0., 0.3125, 1., 1., 0.6875))
});
static SHAPE479: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    Shapes::or(s, collision::box_shape(0.25, 0.875, 0.3125, 1., 1., 0.6875))
});
static SHAPE480: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 1., 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75))
});
static SHAPE481: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0., 0.3125, 1., 1., 0.6875));
static SHAPE482: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0.875, 0.3125, 1., 1., 0.6875),
    )
});
static SHAPE483: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0.3125, 1., 1., 0.6875));
static SHAPE484: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.75);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 0.875, 1.));
    Shapes::or(s, collision::box_shape(0.75, 0., 0.3125, 1., 1., 0.6875))
});
static SHAPE485: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 0.875, 1.));
    Shapes::or(s, collision::box_shape(0.25, 0.875, 0.3125, 1., 1., 0.6875))
});
static SHAPE486: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 1., 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 0.875, 1.))
});
static SHAPE487: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.3125, 0., 0.3125, 0.6875, 0.875, 1.);
    let s = Shapes::or(s, collision::box_shape(0.6875, 0., 0.3125, 1., 1., 0.6875));
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0.875, 0.3125, 0.6875, 1., 0.6875),
    )
});
static SHAPE488: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0.6875, 0.6875, 0.875, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0.875, 0.3125, 1., 1., 0.6875),
    )
});
static SHAPE489: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 1., 0.6875);
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0.6875, 0.6875, 0.875, 1.),
    )
});
static SHAPE490: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.75);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1., 1.));
    Shapes::or(s, collision::box_shape(0.75, 0., 0.3125, 1., 1., 0.6875))
});
static SHAPE491: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1., 1.));
    Shapes::or(s, collision::box_shape(0.25, 0.875, 0.3125, 1., 1., 0.6875))
});
static SHAPE492: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 1., 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1., 1.))
});
static SHAPE493: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.3125, 0., 0.3125, 0.6875, 1., 1.);
    Shapes::or(s, collision::box_shape(0.6875, 0., 0.3125, 1., 1., 0.6875))
});
static SHAPE494: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.6875, 0.6875, 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0.875, 0.3125, 1., 1., 0.6875),
    )
});
static SHAPE495: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 1., 0.6875);
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.6875, 0.6875, 1., 1.))
});
static SHAPE496: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.75);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.25));
    Shapes::or(s, collision::box_shape(0.75, 0., 0.3125, 1., 1., 0.6875))
});
static SHAPE497: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.25));
    Shapes::or(s, collision::box_shape(0.25, 0.875, 0.3125, 1., 1., 0.6875))
});
static SHAPE498: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 1., 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.25))
});
static SHAPE499: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.6875, 0., 0.3125, 1., 1., 0.6875));
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0.875, 0.3125, 0.6875, 1., 0.6875),
    )
});
static SHAPE500: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.3125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0.875, 0.3125, 1., 1., 0.6875),
    )
});
static SHAPE501: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 1., 0.6875);
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.3125),
    )
});
static SHAPE502: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.75);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.25));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 0.875, 1.));
    Shapes::or(s, collision::box_shape(0.75, 0., 0.3125, 1., 1., 0.6875))
});
static SHAPE503: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.25));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 0.875, 1.));
    Shapes::or(s, collision::box_shape(0.25, 0.875, 0.3125, 1., 1., 0.6875))
});
static SHAPE504: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 1., 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.25));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 0.875, 1.))
});
static SHAPE505: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 1.);
    let s = Shapes::or(s, collision::box_shape(0.6875, 0., 0.3125, 1., 1., 0.6875));
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0.875, 0.3125, 0.6875, 1., 0.6875),
    )
});
static SHAPE506: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.3125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0.6875, 0.6875, 0.875, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0.875, 0.3125, 1., 1., 0.6875),
    )
});
static SHAPE507: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 1., 0.6875);
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.3125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0.6875, 0.6875, 0.875, 1.),
    )
});
static SHAPE508: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.75);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.25));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1., 1.));
    Shapes::or(s, collision::box_shape(0.75, 0., 0.3125, 1., 1., 0.6875))
});
static SHAPE509: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.25));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1., 1.));
    Shapes::or(s, collision::box_shape(0.25, 0.875, 0.3125, 1., 1., 0.6875))
});
static SHAPE510: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 1., 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.25));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1., 1.))
});
static SHAPE511: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 1.);
    let s = Shapes::or(s, collision::box_shape(0.6875, 0., 0.3125, 1., 1., 0.6875));
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0.875, 0.3125, 0.6875, 1., 1.),
    )
});
static SHAPE512: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.3125),
    );
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.6875, 0.6875, 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0.875, 0.3125, 1., 1., 0.6875),
    )
});
static SHAPE513: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 1., 0.6875);
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 0.3125),
    );
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.6875, 0.6875, 1., 1.))
});
static SHAPE514: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.75);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.25));
    Shapes::or(s, collision::box_shape(0.75, 0., 0.3125, 1., 1., 0.6875))
});
static SHAPE515: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.25));
    Shapes::or(s, collision::box_shape(0.25, 0.875, 0.3125, 1., 1., 0.6875))
});
static SHAPE516: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 1., 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.25))
});
static SHAPE517: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.6875);
    Shapes::or(s, collision::box_shape(0.6875, 0., 0.3125, 1., 1., 0.6875))
});
static SHAPE518: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.3125));
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0.875, 0.3125, 1., 1., 0.6875),
    )
});
static SHAPE519: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 1., 0.6875);
    Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.3125))
});
static SHAPE520: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.75);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.25));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 0.875, 1.));
    Shapes::or(s, collision::box_shape(0.75, 0., 0.3125, 1., 1., 0.6875))
});
static SHAPE521: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.25));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 0.875, 1.));
    Shapes::or(s, collision::box_shape(0.25, 0.875, 0.3125, 1., 1., 0.6875))
});
static SHAPE522: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 1., 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.25));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 0.875, 1.))
});
static SHAPE523: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.3125, 0., 0., 0.6875, 0.875, 1.);
    let s = Shapes::or(s, collision::box_shape(0.6875, 0., 0.3125, 1., 1., 0.6875));
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0.875, 0., 0.6875, 1., 0.6875),
    )
});
static SHAPE524: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.3125));
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0.6875, 0.6875, 0.875, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0.875, 0.3125, 1., 1., 0.6875),
    )
});
static SHAPE525: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 1., 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.3125));
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0., 0.6875, 0.6875, 0.875, 1.),
    )
});
static SHAPE526: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.75);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.25));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1., 1.));
    Shapes::or(s, collision::box_shape(0.75, 0., 0.3125, 1., 1., 0.6875))
});
static SHAPE527: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.25));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1., 1.));
    Shapes::or(s, collision::box_shape(0.25, 0.875, 0.3125, 1., 1., 0.6875))
});
static SHAPE528: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 1., 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.25, 0.75, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0., 0.6875, 0.75, 1., 0.75));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.25));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.75, 0.6875, 1., 1.))
});
static SHAPE529: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.3125, 0., 0., 0.6875, 1., 1.);
    Shapes::or(s, collision::box_shape(0.6875, 0., 0.3125, 1., 1., 0.6875))
});
static SHAPE530: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 0.875, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.3125));
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0.6875, 0.6875, 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.3125, 0.875, 0.3125, 1., 1., 0.6875),
    )
});
static SHAPE531: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.3125, 1., 1., 0.6875);
    let s = Shapes::or(s, collision::box_shape(0.3125, 0., 0., 0.6875, 1., 0.3125));
    Shapes::or(s, collision::box_shape(0.3125, 0., 0.6875, 0.6875, 1., 1.))
});
static SHAPE532: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 1., 0.3125, 1.));
static SHAPE533: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 1., 0.6875, 1.));
static SHAPE534: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.0625, 0., 0.0625, 0.9375, 0.125, 0.9375);
    Shapes::or(
        s,
        collision::box_shape(0.4375, 0.125, 0.4375, 0.5625, 0.875, 0.5625),
    )
});
static SHAPE535: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.125, 1., 0.25);
    let s = Shapes::or(s, collision::box_shape(0., 0., 0.75, 0.125, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.125, 0., 0., 0.25, 1., 0.125));
    let s = Shapes::or(s, collision::box_shape(0.125, 0., 0.875, 0.25, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.75, 0., 0., 1., 1., 0.125));
    let s = Shapes::or(s, collision::box_shape(0.75, 0., 0.875, 1., 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.875, 0., 0.125, 1., 1., 0.25));
    let s = Shapes::or(s, collision::box_shape(0.875, 0., 0.75, 1., 1., 0.875));
    let s = Shapes::or(s, collision::box_shape(0., 0.1875, 0.25, 1., 0.25, 0.75));
    let s = Shapes::or(
        s,
        collision::box_shape(0.125, 0.1875, 0.125, 0.875, 0.25, 0.25),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.125, 0.1875, 0.75, 0.875, 0.25, 0.875),
    );
    let s = Shapes::or(s, collision::box_shape(0.25, 0.1875, 0., 0.75, 1., 0.125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0.1875, 0.875, 0.75, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0., 0.25, 0.25, 0.125, 1., 0.75));
    Shapes::or(s, collision::box_shape(0.875, 0.25, 0.25, 1., 1., 0.75))
});
static SHAPE536: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.375, 0., 1., 0.75, 1.));
static SHAPE537: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.8125, 1.);
    Shapes::or(s, collision::box_shape(0.25, 0.8125, 0.25, 0.75, 1., 0.75))
});
static SHAPE538: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.375, 0.4375, 0.0625, 0.625, 0.75, 0.3125));
static SHAPE539: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.375, 0.4375, 0.6875, 0.625, 0.75, 0.9375));
static SHAPE540: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.0625, 0.4375, 0.375, 0.3125, 0.75, 0.625));
static SHAPE541: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.6875, 0.4375, 0.375, 0.9375, 0.75, 0.625));
static SHAPE542: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0.3125, 0.0625, 0.6875, 0.75, 0.4375));
static SHAPE543: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0.3125, 0.5625, 0.6875, 0.75, 0.9375));
static SHAPE544: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.0625, 0.3125, 0.3125, 0.4375, 0.75, 0.6875));
static SHAPE545: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.5625, 0.3125, 0.3125, 0.9375, 0.75, 0.6875));
static SHAPE546: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.25, 0.1875, 0.0625, 0.75, 0.75, 0.5625));
static SHAPE547: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.25, 0.1875, 0.4375, 0.75, 0.75, 0.9375));
static SHAPE548: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.0625, 0.1875, 0.25, 0.5625, 0.75, 0.75));
static SHAPE549: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.4375, 0.1875, 0.25, 0.9375, 0.75, 0.75));
static SHAPE550: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0., 0.625, 0.6875, 0.625, 1.));
static SHAPE551: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0., 0., 0.6875, 0.625, 0.375));
static SHAPE552: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.625, 0., 0.3125, 1., 0.625, 0.6875));
static SHAPE553: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0.3125, 0.375, 0.625, 0.6875));
static SHAPE554: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.0625, 0., 1., 0.15625, 1.));
static SHAPE555: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 1., 0.4375, 1.));
static SHAPE556: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 1., 0.5625, 1.));
static SHAPE557: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.25, 0., 0.25, 0.75, 0.5, 0.75));
static SHAPE558: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.25, 0.25, 0.5, 0.75, 0.75, 1.));
static SHAPE559: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.25, 0.25, 0., 0.75, 0.75, 0.5));
static SHAPE560: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.5, 0.25, 0.25, 1., 0.75, 0.75));
static SHAPE561: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.25, 0.25, 0.5, 0.75, 0.75));
static SHAPE562: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.5, 0.8125));
static SHAPE563: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0.25, 0.5, 0.8125, 0.75, 1.));
static SHAPE564: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0.25, 0., 0.8125, 0.75, 0.5));
static SHAPE565: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.5, 0.25, 0.1875, 1., 0.75, 0.8125));
static SHAPE566: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.25, 0.1875, 0.5, 0.75, 0.8125));
static SHAPE567: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.125, 0., 0.125, 0.875, 0.25, 0.875);
    let s = Shapes::or(
        s,
        collision::box_shape(0.25, 0.25, 0.1875, 0.75, 0.3125, 0.8125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.375, 0.3125, 0.25, 0.625, 1., 0.75),
    );
    let s = Shapes::or(s, collision::box_shape(0.1875, 0.625, 0., 0.375, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.375, 0.625, 0., 0.8125, 1., 0.25));
    let s = Shapes::or(s, collision::box_shape(0.375, 0.625, 0.75, 0.8125, 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.625, 0.625, 0.25, 0.8125, 1., 0.75),
    )
});
static SHAPE568: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.125, 0., 0.125, 0.875, 0.25, 0.875);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.25, 0.25, 0.8125, 0.3125, 0.75),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.25, 0.3125, 0.375, 0.75, 1., 0.625),
    );
    let s = Shapes::or(s, collision::box_shape(0., 0.625, 0.1875, 0.25, 1., 0.8125));
    let s = Shapes::or(s, collision::box_shape(0.25, 0.625, 0.1875, 1., 1., 0.375));
    let s = Shapes::or(s, collision::box_shape(0.25, 0.625, 0.625, 1., 1., 0.8125));
    Shapes::or(s, collision::box_shape(0.75, 0.625, 0.375, 1., 1., 0.625))
});
static SHAPE569: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.375, 0., 0.375, 0.625, 0.6875, 0.625);
    let s = Shapes::or(
        s,
        collision::box_shape(0.25, 0.25, 0.25, 0.375, 0.6875, 0.75),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.375, 0.25, 0.25, 0.75, 0.6875, 0.375),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.375, 0.25, 0.625, 0.75, 0.6875, 0.75),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.625, 0.25, 0.375, 0.75, 0.6875, 0.625),
    );
    let s = Shapes::or(s, collision::box_shape(0., 0.625, 0., 0.25, 0.6875, 1.));
    let s = Shapes::or(s, collision::box_shape(0.25, 0.625, 0., 1., 0.6875, 0.25));
    let s = Shapes::or(s, collision::box_shape(0.25, 0.625, 0.75, 1., 0.6875, 1.));
    let s = Shapes::or(s, collision::box_shape(0.75, 0.625, 0.25, 1., 0.6875, 0.75));
    let s = Shapes::or(s, collision::box_shape(0., 0.6875, 0., 0.125, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.125, 0.6875, 0., 1., 1., 0.125));
    let s = Shapes::or(s, collision::box_shape(0.125, 0.6875, 0.875, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.875, 0.6875, 0.125, 1., 1., 0.875))
});
static SHAPE570: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0.25, 0.25, 0.75, 0.6875, 0.75);
    let s = Shapes::or(s, collision::box_shape(0.375, 0.25, 0., 0.625, 0.5, 0.25));
    let s = Shapes::or(s, collision::box_shape(0., 0.625, 0., 0.25, 0.6875, 1.));
    let s = Shapes::or(s, collision::box_shape(0.25, 0.625, 0., 1., 0.6875, 0.25));
    let s = Shapes::or(s, collision::box_shape(0.25, 0.625, 0.75, 1., 0.6875, 1.));
    let s = Shapes::or(s, collision::box_shape(0.75, 0.625, 0.25, 1., 0.6875, 0.75));
    let s = Shapes::or(s, collision::box_shape(0., 0.6875, 0., 0.125, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.125, 0.6875, 0., 1., 1., 0.125));
    let s = Shapes::or(s, collision::box_shape(0.125, 0.6875, 0.875, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.875, 0.6875, 0.125, 1., 1., 0.875))
});
static SHAPE571: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0.25, 0.25, 0.75, 0.6875, 0.75);
    let s = Shapes::or(s, collision::box_shape(0.375, 0.25, 0.75, 0.625, 0.5, 1.));
    let s = Shapes::or(s, collision::box_shape(0., 0.625, 0., 0.25, 0.6875, 1.));
    let s = Shapes::or(s, collision::box_shape(0.25, 0.625, 0., 1., 0.6875, 0.25));
    let s = Shapes::or(s, collision::box_shape(0.25, 0.625, 0.75, 1., 0.6875, 1.));
    let s = Shapes::or(s, collision::box_shape(0.75, 0.625, 0.25, 1., 0.6875, 0.75));
    let s = Shapes::or(s, collision::box_shape(0., 0.6875, 0., 0.125, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.125, 0.6875, 0., 1., 1., 0.125));
    let s = Shapes::or(s, collision::box_shape(0.125, 0.6875, 0.875, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.875, 0.6875, 0.125, 1., 1., 0.875))
});
static SHAPE572: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0.25, 0.375, 0.75, 0.5, 0.625);
    let s = Shapes::or(
        s,
        collision::box_shape(0.25, 0.25, 0.25, 0.75, 0.6875, 0.375),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.25, 0.25, 0.625, 0.75, 0.6875, 0.75),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.25, 0.5, 0.375, 0.75, 0.6875, 0.625),
    );
    let s = Shapes::or(s, collision::box_shape(0., 0.625, 0., 0.25, 0.6875, 1.));
    let s = Shapes::or(s, collision::box_shape(0.25, 0.625, 0., 1., 0.6875, 0.25));
    let s = Shapes::or(s, collision::box_shape(0.25, 0.625, 0.75, 1., 0.6875, 1.));
    let s = Shapes::or(s, collision::box_shape(0.75, 0.625, 0.25, 1., 0.6875, 0.75));
    let s = Shapes::or(s, collision::box_shape(0., 0.6875, 0., 0.125, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.125, 0.6875, 0., 1., 1., 0.125));
    let s = Shapes::or(s, collision::box_shape(0.125, 0.6875, 0.875, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.875, 0.6875, 0.125, 1., 1., 0.875))
});
static SHAPE573: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0.25, 0.25, 0.75, 0.6875, 0.75);
    let s = Shapes::or(s, collision::box_shape(0.75, 0.25, 0.375, 1., 0.5, 0.625));
    let s = Shapes::or(s, collision::box_shape(0., 0.625, 0., 0.25, 0.6875, 1.));
    let s = Shapes::or(s, collision::box_shape(0.25, 0.625, 0., 1., 0.6875, 0.25));
    let s = Shapes::or(s, collision::box_shape(0.25, 0.625, 0.75, 1., 0.6875, 1.));
    let s = Shapes::or(s, collision::box_shape(0.75, 0.625, 0.25, 1., 0.6875, 0.75));
    let s = Shapes::or(s, collision::box_shape(0., 0.6875, 0., 0.125, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.125, 0.6875, 0., 1., 1., 0.125));
    let s = Shapes::or(s, collision::box_shape(0.125, 0.6875, 0.875, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.875, 0.6875, 0.125, 1., 1., 0.875))
});
static SHAPE574: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0.875, 1., 0.78125, 1.));
static SHAPE575: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 1., 0.78125, 0.125));
static SHAPE576: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.875, 0., 0., 1., 0.78125, 1.));
static SHAPE577: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 0.125, 0.78125, 1.));
static SHAPE578: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.375, 0.375, 0., 0.625, 0.625, 1.));
static SHAPE579: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.375, 0.375, 1., 0.625, 0.625));
static SHAPE580: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 1., 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.1875, 0.1875, 0.1875, 0.8125, 0.8125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0.8125, 0.8125, 0.8125, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.8125, 0.1875, 0.1875, 1., 0.8125, 0.8125),
    )
});
static SHAPE581: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 1., 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0.8125, 0.8125, 0.8125, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.8125, 0.1875, 0.1875, 1., 0.8125, 0.8125),
    )
});
static SHAPE582: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.8125, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.1875, 0.1875, 0.1875, 0.8125, 0.8125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0.8125, 0.8125, 0.8125, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.8125, 0.1875, 0.1875, 1., 0.8125, 0.8125),
    )
});
static SHAPE583: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.8125, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0.8125, 0.8125, 0.8125, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.8125, 0.1875, 0.1875, 1., 0.8125, 0.8125),
    )
});
static SHAPE584: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 1., 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.1875, 0.1875, 0.1875, 0.8125, 0.8125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.1875),
    );
    Shapes::or(
        s,
        collision::box_shape(0.8125, 0.1875, 0.1875, 1., 0.8125, 0.8125),
    )
});
static SHAPE585: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 1., 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.1875),
    );
    Shapes::or(
        s,
        collision::box_shape(0.8125, 0.1875, 0.1875, 1., 0.8125, 0.8125),
    )
});
static SHAPE586: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.8125, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.1875, 0.1875, 0.1875, 0.8125, 0.8125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.1875),
    );
    Shapes::or(
        s,
        collision::box_shape(0.8125, 0.1875, 0.1875, 1., 0.8125, 0.8125),
    )
});
static SHAPE587: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.8125, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.1875),
    );
    Shapes::or(
        s,
        collision::box_shape(0.8125, 0.1875, 0.1875, 1., 0.8125, 0.8125),
    )
});
static SHAPE588: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 1., 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.1875, 0.1875, 0.1875, 0.8125, 0.8125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0.8125, 0.8125, 0.8125, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.8125, 0.1875, 0.1875, 1., 0.8125, 0.8125),
    )
});
static SHAPE589: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 1., 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0.8125, 0.8125, 0.8125, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.8125, 0.1875, 0.1875, 1., 0.8125, 0.8125),
    )
});
static SHAPE590: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.8125, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.1875, 0.1875, 0.1875, 0.8125, 0.8125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0.8125, 0.8125, 0.8125, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.8125, 0.1875, 0.1875, 1., 0.8125, 0.8125),
    )
});
static SHAPE591: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.8125, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0.8125, 0.8125, 0.8125, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.8125, 0.1875, 0.1875, 1., 0.8125, 0.8125),
    )
});
static SHAPE592: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 1., 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.1875, 0.1875, 0.1875, 0.8125, 0.8125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.8125, 0.1875, 0.1875, 1., 0.8125, 0.8125),
    )
});
static SHAPE593: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 1., 0.8125);
    Shapes::or(
        s,
        collision::box_shape(0.8125, 0.1875, 0.1875, 1., 0.8125, 0.8125),
    )
});
static SHAPE594: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.8125, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.1875, 0.1875, 0.1875, 0.8125, 0.8125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.8125, 0.1875, 0.1875, 1., 0.8125, 0.8125),
    )
});
static SHAPE595: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.8125, 0.8125);
    Shapes::or(
        s,
        collision::box_shape(0.8125, 0.1875, 0.1875, 1., 0.8125, 0.8125),
    )
});
static SHAPE596: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 1., 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.1875, 0.1875, 0.1875, 0.8125, 0.8125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.1875),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0.8125, 0.8125, 0.8125, 1.),
    )
});
static SHAPE597: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 1., 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.1875),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0.8125, 0.8125, 0.8125, 1.),
    )
});
static SHAPE598: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.8125, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.1875, 0.1875, 0.1875, 0.8125, 0.8125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.1875),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0.8125, 0.8125, 0.8125, 1.),
    )
});
static SHAPE599: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.8125, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.1875),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0.8125, 0.8125, 0.8125, 1.),
    )
});
static SHAPE600: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 1., 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.1875, 0.1875, 0.1875, 0.8125, 0.8125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.1875),
    )
});
static SHAPE601: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 1., 0.8125);
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.1875),
    )
});
static SHAPE602: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.8125, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.1875, 0.1875, 0.1875, 0.8125, 0.8125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.1875),
    )
});
static SHAPE603: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.8125, 0.8125);
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.1875),
    )
});
static SHAPE604: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 1., 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.1875, 0.1875, 0.1875, 0.8125, 0.8125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0.8125, 0.8125, 0.8125, 1.),
    )
});
static SHAPE605: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 1., 0.8125);
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0.8125, 0.8125, 0.8125, 1.),
    )
});
static SHAPE606: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.8125, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.1875, 0.1875, 0.1875, 0.8125, 0.8125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0.8125, 0.8125, 0.8125, 1.),
    )
});
static SHAPE607: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.8125, 0.8125);
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0.8125, 0.8125, 0.8125, 1.),
    )
});
static SHAPE608: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 1., 0.8125);
    Shapes::or(
        s,
        collision::box_shape(0., 0.1875, 0.1875, 0.1875, 0.8125, 0.8125),
    )
});
static SHAPE609: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.8125, 0.8125);
    Shapes::or(
        s,
        collision::box_shape(0., 0.1875, 0.1875, 0.1875, 0.8125, 0.8125),
    )
});
static SHAPE610: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.8125, 0.8125));
static SHAPE611: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0.1875, 0.1875, 1., 0.8125, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0.8125, 0.8125, 0.8125, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.8125, 0.1875, 0.8125, 1., 0.8125),
    )
});
static SHAPE612: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 1.);
    let s = Shapes::or(
        s,
        collision::box_shape(0.8125, 0.1875, 0.1875, 1., 0.8125, 0.8125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.8125, 0.1875, 0.8125, 1., 0.8125),
    )
});
static SHAPE613: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0.1875, 0.1875, 1., 0.8125, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.1875),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0.8125, 0.8125, 0.8125, 1.),
    )
});
static SHAPE614: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 1.);
    Shapes::or(
        s,
        collision::box_shape(0.8125, 0.1875, 0.1875, 1., 0.8125, 0.8125),
    )
});
static SHAPE615: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0.1875, 0.1875, 1., 0.8125, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.1875),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.8125, 0.1875, 0.8125, 1., 0.8125),
    )
});
static SHAPE616: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.8125, 0.1875, 0.1875, 1., 0.8125, 0.8125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.8125, 0.1875, 0.8125, 1., 0.8125),
    )
});
static SHAPE617: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0.1875, 0.1875, 1., 0.8125, 0.8125);
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.1875),
    )
});
static SHAPE618: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.8125);
    Shapes::or(
        s,
        collision::box_shape(0.8125, 0.1875, 0.1875, 1., 0.8125, 0.8125),
    )
});
static SHAPE619: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0.1875, 0.1875, 1., 0.8125, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0.8125, 0.8125, 0.8125, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.8125, 0.1875, 0.8125, 1., 0.8125),
    )
});
static SHAPE620: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0.1875, 0.1875, 0.8125, 0.8125, 1.);
    let s = Shapes::or(
        s,
        collision::box_shape(0.8125, 0.1875, 0.1875, 1., 0.8125, 0.8125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.8125, 0.1875, 0.8125, 1., 0.8125),
    )
});
static SHAPE621: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0.1875, 0.1875, 1., 0.8125, 0.8125);
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0.8125, 0.8125, 0.8125, 1.),
    )
});
static SHAPE622: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0.1875, 0.1875, 0.8125, 0.8125, 1.);
    Shapes::or(
        s,
        collision::box_shape(0.8125, 0.1875, 0.1875, 1., 0.8125, 0.8125),
    )
});
static SHAPE623: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0.1875, 0.1875, 1., 0.8125, 0.8125);
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.8125, 0.1875, 0.8125, 1., 0.8125),
    )
});
static SHAPE624: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0.1875, 0.1875, 1., 0.8125, 0.8125);
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.8125, 0.1875, 0.8125, 1., 0.8125),
    )
});
static SHAPE625: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.1875, 0.1875, 1., 0.8125, 0.8125));
static SHAPE626: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0.1875, 0.1875, 1., 0.8125, 0.8125));
static SHAPE627: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0.1875, 0.1875, 0.8125, 0.8125, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.1875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0.8125, 0.8125, 0.8125, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.8125, 0.1875, 0.8125, 1., 0.8125),
    )
});
static SHAPE628: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 1.);
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.8125, 0.1875, 0.8125, 1., 0.8125),
    )
});
static SHAPE629: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0.1875, 0.1875, 0.8125, 0.8125, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.1875),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0.8125, 0.8125, 0.8125, 1.),
    )
});
static SHAPE630: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 1.));
static SHAPE631: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0.1875, 0.1875, 0.8125, 0.8125, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.1875),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.8125, 0.1875, 0.8125, 1., 0.8125),
    )
});
static SHAPE632: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.8125);
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.8125, 0.1875, 0.8125, 1., 0.8125),
    )
});
static SHAPE633: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0.1875, 0.1875, 0.8125, 0.8125, 0.8125);
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.1875),
    )
});
static SHAPE634: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.8125));
static SHAPE635: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0.1875, 0.1875, 0.8125, 0.8125, 0.8125);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0.8125, 0.8125, 0.8125, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.8125, 0.1875, 0.8125, 1., 0.8125),
    )
});
static SHAPE636: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.1875, 0.1875, 0.1875, 0.8125, 0.8125, 1.);
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.8125, 0.1875, 0.8125, 1., 0.8125),
    )
});
static SHAPE637: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0.1875, 0.1875, 0.8125, 0.8125, 0.8125);
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.1875, 0.8125, 0.8125, 0.8125, 1.),
    )
});
static SHAPE638: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0.1875, 0.1875, 0.8125, 0.8125, 1.));
static SHAPE639: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0.1875, 0.1875, 0.8125, 0.8125, 0.8125);
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.8125, 0.1875, 0.8125, 1., 0.8125),
    )
});
static SHAPE640: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0.1875, 0.1875, 0.8125, 1., 0.8125));
static SHAPE641: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.1875, 0.1875, 0.8125, 0.8125, 0.8125));
static SHAPE642: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0.1875, 0.1875, 0.8125, 0.8125, 0.8125));
static SHAPE643: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0., 0.3125, 0.6875, 0.625, 0.6875));
static SHAPE644: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, -0.0625, 0.3125, 0.6875, 0.1875, 0.6875));
static SHAPE645: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, -0.0625, 0.1875, 0.8125, 0.3125, 0.8125));
static SHAPE646: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, -0.0625, 0.1875, 0.8125, 0.875, 0.8125));
static SHAPE647: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, -0.0625, 0.1875, 0.8125, 1., 0.8125));
static SHAPE648: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.6875, 0.8125));
static SHAPE649: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.9375, 0.8125));
static SHAPE650: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0.3125, 0.3125, 0.6875, 0.6875, 0.6875));
static SHAPE651: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0., 0.1875, 0.75, 0.4375, 0.75));
static SHAPE652: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.0625, 0., 0.0625, 0.9375, 0.4375, 0.9375));
static SHAPE653: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.0625, 0., 0.125, 0.9375, 1., 0.875));
static SHAPE654: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.125, 0., 0.125, 0.875, 0.9375, 0.875));
static SHAPE655: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.125, 0., 0.125, 0.875, 0.25, 0.875));
static SHAPE656: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.25, 0.3125, 1., 0.75, 1.));
static SHAPE657: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.25, 0., 1., 0.75, 0.6875));
static SHAPE658: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0.25, 0., 1., 0.75, 1.));
static SHAPE659: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.25, 0., 0.6875, 0.75, 1.));
static SHAPE660: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.375, 0., 0.375, 0.625, 0.375, 0.625));
static SHAPE661: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.375, 0.8125));
static SHAPE662: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.125, 0., 0.125, 0.875, 0.375, 0.875));
static SHAPE663: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.125, 0., 0.125, 0.875, 0.4375, 0.875));
static SHAPE664: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 0.5, 0.75, 0.5));
static SHAPE665: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.15625, 0., 0.15625, 0.34375, 1., 0.34375));
static SHAPE666: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.0625, 0., 0.0625, 0.4375, 1., 0.4375));
static SHAPE667: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(-0.0625, 0., -0.0625, 0.5625, 1., 0.5625));
static SHAPE668: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.125, 1., 0.125);
    let s = Shapes::or(s, collision::box_shape(0., 0., 0.875, 0.125, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.875, 0., 0., 1., 1., 0.125));
    let s = Shapes::or(s, collision::box_shape(0.875, 0., 0.875, 1., 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0., 0.875, 0.125, 1., 1., 0.875));
    let s = Shapes::or(s, collision::box_shape(0.125, 0.875, 0., 0.875, 1., 0.125));
    Shapes::or(s, collision::box_shape(0.125, 0.875, 0.875, 0.875, 1., 1.))
});
static SHAPE669: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.125, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.125, 0., 0.125, 1., 0.125));
    let s = Shapes::or(s, collision::box_shape(0., 0.125, 0.875, 0.125, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.875, 0.125, 0., 1., 1., 0.125));
    let s = Shapes::or(s, collision::box_shape(0.875, 0.125, 0.875, 1., 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0., 0.875, 0.125, 1., 1., 0.875));
    let s = Shapes::or(s, collision::box_shape(0.125, 0.875, 0., 0.875, 1., 0.125));
    Shapes::or(s, collision::box_shape(0.125, 0.875, 0.875, 0.875, 1., 1.))
});
static SHAPE670: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.125, 0., 0.375, 0.25, 0.8125, 0.625);
    let s = Shapes::or(
        s,
        collision::box_shape(0.75, 0., 0.375, 0.875, 0.8125, 0.625),
    );
    let s = Shapes::or(s, collision::box_shape(0.25, 0.25, 0.125, 0.75, 1., 0.875));
    let s = Shapes::or(
        s,
        collision::box_shape(0.125, 0.4375, 0.3125, 0.25, 0.8125, 0.375),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.125, 0.4375, 0.625, 0.25, 0.8125, 0.6875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.75, 0.4375, 0.3125, 0.875, 0.8125, 0.375),
    );
    Shapes::or(
        s,
        collision::box_shape(0.75, 0.4375, 0.625, 0.875, 0.8125, 0.6875),
    )
});
static SHAPE671: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.375, 0., 0.125, 0.625, 0.8125, 0.25);
    let s = Shapes::or(
        s,
        collision::box_shape(0.375, 0., 0.75, 0.625, 0.8125, 0.875),
    );
    let s = Shapes::or(s, collision::box_shape(0.125, 0.25, 0.25, 0.875, 1., 0.75));
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0.4375, 0.125, 0.375, 0.8125, 0.25),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0.4375, 0.75, 0.375, 0.8125, 0.875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.625, 0.4375, 0.125, 0.6875, 0.8125, 0.25),
    );
    Shapes::or(
        s,
        collision::box_shape(0.625, 0.4375, 0.75, 0.6875, 0.8125, 0.875),
    )
});
static SHAPE672: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0.125, 0., 0.75, 0.875, 0.75);
    let s = Shapes::or(
        s,
        collision::box_shape(0.125, 0.3125, 0.1875, 0.25, 0.6875, 0.5625),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.75, 0.3125, 0.1875, 0.875, 0.6875, 0.5625),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.125, 0.375, 0.5625, 0.25, 0.625, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.75, 0.375, 0.5625, 0.875, 0.625, 1.),
    )
});
static SHAPE673: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0.125, 0.25, 0.75, 0.875, 1.);
    let s = Shapes::or(
        s,
        collision::box_shape(0.125, 0.3125, 0.4375, 0.25, 0.6875, 0.8125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.75, 0.3125, 0.4375, 0.875, 0.6875, 0.8125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.125, 0.375, 0., 0.25, 0.625, 0.4375),
    );
    Shapes::or(
        s,
        collision::box_shape(0.75, 0.375, 0., 0.875, 0.625, 0.4375),
    )
});
static SHAPE674: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0.125, 0.25, 0.75, 0.875, 0.75);
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.3125, 0.125, 0.5625, 0.6875, 0.25),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.1875, 0.3125, 0.75, 0.5625, 0.6875, 0.875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.5625, 0.375, 0.125, 1., 0.625, 0.25),
    );
    Shapes::or(
        s,
        collision::box_shape(0.5625, 0.375, 0.75, 1., 0.625, 0.875),
    )
});
static SHAPE675: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0.125, 0.25, 1., 0.875, 0.75);
    let s = Shapes::or(
        s,
        collision::box_shape(0.4375, 0.3125, 0.125, 0.8125, 0.6875, 0.25),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.4375, 0.3125, 0.75, 0.8125, 0.6875, 0.875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.375, 0.125, 0.4375, 0.625, 0.25),
    );
    Shapes::or(
        s,
        collision::box_shape(0., 0.375, 0.75, 0.4375, 0.625, 0.875),
    )
});
static SHAPE676: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0., 0.125, 0.75, 0.75, 0.875);
    let s = Shapes::or(
        s,
        collision::box_shape(0.125, 0.1875, 0.3125, 0.25, 0.5625, 0.6875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.75, 0.1875, 0.3125, 0.875, 0.5625, 0.6875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.125, 0.5625, 0.375, 0.25, 1., 0.625),
    );
    Shapes::or(
        s,
        collision::box_shape(0.75, 0.5625, 0.375, 0.875, 1., 0.625),
    )
});
static SHAPE677: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.125, 0., 0.25, 0.875, 0.75, 0.75);
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0.1875, 0.125, 0.6875, 0.5625, 0.25),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0.1875, 0.75, 0.6875, 0.5625, 0.875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.375, 0.5625, 0.125, 0.625, 1., 0.25),
    );
    Shapes::or(
        s,
        collision::box_shape(0.375, 0.5625, 0.75, 0.625, 1., 0.875),
    )
});
static SHAPE678: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.125, 1.);
    Shapes::or(
        s,
        collision::box_shape(0.25, 0.125, 0.25, 0.75, 0.875, 0.75),
    )
});
static SHAPE679: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.125, 1.);
    let s = Shapes::or(
        s,
        collision::box_shape(0.25, 0.125, 0.25, 0.75, 0.875, 0.75),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.625, 0.0625, 0.25, 0.875, 0.3333333125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.25, 0.625, 0.0625, 1., 0.875, 0.25),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.75, 0.625, 0.25, 1., 0.875, 0.3333333125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.75, 0.3333333125, 0.25, 1., 0.6041666875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.75, 0.75, 0.3333333125, 1., 1., 0.6041666875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.875, 0.6041666875, 1., 1.125, 0.875),
    );
    Shapes::or(
        s,
        collision::box_shape(0.25, 0.875, 0.3333333125, 0.75, 1., 0.6041666875),
    )
});
static SHAPE680: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.125, 1.);
    let s = Shapes::or(
        s,
        collision::box_shape(0.25, 0.125, 0.25, 0.75, 0.875, 0.75),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.625, 0.6666666875, 0.25, 0.875, 0.9375),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.25, 0.625, 0.75, 1., 0.875, 0.9375),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.75, 0.625, 0.6666666875, 1., 0.875, 0.75),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.75, 0.3958333125, 0.25, 1., 0.6666666875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.75, 0.75, 0.3958333125, 1., 1., 0.6666666875),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0., 0.875, 0.125, 1., 1.125, 0.3958333125),
    );
    Shapes::or(
        s,
        collision::box_shape(0.25, 0.875, 0.3958333125, 0.75, 1., 0.6666666875),
    )
});
static SHAPE681: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.125, 1.);
    let s = Shapes::or(
        s,
        collision::box_shape(0.25, 0.125, 0.25, 0.75, 0.875, 0.75),
    );
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.625, 0., 0.25, 0.875, 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.25, 0.625, 0., 0.3333333125, 0.875, 0.25),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.25, 0.625, 0.75, 0.3333333125, 0.875, 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.3333333125, 0.75, 0., 0.6041666875, 1., 0.25),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.3333333125, 0.75, 0.75, 0.6041666875, 1., 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.3333333125, 0.875, 0.25, 0.875, 1., 0.75),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.6041666875, 0.875, 0., 0.875, 1.125, 0.25),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.6041666875, 0.875, 0.75, 0.875, 1.125, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.6041666875, 1., 0.25, 0.875, 1.125, 0.75),
    )
});
static SHAPE682: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.125, 1.);
    let s = Shapes::or(
        s,
        collision::box_shape(0.25, 0.125, 0.25, 0.75, 0.875, 0.75),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.6666666875, 0.625, 0., 0.9375, 0.875, 0.25),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.6666666875, 0.625, 0.75, 0.9375, 0.875, 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.75, 0.625, 0.25, 0.9375, 0.875, 0.75),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.3958333125, 0.75, 0., 0.6666666875, 1., 0.25),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.3958333125, 0.75, 0.75, 0.6666666875, 1., 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.125, 0.875, 0., 0.3958333125, 1.125, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.3958333125, 0.875, 0.25, 0.6666666875, 1., 0.75),
    )
});
static SHAPE683: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0.25, 1., 1., 0.75));
static SHAPE684: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.25, 0., 0., 0.75, 1., 1.));
static SHAPE685: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0.25, 0.25, 0.75, 0.375, 0.75);
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0.375, 0.3125, 0.6875, 0.8125, 0.6875),
    );
    Shapes::or(
        s,
        collision::box_shape(0.4375, 0.8125, 0.4375, 0.5625, 1., 0.5625),
    )
});
static SHAPE686: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0.25, 0.25, 0.75, 0.375, 0.75);
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0.375, 0.3125, 0.6875, 0.8125, 0.6875),
    );
    Shapes::or(
        s,
        collision::box_shape(0.4375, 0.8125, 0., 0.5625, 0.9375, 0.8125),
    )
});
static SHAPE687: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0.25, 0.25, 0.75, 0.375, 0.75);
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0.375, 0.3125, 0.6875, 0.8125, 0.6875),
    );
    Shapes::or(
        s,
        collision::box_shape(0.4375, 0.8125, 0.1875, 0.5625, 0.9375, 1.),
    )
});
static SHAPE688: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0.25, 0.25, 0.75, 0.375, 0.75);
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0.375, 0.3125, 0.6875, 0.8125, 0.6875),
    );
    Shapes::or(
        s,
        collision::box_shape(0., 0.8125, 0.4375, 0.8125, 0.9375, 0.5625),
    )
});
static SHAPE689: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0.25, 0.25, 0.75, 0.375, 0.75);
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0.375, 0.3125, 0.6875, 0.8125, 0.6875),
    );
    Shapes::or(
        s,
        collision::box_shape(0.1875, 0.8125, 0.4375, 1., 0.9375, 0.5625),
    )
});
static SHAPE690: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0.25, 0.25, 0.75, 0.375, 0.75);
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0.375, 0.3125, 0.6875, 0.8125, 0.6875),
    );
    Shapes::or(
        s,
        collision::box_shape(0.4375, 0.8125, 0., 0.5625, 0.9375, 1.),
    )
});
static SHAPE691: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.25, 0.25, 0.25, 0.75, 0.375, 0.75);
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0.375, 0.3125, 0.6875, 0.8125, 0.6875),
    );
    Shapes::or(
        s,
        collision::box_shape(0., 0.8125, 0.4375, 1., 0.9375, 0.5625),
    )
});
static SHAPE692: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.3125, 0.0625, 0.3125, 0.6875, 0.5, 0.6875);
    Shapes::or(
        s,
        collision::box_shape(0.375, 0.5, 0.375, 0.625, 0.625, 0.625),
    )
});
static SHAPE693: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.3125, 0., 0.3125, 0.6875, 0.4375, 0.6875);
    Shapes::or(
        s,
        collision::box_shape(0.375, 0.4375, 0.375, 0.625, 0.5625, 0.625),
    )
});
static SHAPE694: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.25, 0., 0.25, 0.75, 0.5625, 0.75));
static SHAPE695: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.125, 0., 0.125, 0.875, 0.1875, 0.875));
static SHAPE696: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.25, 0.5625, 0.25, 0.75, 1., 0.75));
static SHAPE697: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.25, 0., 0.25, 0.75, 0.9375, 0.75));
static SHAPE698: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.125, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.125, 0., 0.125, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.125, 0.125, 0., 1., 1., 0.125));
    let s = Shapes::or(s, collision::box_shape(0.125, 0.125, 0.875, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.875, 0.125, 0.125, 1., 1., 0.875))
});
static SHAPE699: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.1875, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.1875, 0., 0.125, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.125, 0.1875, 0., 1., 1., 0.125));
    let s = Shapes::or(s, collision::box_shape(0.125, 0.1875, 0.875, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.875, 0.1875, 0.125, 1., 1., 0.875))
});
static SHAPE700: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.3125, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.3125, 0., 0.125, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.125, 0.3125, 0., 1., 1., 0.125));
    let s = Shapes::or(s, collision::box_shape(0.125, 0.3125, 0.875, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.875, 0.3125, 0.125, 1., 1., 0.875))
});
static SHAPE701: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.4375, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.4375, 0., 0.125, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.125, 0.4375, 0., 1., 1., 0.125));
    let s = Shapes::or(s, collision::box_shape(0.125, 0.4375, 0.875, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.875, 0.4375, 0.125, 1., 1., 0.875))
});
static SHAPE702: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.5625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.5625, 0., 0.125, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.125, 0.5625, 0., 1., 1., 0.125));
    let s = Shapes::or(s, collision::box_shape(0.125, 0.5625, 0.875, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.875, 0.5625, 0.125, 1., 1., 0.875))
});
static SHAPE703: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.6875, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.6875, 0., 0.125, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.125, 0.6875, 0., 1., 1., 0.125));
    let s = Shapes::or(s, collision::box_shape(0.125, 0.6875, 0.875, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.875, 0.6875, 0.125, 1., 1., 0.875))
});
static SHAPE704: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.8125, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.8125, 0., 0.125, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.125, 0.8125, 0., 1., 1., 0.125));
    let s = Shapes::or(s, collision::box_shape(0.125, 0.8125, 0.875, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.875, 0.8125, 0.125, 1., 1., 0.875))
});
static SHAPE705: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.9375, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.9375, 0., 0.125, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.125, 0.9375, 0., 1., 1., 0.125));
    let s = Shapes::or(s, collision::box_shape(0.125, 0.9375, 0.875, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.875, 0.9375, 0.125, 1., 1., 0.875))
});
static SHAPE706: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0., 0.375, 0.6875, 0.375, 0.5625));
static SHAPE707: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0., 0.375, 0.625, 0.375, 0.6875));
static SHAPE708: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0., 0.3125, 0.6875, 0.375, 0.625));
static SHAPE709: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.0625, 0., 0.0625, 0.9375, 0.5, 0.9375);
    Shapes::or(
        s,
        collision::box_shape(0.4375, 0.5, 0.4375, 0.5625, 0.875, 0.5625),
    )
});
static SHAPE710: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0.1875, 0.5625, 0.8125, 0.8125, 1.));
static SHAPE711: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.1875, 0.1875, 0.4375, 0.8125, 0.8125));
static SHAPE712: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.4375));
static SHAPE713: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.5625, 0.1875, 0.1875, 1., 0.8125, 0.8125));
static SHAPE714: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.4375, 0.8125));
static SHAPE715: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0.5625, 0.1875, 0.8125, 1., 0.8125));
static SHAPE716: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0.1875, 0.6875, 0.8125, 0.8125, 1.));
static SHAPE717: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.1875, 0.1875, 0.3125, 0.8125, 0.8125));
static SHAPE718: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.3125));
static SHAPE719: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.6875, 0.1875, 0.1875, 1., 0.8125, 0.8125));
static SHAPE720: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.3125, 0.8125));
static SHAPE721: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0.6875, 0.1875, 0.8125, 1., 0.8125));
static SHAPE722: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0.1875, 0.75, 0.8125, 0.8125, 1.));
static SHAPE723: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.1875, 0.1875, 0.25, 0.8125, 0.8125));
static SHAPE724: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0.1875, 0., 0.8125, 0.8125, 0.25));
static SHAPE725: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.75, 0.1875, 0.1875, 1., 0.8125, 0.8125));
static SHAPE726: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0., 0.1875, 0.8125, 0.25, 0.8125));
static SHAPE727: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0.75, 0.1875, 0.8125, 1., 0.8125));
static SHAPE728: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.25, 0.25, 0.8125, 0.75, 0.75, 1.));
static SHAPE729: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.25, 0.25, 0.1875, 0.75, 0.75));
static SHAPE730: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.25, 0.25, 0., 0.75, 0.75, 0.1875));
static SHAPE731: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.8125, 0.25, 0.25, 1., 0.75, 0.75));
static SHAPE732: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.25, 0., 0.25, 0.75, 0.1875, 0.75));
static SHAPE733: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.25, 0.8125, 0.25, 0.75, 1., 0.75));
static SHAPE734: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0., 0.1875, 0.5625, 1., 0.5625));
static SHAPE735: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0., 0.1875, 0.5625, 0.6875, 0.5625));
static SHAPE736: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.1875, 0.3125, 0.1875, 0.5625, 1., 0.5625));
static SHAPE737: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.125, 0., 0.125, 0.625, 1., 0.625));
static SHAPE738: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.0625, 0., 0.0625, 0.6875, 1., 0.6875));
static SHAPE739: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 0.75, 1., 0.75));
static SHAPE740: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.125, 0.8125, 0.125, 0.875, 1., 0.875));
static SHAPE741: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.375, 0., 0.375, 0.625, 1., 0.625);
    let s = Shapes::or(s, collision::box_shape(0., 0.5, 0., 0.375, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.375, 0.5, 0., 1., 1., 0.375));
    let s = Shapes::or(s, collision::box_shape(0.375, 0.5, 0.625, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.625, 0.5, 0.375, 1., 1., 0.625))
});
static SHAPE742: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 0.5, 0.1875, 0.5));
static SHAPE743: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 0.5, 0.1875, 1.));
static SHAPE744: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.5, 0., 0.5, 1., 0.1875, 1.));
static SHAPE745: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.5, 0., 0., 1., 0.1875, 1.));
static SHAPE746: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0.5, 0.5, 0.1875, 1.));
static SHAPE747: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0.5, 1., 0.1875, 1.));
static SHAPE748: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.5, 0., 0., 1., 0.1875, 0.5));
static SHAPE749: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 1., 0.1875, 0.5));
static SHAPE750: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 0.5, 0.0625, 0.5));
static SHAPE751: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 0.5, 0.0625, 1.));
static SHAPE752: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.5, 0., 0.5, 1., 0.0625, 1.));
static SHAPE753: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.5, 0., 0., 1., 0.0625, 1.));
static SHAPE754: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0.5, 0.5, 0.0625, 1.));
static SHAPE755: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0.5, 1., 0.0625, 1.));
static SHAPE756: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.5, 0., 0., 1., 0.0625, 0.5));
static SHAPE757: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 1., 0.0625, 0.5));
static SHAPE758: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.6875, 0., 1., 0.9375, 1.));
static SHAPE759: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.3125, 0., 0.5625, 0.6875, 0.9375, 0.9375);
    let s = Shapes::or(s, collision::box_shape(0., 0.6875, 0., 0.3125, 0.9375, 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0.6875, 0., 1., 0.9375, 0.5625),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0.6875, 0.9375, 1., 0.9375, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.6875, 0.6875, 0.5625, 1., 0.9375, 0.9375),
    )
});
static SHAPE760: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0.6875, 0., 1., 0.8125, 1.));
static SHAPE761: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.3125, 0., 0.5625, 0.6875, 0.8125, 0.9375);
    let s = Shapes::or(s, collision::box_shape(0., 0.6875, 0., 0.3125, 0.8125, 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0.6875, 0., 1., 0.8125, 0.5625),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0.6875, 0.9375, 1., 0.8125, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.6875, 0.6875, 0.5625, 1., 0.8125, 0.9375),
    )
});
static SHAPE762: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0., 0.5625, 0.6875, 0.8125, 0.9375));
static SHAPE763: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.3125, 0., 0.0625, 0.6875, 0.9375, 0.4375);
    let s = Shapes::or(s, collision::box_shape(0., 0.6875, 0., 0.3125, 0.9375, 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0.6875, 0., 1., 0.9375, 0.0625),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0.6875, 0.4375, 1., 0.9375, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.6875, 0.6875, 0.0625, 1., 0.9375, 0.4375),
    )
});
static SHAPE764: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.3125, 0., 0.0625, 0.6875, 0.8125, 0.4375);
    let s = Shapes::or(s, collision::box_shape(0., 0.6875, 0., 0.3125, 0.8125, 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0.6875, 0., 1., 0.8125, 0.0625),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.3125, 0.6875, 0.4375, 1., 0.8125, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.6875, 0.6875, 0.0625, 1., 0.8125, 0.4375),
    )
});
static SHAPE765: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0., 0.0625, 0.6875, 0.8125, 0.4375));
static SHAPE766: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.5625, 0., 0.3125, 0.9375, 0.9375, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0., 0.6875, 0., 0.5625, 0.9375, 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.5625, 0.6875, 0., 1., 0.9375, 0.3125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.5625, 0.6875, 0.6875, 1., 0.9375, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.6875, 0.3125, 1., 0.9375, 0.6875),
    )
});
static SHAPE767: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.5625, 0., 0.3125, 0.9375, 0.8125, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0., 0.6875, 0., 0.5625, 0.8125, 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.5625, 0.6875, 0., 1., 0.8125, 0.3125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.5625, 0.6875, 0.6875, 1., 0.8125, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.6875, 0.3125, 1., 0.8125, 0.6875),
    )
});
static SHAPE768: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.5625, 0., 0.3125, 0.9375, 0.8125, 0.6875));
static SHAPE769: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.0625, 0., 0.3125, 0.4375, 0.9375, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0., 0.6875, 0., 0.0625, 0.9375, 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.6875, 0., 1., 0.9375, 0.3125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.6875, 0.6875, 1., 0.9375, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.4375, 0.6875, 0.3125, 1., 0.9375, 0.6875),
    )
});
static SHAPE770: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0.0625, 0., 0.3125, 0.4375, 0.8125, 0.6875);
    let s = Shapes::or(s, collision::box_shape(0., 0.6875, 0., 0.0625, 0.8125, 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.6875, 0., 1., 0.8125, 0.3125),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.6875, 0.6875, 1., 0.8125, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.4375, 0.6875, 0.3125, 1., 0.8125, 0.6875),
    )
});
static SHAPE771: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.0625, 0., 0.3125, 0.4375, 0.8125, 0.6875));
static SHAPE772: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0., 0.5625, 0.6875, 1., 0.9375));
static SHAPE773: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.3125, 0., 0.0625, 0.6875, 1., 0.4375));
static SHAPE774: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.5625, 0., 0.3125, 0.9375, 1., 0.6875));
static SHAPE775: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.0625, 0., 0.3125, 0.4375, 1., 0.6875));
static SHAPE776: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.125, 0.625, 0.125, 0.875, 1., 0.875));
static SHAPE777: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 1., 0.09375, 1.));
static SHAPE778: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 0.625, 1.))
});
static SHAPE779: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    Shapes::or(s, collision::box_shape(0., 0.0625, 0.9375, 1., 0.625, 1.))
});
static SHAPE780: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 0.625, 1.));
    Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0.9375, 1., 0.625, 1.),
    )
});
static SHAPE781: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0.9375, 1., 0.625, 1.),
    )
});
static SHAPE782: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 0.625, 1.));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0.9375, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0., 0.625, 0.9375, 0.0625, 1., 1.))
});
static SHAPE783: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    Shapes::or(s, collision::box_shape(0., 0.0625, 0., 1., 0.625, 0.0625))
});
static SHAPE784: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 0.625, 1.));
    Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0., 1., 0.625, 0.0625),
    )
});
static SHAPE785: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0., 1., 0.625, 0.0625),
    )
});
static SHAPE786: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 1., 0.625, 0.0625));
    Shapes::or(s, collision::box_shape(0., 0.0625, 0.9375, 1., 0.625, 1.))
});
static SHAPE787: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 0.625, 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0., 1., 0.625, 0.0625),
    );
    Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0.9375, 1., 0.625, 1.),
    )
});
static SHAPE788: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0., 1., 0.625, 0.0625),
    );
    Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0.9375, 1., 0.625, 1.),
    )
});
static SHAPE789: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 1., 0.625, 0.0625));
    Shapes::or(s, collision::box_shape(0., 0.0625, 0.9375, 1., 1., 1.))
});
static SHAPE790: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 0.625, 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0., 1., 0.625, 0.0625),
    );
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0.9375, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0., 0.625, 0.9375, 0.0625, 1., 1.))
});
static SHAPE791: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0., 1., 0.625, 0.0625),
    );
    Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0.9375, 1., 1., 1.))
});
static SHAPE792: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 0.625, 1.));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0., 1., 1., 0.0625));
    Shapes::or(s, collision::box_shape(0., 0.625, 0., 0.0625, 1., 0.0625))
});
static SHAPE793: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 1., 1., 0.0625));
    Shapes::or(s, collision::box_shape(0., 0.0625, 0.9375, 1., 0.625, 1.))
});
static SHAPE794: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 0.625, 1.));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0., 1., 1., 0.0625));
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0.9375, 1., 0.625, 1.),
    );
    Shapes::or(s, collision::box_shape(0., 0.625, 0., 0.0625, 1., 0.0625))
});
static SHAPE795: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0., 1., 1., 0.0625));
    Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0.9375, 1., 0.625, 1.),
    )
});
static SHAPE796: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 0.625, 1.));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0.9375, 1., 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0., 0.625, 0., 0.0625, 1., 0.0625));
    Shapes::or(s, collision::box_shape(0., 0.625, 0.9375, 0.0625, 1., 1.))
});
static SHAPE797: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    Shapes::or(s, collision::box_shape(0.9375, 0.0625, 0., 1., 0.625, 1.))
});
static SHAPE798: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 0.625, 1.));
    Shapes::or(s, collision::box_shape(0.9375, 0.0625, 0., 1., 0.625, 1.))
});
static SHAPE799: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    Shapes::or(s, collision::box_shape(0.9375, 0.0625, 0., 1., 0.625, 1.))
});
static SHAPE800: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0.9375, 1., 0.625, 1.));
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0., 1., 0.625, 0.9375),
    )
});
static SHAPE801: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 0.625, 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0.9375, 1., 0.625, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0., 1., 0.625, 0.9375),
    )
});
static SHAPE802: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0.9375, 1., 0.625, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0., 1., 0.625, 0.9375),
    )
});
static SHAPE803: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0.9375, 1., 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0., 1., 0.625, 0.9375),
    )
});
static SHAPE804: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 0.625, 1.));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0.9375, 1., 1., 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0., 1., 0.625, 0.9375),
    );
    Shapes::or(s, collision::box_shape(0., 0.625, 0.9375, 0.0625, 1., 1.))
});
static SHAPE805: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0.9375, 1., 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0., 1., 0.625, 0.9375),
    )
});
static SHAPE806: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 1., 0.625, 0.0625));
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 0.625, 1.),
    )
});
static SHAPE807: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 0.625, 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0., 1., 0.625, 0.0625),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 0.625, 1.),
    )
});
static SHAPE808: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0., 1., 0.625, 0.0625),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 0.625, 1.),
    )
});
static SHAPE809: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 1., 0.625, 0.0625));
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0.9375, 1., 0.625, 1.));
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 0.625, 0.9375),
    )
});
static SHAPE810: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 0.625, 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0., 1., 0.625, 0.0625),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0.9375, 1., 0.625, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 0.625, 0.9375),
    )
});
static SHAPE811: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0., 1., 0.625, 0.0625),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0.9375, 1., 0.625, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 0.625, 0.9375),
    )
});
static SHAPE812: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 1., 0.625, 0.0625));
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0.9375, 1., 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 0.625, 0.9375),
    )
});
static SHAPE813: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 0.625, 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0., 1., 0.625, 0.0625),
    );
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0.9375, 1., 1., 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 0.625, 0.9375),
    );
    Shapes::or(s, collision::box_shape(0., 0.625, 0.9375, 0.0625, 1., 1.))
});
static SHAPE814: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0., 1., 0.625, 0.0625),
    );
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0.9375, 1., 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 0.625, 0.9375),
    )
});
static SHAPE815: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 1., 1., 0.0625));
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 0.625, 1.),
    )
});
static SHAPE816: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 0.625, 1.));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0., 1., 1., 0.0625));
    let s = Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 0.625, 1.),
    );
    Shapes::or(s, collision::box_shape(0., 0.625, 0., 0.0625, 1., 0.0625))
});
static SHAPE817: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0., 1., 1., 0.0625));
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 0.625, 1.),
    )
});
static SHAPE818: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0.9375, 1., 0.625, 1.));
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 0.625, 0.9375),
    )
});
static SHAPE819: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 0.625, 1.));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0., 1., 1., 0.0625));
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0.9375, 1., 0.625, 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 0.625, 0.9375),
    );
    Shapes::or(s, collision::box_shape(0., 0.625, 0., 0.0625, 1., 0.0625))
});
static SHAPE820: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0., 1., 1., 0.0625));
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0.9375, 1., 0.625, 1.),
    );
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 0.625, 0.9375),
    )
});
static SHAPE821: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0.9375, 1., 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 0.625, 0.9375),
    )
});
static SHAPE822: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 0.625, 1.));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0.9375, 1., 1., 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 0.625, 0.9375),
    );
    let s = Shapes::or(s, collision::box_shape(0., 0.625, 0., 0.0625, 1., 0.0625));
    Shapes::or(s, collision::box_shape(0., 0.625, 0.9375, 0.0625, 1., 1.))
});
static SHAPE823: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0.9375, 1., 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 0.625, 0.9375),
    )
});
static SHAPE824: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 0.625, 1.));
    Shapes::or(s, collision::box_shape(0.9375, 0.0625, 0., 1., 1., 1.))
});
static SHAPE825: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0.9375, 1., 0.625, 1.));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0.0625, 0., 1., 1., 0.9375));
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0.9375, 1., 1., 1.))
});
static SHAPE826: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 0.625, 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0.9375, 1., 0.625, 1.),
    );
    let s = Shapes::or(s, collision::box_shape(0.9375, 0.0625, 0., 1., 1., 0.9375));
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0.9375, 1., 1., 1.))
});
static SHAPE827: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0.9375, 1., 0.625, 1.),
    );
    let s = Shapes::or(s, collision::box_shape(0.9375, 0.0625, 0., 1., 1., 0.9375));
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0.9375, 1., 1., 1.))
});
static SHAPE828: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 0.625, 1.));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0.9375, 1., 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0.0625, 0., 1., 1., 0.9375));
    Shapes::or(s, collision::box_shape(0., 0.625, 0.9375, 0.0625, 1., 1.))
});
static SHAPE829: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 1., 0.625, 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0.0625, 0.0625, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0., 1., 1., 0.0625))
});
static SHAPE830: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 0.625, 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0., 1., 0.625, 0.0625),
    );
    let s = Shapes::or(s, collision::box_shape(0.9375, 0.0625, 0.0625, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0., 1., 1., 0.0625))
});
static SHAPE831: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0., 1., 0.625, 0.0625),
    );
    let s = Shapes::or(s, collision::box_shape(0.9375, 0.0625, 0.0625, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0., 1., 1., 0.0625))
});
static SHAPE832: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 1., 0.625, 0.0625));
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0.9375, 1., 0.625, 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 1., 0.9375),
    );
    let s = Shapes::or(s, collision::box_shape(0.9375, 0.625, 0., 1., 1., 0.0625));
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0.9375, 1., 1., 1.))
});
static SHAPE833: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 0.625, 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0., 1., 0.625, 0.0625),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0.9375, 1., 0.625, 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 1., 0.9375),
    );
    let s = Shapes::or(s, collision::box_shape(0.9375, 0.625, 0., 1., 1., 0.0625));
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0.9375, 1., 1., 1.))
});
static SHAPE834: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0., 1., 0.625, 0.0625),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0.9375, 1., 0.625, 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 1., 0.9375),
    );
    let s = Shapes::or(s, collision::box_shape(0.9375, 0.625, 0., 1., 1., 0.0625));
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0.9375, 1., 1., 1.))
});
static SHAPE835: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 1., 0.625, 0.0625));
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0.9375, 1., 1., 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 1., 0.9375),
    );
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0., 1., 1., 0.0625))
});
static SHAPE836: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 0.625, 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0., 1., 0.625, 0.0625),
    );
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0.9375, 1., 1., 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 1., 0.9375),
    );
    let s = Shapes::or(s, collision::box_shape(0., 0.625, 0.9375, 0.0625, 1., 1.));
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0., 1., 1., 0.0625))
});
static SHAPE837: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0., 1., 0.625, 0.0625),
    );
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0.9375, 1., 1., 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 1., 0.9375),
    );
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0., 1., 1., 0.0625))
});
static SHAPE838: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 0.625, 1.));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0.0625, 0.0625, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0., 0.625, 0., 0.0625, 1., 0.0625))
});
static SHAPE839: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0.9375, 1., 0.625, 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 1., 0.9375),
    );
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0.9375, 1., 1., 1.))
});
static SHAPE840: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 0.625, 1.));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0., 1., 1., 0.0625));
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0.9375, 1., 0.625, 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 1., 0.9375),
    );
    let s = Shapes::or(s, collision::box_shape(0., 0.625, 0., 0.0625, 1., 0.0625));
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0.9375, 1., 1., 1.))
});
static SHAPE841: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0., 1., 1., 0.0625));
    let s = Shapes::or(
        s,
        collision::box_shape(0.0625, 0.0625, 0.9375, 1., 0.625, 1.),
    );
    let s = Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 1., 0.9375),
    );
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0.9375, 1., 1., 1.))
});
static SHAPE842: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.0625, 1.);
    let s = Shapes::or(s, collision::box_shape(0., 0.0625, 0., 0.0625, 0.625, 1.));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0.0625, 0.9375, 1., 1., 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.9375, 0.0625, 0.0625, 1., 1., 0.9375),
    );
    let s = Shapes::or(s, collision::box_shape(0., 0.625, 0., 0.0625, 1., 0.0625));
    Shapes::or(s, collision::box_shape(0., 0.625, 0.9375, 0.0625, 1., 1.))
});
static SHAPE843: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 0.0625, 0.625, 1.));
static SHAPE844: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0.9375, 1., 0.625, 1.));
static SHAPE845: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 0.625, 1.);
    Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 0.625, 1.))
});
static SHAPE846: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 0.625, 1.))
});
static SHAPE847: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 0.625, 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0., 0.625, 0.9375, 0.0625, 1., 1.))
});
static SHAPE848: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0., 0., 0., 1., 0.625, 0.0625));
static SHAPE849: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 0.625, 1.);
    Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 0.625, 0.0625))
});
static SHAPE850: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 0.625, 0.0625))
});
static SHAPE851: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.625, 0.0625);
    Shapes::or(s, collision::box_shape(0., 0., 0.9375, 1., 0.625, 1.))
});
static SHAPE852: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 0.625, 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 0.625, 0.0625));
    Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 0.625, 1.))
});
static SHAPE853: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 0.625, 0.0625));
    Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 0.625, 1.))
});
static SHAPE854: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.625, 0.0625);
    Shapes::or(s, collision::box_shape(0., 0., 0.9375, 1., 1., 1.))
});
static SHAPE855: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 0.625, 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 0.625, 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0., 0.625, 0.9375, 0.0625, 1., 1.))
});
static SHAPE856: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 0.625, 0.0625));
    Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 1., 1.))
});
static SHAPE857: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 0.625, 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 1., 0.0625));
    Shapes::or(s, collision::box_shape(0., 0.625, 0., 0.0625, 1., 0.0625))
});
static SHAPE858: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 1., 0.0625);
    Shapes::or(s, collision::box_shape(0., 0., 0.9375, 1., 0.625, 1.))
});
static SHAPE859: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 0.625, 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 0.625, 1.));
    Shapes::or(s, collision::box_shape(0., 0.625, 0., 0.0625, 1., 0.0625))
});
static SHAPE860: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 1., 0.0625));
    Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 0.625, 1.))
});
static SHAPE861: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 0.625, 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0., 0.625, 0., 0.0625, 1., 0.0625));
    Shapes::or(s, collision::box_shape(0., 0.625, 0.9375, 0.0625, 1., 1.))
});
static SHAPE862: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.9375, 0., 0., 1., 0.625, 1.));
static SHAPE863: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 0.625, 1.);
    Shapes::or(s, collision::box_shape(0.9375, 0., 0., 1., 0.625, 1.))
});
static SHAPE864: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    Shapes::or(s, collision::box_shape(0.9375, 0., 0., 1., 0.625, 1.))
});
static SHAPE865: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.9375, 1., 0.625, 1.);
    Shapes::or(s, collision::box_shape(0.9375, 0., 0., 1., 0.625, 0.9375))
});
static SHAPE866: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 0.625, 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 0.625, 1.));
    Shapes::or(s, collision::box_shape(0.9375, 0., 0., 1., 0.625, 0.9375))
});
static SHAPE867: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 0.625, 1.));
    Shapes::or(s, collision::box_shape(0.9375, 0., 0., 1., 0.625, 0.9375))
});
static SHAPE868: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.9375, 1., 1., 1.);
    Shapes::or(s, collision::box_shape(0.9375, 0., 0., 1., 0.625, 0.9375))
});
static SHAPE869: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 0.625, 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0., 0., 1., 0.625, 0.9375));
    Shapes::or(s, collision::box_shape(0., 0.625, 0.9375, 0.0625, 1., 1.))
});
static SHAPE870: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.9375, 0., 0., 1., 0.625, 0.9375))
});
static SHAPE871: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.625, 0.0625);
    Shapes::or(s, collision::box_shape(0.9375, 0., 0.0625, 1., 0.625, 1.))
});
static SHAPE872: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 0.625, 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 0.625, 0.0625));
    Shapes::or(s, collision::box_shape(0.9375, 0., 0.0625, 1., 0.625, 1.))
});
static SHAPE873: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 0.625, 0.0625));
    Shapes::or(s, collision::box_shape(0.9375, 0., 0.0625, 1., 0.625, 1.))
});
static SHAPE874: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.625, 0.0625);
    let s = Shapes::or(s, collision::box_shape(0., 0., 0.9375, 1., 0.625, 1.));
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0., 0.0625, 1., 0.625, 0.9375),
    )
});
static SHAPE875: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 0.625, 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 0.625, 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 0.625, 1.));
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0., 0.0625, 1., 0.625, 0.9375),
    )
});
static SHAPE876: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 0.625, 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 0.625, 1.));
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0., 0.0625, 1., 0.625, 0.9375),
    )
});
static SHAPE877: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.625, 0.0625);
    let s = Shapes::or(s, collision::box_shape(0., 0., 0.9375, 1., 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0., 0.0625, 1., 0.625, 0.9375),
    )
});
static SHAPE878: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 0.625, 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 0.625, 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 1., 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.9375, 0., 0.0625, 1., 0.625, 0.9375),
    );
    Shapes::or(s, collision::box_shape(0., 0.625, 0.9375, 0.0625, 1., 1.))
});
static SHAPE879: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 0.625, 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0., 0.0625, 1., 0.625, 0.9375),
    )
});
static SHAPE880: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 1., 0.0625);
    Shapes::or(s, collision::box_shape(0.9375, 0., 0.0625, 1., 0.625, 1.))
});
static SHAPE881: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 0.625, 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0., 0.0625, 1., 0.625, 1.));
    Shapes::or(s, collision::box_shape(0., 0.625, 0., 0.0625, 1., 0.0625))
});
static SHAPE882: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 1., 0.0625));
    Shapes::or(s, collision::box_shape(0.9375, 0., 0.0625, 1., 0.625, 1.))
});
static SHAPE883: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 1., 0.0625);
    let s = Shapes::or(s, collision::box_shape(0., 0., 0.9375, 1., 0.625, 1.));
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0., 0.0625, 1., 0.625, 0.9375),
    )
});
static SHAPE884: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 0.625, 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 0.625, 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.9375, 0., 0.0625, 1., 0.625, 0.9375),
    );
    Shapes::or(s, collision::box_shape(0., 0.625, 0., 0.0625, 1., 0.0625))
});
static SHAPE885: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 0.625, 1.));
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0., 0.0625, 1., 0.625, 0.9375),
    )
});
static SHAPE886: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 1., 0.0625);
    let s = Shapes::or(s, collision::box_shape(0., 0., 0.9375, 1., 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0., 0.0625, 1., 0.625, 0.9375),
    )
});
static SHAPE887: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 0.625, 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 1., 1.));
    let s = Shapes::or(
        s,
        collision::box_shape(0.9375, 0., 0.0625, 1., 0.625, 0.9375),
    );
    let s = Shapes::or(s, collision::box_shape(0., 0.625, 0., 0.0625, 1., 0.0625));
    Shapes::or(s, collision::box_shape(0., 0.625, 0.9375, 0.0625, 1., 1.))
});
static SHAPE888: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 1., 1.));
    Shapes::or(
        s,
        collision::box_shape(0.9375, 0., 0.0625, 1., 0.625, 0.9375),
    )
});
static SHAPE889: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 0.625, 1.);
    Shapes::or(s, collision::box_shape(0.9375, 0., 0., 1., 1., 1.))
});
static SHAPE890: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0.9375, 1., 0.625, 1.);
    let s = Shapes::or(s, collision::box_shape(0.9375, 0., 0., 1., 1., 0.9375));
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0.9375, 1., 1., 1.))
});
static SHAPE891: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 0.625, 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 0.625, 1.));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0., 0., 1., 1., 0.9375));
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0.9375, 1., 1., 1.))
});
static SHAPE892: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 0.625, 1.));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0., 0., 1., 1., 0.9375));
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0.9375, 1., 1., 1.))
});
static SHAPE893: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 0.625, 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0., 0., 1., 1., 0.9375));
    Shapes::or(s, collision::box_shape(0., 0.625, 0.9375, 0.0625, 1., 1.))
});
static SHAPE894: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.625, 0.0625);
    let s = Shapes::or(s, collision::box_shape(0.9375, 0., 0.0625, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0., 1., 1., 0.0625))
});
static SHAPE895: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 0.625, 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 0.625, 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0., 0.0625, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0., 1., 1., 0.0625))
});
static SHAPE896: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 0.625, 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0., 0.0625, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0., 1., 1., 0.0625))
});
static SHAPE897: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.625, 0.0625);
    let s = Shapes::or(s, collision::box_shape(0., 0., 0.9375, 1., 0.625, 1.));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0., 0.0625, 1., 1., 0.9375));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0.625, 0., 1., 1., 0.0625));
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0.9375, 1., 1., 1.))
});
static SHAPE898: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 0.625, 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 0.625, 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 0.625, 1.));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0., 0.0625, 1., 1., 0.9375));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0.625, 0., 1., 1., 0.0625));
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0.9375, 1., 1., 1.))
});
static SHAPE899: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 0.625, 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 0.625, 1.));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0., 0.0625, 1., 1., 0.9375));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0.625, 0., 1., 1., 0.0625));
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0.9375, 1., 1., 1.))
});
static SHAPE900: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 0.625, 0.0625);
    let s = Shapes::or(s, collision::box_shape(0., 0., 0.9375, 1., 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0., 0.0625, 1., 1., 0.9375));
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0., 1., 1., 0.0625))
});
static SHAPE901: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 0.625, 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 0.625, 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0., 0.0625, 1., 1., 0.9375));
    let s = Shapes::or(s, collision::box_shape(0., 0.625, 0.9375, 0.0625, 1., 1.));
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0., 1., 1., 0.0625))
});
static SHAPE902: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 0.625, 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0., 0.0625, 1., 1., 0.9375));
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0., 1., 1., 0.0625))
});
static SHAPE903: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 0.625, 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0., 0.0625, 1., 1., 1.));
    Shapes::or(s, collision::box_shape(0., 0.625, 0., 0.0625, 1., 0.0625))
});
static SHAPE904: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 1., 1., 0.0625);
    let s = Shapes::or(s, collision::box_shape(0., 0., 0.9375, 1., 0.625, 1.));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0., 0.0625, 1., 1., 0.9375));
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0.9375, 1., 1., 1.))
});
static SHAPE905: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 0.625, 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 0.625, 1.));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0., 0.0625, 1., 1., 0.9375));
    let s = Shapes::or(s, collision::box_shape(0., 0.625, 0., 0.0625, 1., 0.0625));
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0.9375, 1., 1., 1.))
});
static SHAPE906: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 1., 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 0.625, 1.));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0., 0.0625, 1., 1., 0.9375));
    Shapes::or(s, collision::box_shape(0.9375, 0.625, 0.9375, 1., 1., 1.))
});
static SHAPE907: LazyLock<VoxelShape> = LazyLock::new(|| {
    let s = collision::box_shape(0., 0., 0., 0.0625, 0.625, 1.);
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0., 1., 1., 0.0625));
    let s = Shapes::or(s, collision::box_shape(0.0625, 0., 0.9375, 1., 1., 1.));
    let s = Shapes::or(s, collision::box_shape(0.9375, 0., 0.0625, 1., 1., 0.9375));
    let s = Shapes::or(s, collision::box_shape(0., 0.625, 0., 0.0625, 1., 0.0625));
    Shapes::or(s, collision::box_shape(0., 0.625, 0.9375, 0.0625, 1., 1.))
});
static SHAPE908: LazyLock<VoxelShape> =
    LazyLock::new(|| collision::box_shape(0.0625, 0.125, 0.0625, 0.9375, 1., 0.9375));

impl BlockWithShape for BlockState {
    fn collision_shape(&self) -> &'static VoxelShape {
        COLLISION_SHAPES_MAP
            .get(self.id() as usize)
            .unwrap_or(&&SHAPE1)
    }
    fn outline_shape(&self) -> &'static VoxelShape {
        OUTLINE_SHAPES_MAP
            .get(self.id() as usize)
            .unwrap_or(&&SHAPE1)
    }

    fn is_collision_shape_empty(&self) -> bool {
        matches!(self.id(), 0|29..=84|86..=117|1987..=2034|2047..=2056|2109..=2136|2401..=2918|3042..=4337|4342..=4349|4366..=4685|4758..=4777|4858..=5705|5802..=5827|5892..=5911|5916..=5950|5976|5978..=5993|6037..=6041|6043..=6044|7056..=7369|7372..=7373|7376..=7377|7380..=7381|7384..=7385|7388..=7389|7392..=7393|7396..=7397|7737|7740|8169..=8172|8190|8305..=8448|8709|8712|9033|9036|9380..=9635|9952..=9983|10129..=10152|11256..=11287|11636..=11967|12205..=12206|12209..=12210|12213..=12214|12217..=12218|12221..=12222|12225..=12226|12229..=12230|12233..=12234|12237..=12238|12241..=12242|12245..=12246|12249..=12250|12253..=12254|12257..=12258|12261..=12262|12265..=12266|12269..=12270|12273..=12274|12277..=12278|12281..=12282|12285..=12286|12289..=12290|12293..=12294|12297..=12298|12301..=12302|12305..=12306|12309..=12310|12313..=12314|12317..=12318|12321..=12322|12325..=12326|12329..=12330|12333..=12334|12337..=12338|12341..=12342|12345..=12346|12349..=12350|12353..=12354|12357..=12358|12361..=12362|12365..=12366|12369..=12370|12373..=12374|12377..=12378|12381..=12382|12385..=12386|12389..=12390|12393..=12394|12397..=12398|12401..=12402|12405..=12406|12409..=12410|12413..=12414|12417..=12418|12421..=12422|12425..=12426|12429..=12430|12433..=12434|12437..=12438|12441..=12442|12445..=12446|12449..=12450|12453..=12454|12457..=12458|12461..=12462|12465..=12466|12469..=12470|12473..=12474|12477..=12478|12481..=12482|12485..=12486|12489..=12490|13518..=13520|13522|13524|13526|13528|13530..=13535|13537|13572|13783..=13809|13836..=13955|13967|13981..=13984|15189|15192|15513|15516|15837|15840|16161|16164|16485|16488|16809|16812|17133|17136|17457|17460|17781|17784|18105|18108|18429|18432|18753|18756|19077|19080|19598..=19601|19615|19617..=19618|19632|19634..=19688|19703..=19706|19899..=19900|19903..=19904|19907..=19908|19911..=19912|19915..=19916|19919..=19920|19923..=19924|19927..=19928|19931..=19932|19935..=19936|19939..=19940|19943..=19944|19947..=19948|19951..=19952|19955..=19956|19959..=19960|20123..=20170|20299..=20378|20575|20578|20995|20998|21400..=21425|21432|21435|22202|22205|22613|22616|23025|23028|23346|23828..=23955|25797..=25851|25855..=25902|25910..=25911|25918..=25919|25926..=25927|25934..=25961|26060|26063|26471|26474|26882|26885|27293|27296|27632|27826..=27910|27913)
    }

    fn is_collision_shape_full(&self) -> bool {
        matches!(self.id(), 1..=28|85|118..=1730|2041..=2046|2063..=2068|2093..=2108|2137..=2400|2919..=2937|4338..=4341|4358..=4365|5912..=5915|5958..=5959|5977|5994..=5995|6028|6030..=6036|6042|6045..=6052|6124..=6139|6780..=6983|7054..=7055|7640..=7641|7643..=7644|7729..=7730|8055..=8056|8199|8201..=8202|8295..=8296|8449|8690..=8702|10032..=10033|10044..=10048|10153..=10180|11253..=11255|11352..=11354|11599..=11600|11605..=11606|11611..=11616|11633..=11635|11968..=11970|12055..=12056|12061..=12062|12067..=12068|12073..=12074|12079..=12080|12085..=12086|12091..=12092|12097..=12098|12103..=12104|12109..=12110|12115..=12116|12121..=12122|12127..=12128|12133..=12134|12139..=12140|12145..=12146|12151..=12152|12157..=12158|12163..=12164|12169..=12170|12175..=12176|12181..=12182|12187..=12188|12193..=12194|12199..=12204|13427..=13436|13517|13538..=13571|13573..=13782|13810|13826..=13835|13964|15109..=15110|15115..=15116|15121..=15122|15127..=15128|15133..=15134|15139..=15140|15145..=15146|15151..=15152|15157..=15158|15163..=15164|15169..=15170|15175..=15176|15181..=15182|19427..=19460|19489|19602..=19614|19616|19619..=19631|19633|19689..=19690|19695..=19696|19701..=19702|20379..=20399|20409..=20472|20474..=20482|20487..=20488|20897..=20902|20907..=20908|21313|21398..=21399|21750..=21752|22059..=22060|22109|22114..=22115|22520|22525..=22526|22931..=22932|22937..=22938|23343..=23345|23827|23956..=23957|23966..=23983|24308..=24309|24314..=24315|24320..=24321|24326..=24335|24660..=24661|24666..=24667|24672..=24673|24678..=24679|25704..=25751|25796|25903|25962|25964..=25967|26052..=26053|26378|26463..=26464|26789|26874..=26875|27200|27285..=27286|27611..=27620|27623..=27631|27633|27650..=27741|27744)
    }
}

static COLLISION_SHAPES_MAP: [&LazyLock<VoxelShape>; 27914] = [
    &SHAPE0, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE1, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE10,
    &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE8, &SHAPE9,
    &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE11,
    &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8,
    &SHAPE9, &SHAPE8, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE11, &SHAPE10, &SHAPE11,
    &SHAPE10, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE10,
    &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE8, &SHAPE9,
    &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE11,
    &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8,
    &SHAPE9, &SHAPE8, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE11, &SHAPE10, &SHAPE11,
    &SHAPE10, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE10,
    &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE8, &SHAPE9,
    &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE11,
    &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8,
    &SHAPE9, &SHAPE8, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE11, &SHAPE10, &SHAPE11,
    &SHAPE10, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE10,
    &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE8, &SHAPE9,
    &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE11,
    &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8,
    &SHAPE9, &SHAPE8, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE11, &SHAPE10, &SHAPE11,
    &SHAPE10, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE10,
    &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE8, &SHAPE9,
    &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE11,
    &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8,
    &SHAPE9, &SHAPE8, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE11, &SHAPE10, &SHAPE11,
    &SHAPE10, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE10,
    &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE14, &SHAPE15, &SHAPE16, &SHAPE17,
    &SHAPE18, &SHAPE19, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE14, &SHAPE15,
    &SHAPE16, &SHAPE17, &SHAPE18, &SHAPE19, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE25, &SHAPE25, &SHAPE26, &SHAPE26, &SHAPE27, &SHAPE27, &SHAPE28, &SHAPE28, &SHAPE29,
    &SHAPE29, &SHAPE30, &SHAPE30, &SHAPE31, &SHAPE31, &SHAPE32, &SHAPE32, &SHAPE33, &SHAPE33,
    &SHAPE34, &SHAPE34, &SHAPE35, &SHAPE35, &SHAPE36, &SHAPE36, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79,
    &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84,
    &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88,
    &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93,
    &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88,
    &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93,
    &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98,
    &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99,
    &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94,
    &SHAPE100, &SHAPE100, &SHAPE101, &SHAPE101, &SHAPE102, &SHAPE102, &SHAPE100, &SHAPE100,
    &SHAPE102, &SHAPE102, &SHAPE101, &SHAPE101, &SHAPE100, &SHAPE100, &SHAPE103, &SHAPE103,
    &SHAPE104, &SHAPE104, &SHAPE100, &SHAPE100, &SHAPE104, &SHAPE104, &SHAPE103, &SHAPE103,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE190, &SHAPE190,
    &SHAPE190, &SHAPE190, &SHAPE190, &SHAPE190, &SHAPE190, &SHAPE190, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE195, &SHAPE195,
    &SHAPE194, &SHAPE194, &SHAPE192, &SHAPE192, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78,
    &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82,
    &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87,
    &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91,
    &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96,
    &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79,
    &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84,
    &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80,
    &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85,
    &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE203, &SHAPE203, &SHAPE203, &SHAPE203, &SHAPE205, &SHAPE205, &SHAPE205,
    &SHAPE205, &SHAPE203, &SHAPE203, &SHAPE203, &SHAPE203, &SHAPE205, &SHAPE205, &SHAPE205,
    &SHAPE205, &SHAPE203, &SHAPE203, &SHAPE203, &SHAPE203, &SHAPE205, &SHAPE205, &SHAPE205,
    &SHAPE205, &SHAPE203, &SHAPE203, &SHAPE203, &SHAPE203, &SHAPE205, &SHAPE205, &SHAPE205,
    &SHAPE205, &SHAPE203, &SHAPE203, &SHAPE203, &SHAPE203, &SHAPE205, &SHAPE205, &SHAPE205,
    &SHAPE205, &SHAPE203, &SHAPE203, &SHAPE203, &SHAPE203, &SHAPE205, &SHAPE205, &SHAPE205,
    &SHAPE205, &SHAPE203, &SHAPE203, &SHAPE203, &SHAPE203, &SHAPE205, &SHAPE205, &SHAPE205,
    &SHAPE205, &SHAPE203, &SHAPE203, &SHAPE203, &SHAPE203, &SHAPE205, &SHAPE205, &SHAPE205,
    &SHAPE205, &SHAPE203, &SHAPE203, &SHAPE203, &SHAPE203, &SHAPE205, &SHAPE205, &SHAPE205,
    &SHAPE205, &SHAPE203, &SHAPE203, &SHAPE203, &SHAPE203, &SHAPE205, &SHAPE205, &SHAPE205,
    &SHAPE205, &SHAPE203, &SHAPE203, &SHAPE203, &SHAPE203, &SHAPE205, &SHAPE205, &SHAPE205,
    &SHAPE205, &SHAPE203, &SHAPE203, &SHAPE203, &SHAPE203, &SHAPE205, &SHAPE205, &SHAPE205,
    &SHAPE205, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE192, &SHAPE192, &SHAPE193,
    &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193,
    &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195,
    &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195,
    &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194,
    &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194,
    &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192,
    &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192,
    &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE12, &SHAPE186, &SHAPE187, &SHAPE13,
    &SHAPE188, &SHAPE18, &SHAPE189, &SHAPE1, &SHAPE1, &SHAPE233, &SHAPE233, &SHAPE233, &SHAPE233,
    &SHAPE233, &SHAPE233, &SHAPE233, &SHAPE233, &SHAPE233, &SHAPE233, &SHAPE233, &SHAPE233,
    &SHAPE233, &SHAPE233, &SHAPE233, &SHAPE233, &SHAPE0, &SHAPE1, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE1, &SHAPE1, &SHAPE235, &SHAPE237, &SHAPE235, &SHAPE237,
    &SHAPE239, &SHAPE241, &SHAPE239, &SHAPE241, &SHAPE243, &SHAPE245, &SHAPE243, &SHAPE245,
    &SHAPE247, &SHAPE249, &SHAPE247, &SHAPE249, &SHAPE251, &SHAPE253, &SHAPE251, &SHAPE253,
    &SHAPE255, &SHAPE257, &SHAPE255, &SHAPE257, &SHAPE259, &SHAPE261, &SHAPE259, &SHAPE261,
    &SHAPE263, &SHAPE265, &SHAPE263, &SHAPE265, &SHAPE1, &SHAPE189, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE1,
    &SHAPE0, &SHAPE0, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE267, &SHAPE268, &SHAPE269, &SHAPE270, &SHAPE271, &SHAPE272, &SHAPE273, &SHAPE12,
    &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12,
    &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12,
    &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12,
    &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12,
    &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12,
    &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12,
    &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE193, &SHAPE193, &SHAPE193,
    &SHAPE193, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193,
    &SHAPE193, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195,
    &SHAPE195, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195,
    &SHAPE195, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194,
    &SHAPE194, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194,
    &SHAPE194, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192,
    &SHAPE192, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192,
    &SHAPE192, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193,
    &SHAPE193, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193,
    &SHAPE193, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195,
    &SHAPE195, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195,
    &SHAPE195, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194,
    &SHAPE194, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194,
    &SHAPE194, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192,
    &SHAPE192, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192,
    &SHAPE192, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193,
    &SHAPE193, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193,
    &SHAPE193, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195,
    &SHAPE195, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195,
    &SHAPE195, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194,
    &SHAPE194, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194,
    &SHAPE194, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192,
    &SHAPE192, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192,
    &SHAPE192, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193,
    &SHAPE193, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193,
    &SHAPE193, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195,
    &SHAPE195, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195,
    &SHAPE195, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194,
    &SHAPE194, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194,
    &SHAPE194, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192,
    &SHAPE192, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192,
    &SHAPE192, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193,
    &SHAPE193, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193,
    &SHAPE193, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195,
    &SHAPE195, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195,
    &SHAPE195, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194,
    &SHAPE194, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194,
    &SHAPE194, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192,
    &SHAPE192, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192,
    &SHAPE192, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193,
    &SHAPE193, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193,
    &SHAPE193, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195,
    &SHAPE195, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195,
    &SHAPE195, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194,
    &SHAPE194, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194,
    &SHAPE194, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192,
    &SHAPE192, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192,
    &SHAPE192, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193,
    &SHAPE193, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193,
    &SHAPE193, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195,
    &SHAPE195, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195,
    &SHAPE195, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194,
    &SHAPE194, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194,
    &SHAPE194, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192,
    &SHAPE192, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192,
    &SHAPE192, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193,
    &SHAPE193, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193,
    &SHAPE193, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195,
    &SHAPE195, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195,
    &SHAPE195, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194,
    &SHAPE194, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194,
    &SHAPE194, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192,
    &SHAPE192, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192,
    &SHAPE192, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193,
    &SHAPE193, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193,
    &SHAPE193, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195,
    &SHAPE195, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195,
    &SHAPE195, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194,
    &SHAPE194, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194,
    &SHAPE194, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192,
    &SHAPE192, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192,
    &SHAPE192, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193,
    &SHAPE193, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193,
    &SHAPE193, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195,
    &SHAPE195, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195,
    &SHAPE195, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194,
    &SHAPE194, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194,
    &SHAPE194, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192,
    &SHAPE192, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192,
    &SHAPE192, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279, &SHAPE278, &SHAPE279,
    &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283, &SHAPE282, &SHAPE283,
    &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287, &SHAPE286, &SHAPE287,
    &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291, &SHAPE290, &SHAPE291,
    &SHAPE292, &SHAPE292, &SHAPE293, &SHAPE293, &SHAPE294, &SHAPE294, &SHAPE276, &SHAPE277,
    &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279, &SHAPE278, &SHAPE279, &SHAPE280, &SHAPE281,
    &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283, &SHAPE282, &SHAPE283, &SHAPE284, &SHAPE285,
    &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287, &SHAPE286, &SHAPE287, &SHAPE288, &SHAPE289,
    &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291, &SHAPE290, &SHAPE291, &SHAPE1, &SHAPE1, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247,
    &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0,
    &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0,
    &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE76, &SHAPE76, &SHAPE77,
    &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81,
    &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86,
    &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90,
    &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95,
    &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90,
    &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95,
    &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87,
    &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92,
    &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77,
    &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82,
    &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86,
    &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91,
    &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95,
    &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79,
    &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95,
    &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80,
    &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92,
    &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78,
    &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82,
    &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87,
    &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91,
    &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96,
    &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79,
    &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84,
    &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80,
    &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85,
    &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE1, &SHAPE1, &SHAPE339, &SHAPE1, &SHAPE1, &SHAPE76,
    &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80,
    &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85,
    &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89,
    &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94,
    &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77,
    &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82,
    &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78,
    &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83,
    &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE340, &SHAPE340,
    &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE341, &SHAPE342,
    &SHAPE342, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE348, &SHAPE350,
    &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353,
    &SHAPE355, &SHAPE355, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350,
    &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE364, &SHAPE366,
    &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369,
    &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376,
    &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376,
    &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379,
    &SHAPE381, &SHAPE381, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366,
    &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376,
    &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379,
    &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376,
    &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE408, &SHAPE410,
    &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413,
    &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420,
    &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420,
    &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423,
    &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436,
    &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436,
    &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439,
    &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410,
    &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420,
    &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423,
    &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420,
    &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436,
    &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439,
    &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436,
    &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE1, &SHAPE1, &SHAPE235,
    &SHAPE237, &SHAPE235, &SHAPE237, &SHAPE239, &SHAPE241, &SHAPE239, &SHAPE241, &SHAPE243,
    &SHAPE245, &SHAPE243, &SHAPE245, &SHAPE247, &SHAPE249, &SHAPE247, &SHAPE249, &SHAPE251,
    &SHAPE253, &SHAPE251, &SHAPE253, &SHAPE255, &SHAPE257, &SHAPE255, &SHAPE257, &SHAPE259,
    &SHAPE261, &SHAPE259, &SHAPE261, &SHAPE263, &SHAPE265, &SHAPE263, &SHAPE265, &SHAPE76,
    &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80,
    &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85,
    &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89,
    &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94,
    &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77,
    &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82,
    &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78,
    &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83,
    &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE18, &SHAPE534, &SHAPE534, &SHAPE534, &SHAPE534, &SHAPE534, &SHAPE534,
    &SHAPE534, &SHAPE534, &SHAPE535, &SHAPE535, &SHAPE535, &SHAPE535, &SHAPE535, &SHAPE535,
    &SHAPE535, &SHAPE535, &SHAPE0, &SHAPE537, &SHAPE537, &SHAPE537, &SHAPE537, &SHAPE21, &SHAPE21,
    &SHAPE21, &SHAPE21, &SHAPE1, &SHAPE23, &SHAPE1, &SHAPE1, &SHAPE538, &SHAPE539, &SHAPE540,
    &SHAPE541, &SHAPE542, &SHAPE543, &SHAPE544, &SHAPE545, &SHAPE546, &SHAPE547, &SHAPE548,
    &SHAPE549, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79,
    &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84,
    &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88,
    &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93,
    &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88,
    &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93,
    &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98,
    &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99,
    &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94,
    &SHAPE1, &SHAPE1, &SHAPE100, &SHAPE100, &SHAPE100, &SHAPE100, &SHAPE100, &SHAPE100, &SHAPE100,
    &SHAPE100, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77,
    &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82,
    &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86,
    &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91,
    &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95,
    &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79,
    &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95,
    &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80,
    &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92,
    &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78,
    &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82,
    &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87,
    &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91,
    &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96,
    &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79,
    &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84,
    &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80,
    &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85,
    &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78,
    &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83,
    &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87,
    &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92,
    &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96,
    &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97,
    &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84,
    &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89,
    &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85,
    &SHAPE94, &SHAPE94, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE341,
    &SHAPE342, &SHAPE342, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE348,
    &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355,
    &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350,
    &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE364,
    &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371,
    &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376,
    &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374,
    &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381,
    &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366,
    &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374,
    &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381,
    &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376,
    &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE408,
    &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415,
    &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420,
    &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418,
    &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425,
    &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436,
    &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434,
    &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441,
    &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410,
    &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418,
    &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425,
    &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420,
    &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434,
    &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441,
    &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436,
    &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE341,
    &SHAPE342, &SHAPE342, &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE0,
    &SHAPE345, &SHAPE345, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350,
    &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE348, &SHAPE350,
    &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353,
    &SHAPE355, &SHAPE355, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366,
    &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376,
    &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379,
    &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376,
    &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE364, &SHAPE366,
    &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369,
    &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376,
    &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376,
    &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379,
    &SHAPE381, &SHAPE381, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410,
    &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420,
    &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423,
    &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420,
    &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436,
    &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439,
    &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436,
    &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE408, &SHAPE410,
    &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413,
    &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420,
    &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420,
    &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423,
    &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436,
    &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436,
    &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439,
    &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38,
    &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38,
    &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38,
    &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE558, &SHAPE558, &SHAPE559, &SHAPE559, &SHAPE560, &SHAPE560, &SHAPE561, &SHAPE561,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE558, &SHAPE558, &SHAPE559, &SHAPE559, &SHAPE560, &SHAPE560, &SHAPE561, &SHAPE561,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE558, &SHAPE558, &SHAPE559, &SHAPE559, &SHAPE560, &SHAPE560, &SHAPE561, &SHAPE561,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE558, &SHAPE558, &SHAPE559, &SHAPE559, &SHAPE560, &SHAPE560, &SHAPE561, &SHAPE561,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE558, &SHAPE558, &SHAPE559, &SHAPE559, &SHAPE560, &SHAPE560, &SHAPE561, &SHAPE561,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE558, &SHAPE558, &SHAPE559, &SHAPE559, &SHAPE560, &SHAPE560, &SHAPE561, &SHAPE561,
    &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562,
    &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562,
    &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562,
    &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562,
    &SHAPE563, &SHAPE563, &SHAPE564, &SHAPE564, &SHAPE565, &SHAPE565, &SHAPE566, &SHAPE566,
    &SHAPE567, &SHAPE567, &SHAPE568, &SHAPE568, &SHAPE567, &SHAPE567, &SHAPE568, &SHAPE568,
    &SHAPE567, &SHAPE567, &SHAPE568, &SHAPE568, &SHAPE100, &SHAPE100, &SHAPE101, &SHAPE101,
    &SHAPE102, &SHAPE102, &SHAPE100, &SHAPE100, &SHAPE102, &SHAPE102, &SHAPE101, &SHAPE101,
    &SHAPE100, &SHAPE100, &SHAPE103, &SHAPE103, &SHAPE104, &SHAPE104, &SHAPE100, &SHAPE100,
    &SHAPE104, &SHAPE104, &SHAPE103, &SHAPE103, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE12, &SHAPE12, &SHAPE12,
    &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12,
    &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187,
    &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187,
    &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187,
    &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187,
    &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE1, &SHAPE1, &SHAPE569, &SHAPE570, &SHAPE571, &SHAPE572,
    &SHAPE573, &SHAPE569, &SHAPE570, &SHAPE571, &SHAPE572, &SHAPE573, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79,
    &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83,
    &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88,
    &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92,
    &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88,
    &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97,
    &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98,
    &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89,
    &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94,
    &SHAPE94, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279,
    &SHAPE278, &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283,
    &SHAPE282, &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287,
    &SHAPE286, &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291,
    &SHAPE290, &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279,
    &SHAPE278, &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283,
    &SHAPE282, &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287,
    &SHAPE286, &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291,
    &SHAPE290, &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279,
    &SHAPE278, &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283,
    &SHAPE282, &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287,
    &SHAPE286, &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291,
    &SHAPE290, &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279,
    &SHAPE278, &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283,
    &SHAPE282, &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287,
    &SHAPE286, &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291,
    &SHAPE290, &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279,
    &SHAPE278, &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283,
    &SHAPE282, &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287,
    &SHAPE286, &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291,
    &SHAPE290, &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279,
    &SHAPE278, &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283,
    &SHAPE282, &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287,
    &SHAPE286, &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291,
    &SHAPE290, &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279,
    &SHAPE278, &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283,
    &SHAPE282, &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287,
    &SHAPE286, &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291,
    &SHAPE290, &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279,
    &SHAPE278, &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283,
    &SHAPE282, &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287,
    &SHAPE286, &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291,
    &SHAPE290, &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279,
    &SHAPE278, &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283,
    &SHAPE282, &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287,
    &SHAPE286, &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291,
    &SHAPE290, &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279,
    &SHAPE278, &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283,
    &SHAPE282, &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287,
    &SHAPE286, &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291,
    &SHAPE290, &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279,
    &SHAPE278, &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283,
    &SHAPE282, &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287,
    &SHAPE286, &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291,
    &SHAPE290, &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279,
    &SHAPE278, &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283,
    &SHAPE282, &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287,
    &SHAPE286, &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291,
    &SHAPE290, &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279,
    &SHAPE278, &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283,
    &SHAPE282, &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287,
    &SHAPE286, &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291,
    &SHAPE290, &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279,
    &SHAPE278, &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283,
    &SHAPE282, &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287,
    &SHAPE286, &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291,
    &SHAPE290, &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279,
    &SHAPE278, &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283,
    &SHAPE282, &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287,
    &SHAPE286, &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291,
    &SHAPE290, &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279,
    &SHAPE278, &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283,
    &SHAPE282, &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287,
    &SHAPE286, &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291,
    &SHAPE290, &SHAPE291, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79,
    &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83,
    &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88,
    &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92,
    &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88,
    &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97,
    &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98,
    &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89,
    &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94,
    &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79,
    &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84,
    &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88,
    &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93,
    &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88,
    &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93,
    &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98,
    &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99,
    &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94,
    &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80,
    &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84,
    &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89,
    &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93,
    &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77,
    &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93,
    &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78,
    &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99,
    &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76,
    &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80,
    &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85,
    &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89,
    &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94,
    &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77,
    &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82,
    &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78,
    &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83,
    &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76,
    &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81,
    &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85,
    &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90,
    &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94,
    &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90,
    &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82,
    &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87,
    &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83,
    &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77,
    &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81,
    &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86,
    &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90,
    &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95,
    &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90,
    &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95,
    &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87,
    &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92,
    &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77,
    &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82,
    &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86,
    &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91,
    &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95,
    &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79,
    &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95,
    &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80,
    &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92,
    &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE193,
    &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE193,
    &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE195,
    &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE195,
    &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE194,
    &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE194,
    &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE192,
    &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE192,
    &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79,
    &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84,
    &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88,
    &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93,
    &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88,
    &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93,
    &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98,
    &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99,
    &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94,
    &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80,
    &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84,
    &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89,
    &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93,
    &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77,
    &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93,
    &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78,
    &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99,
    &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76,
    &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80,
    &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85,
    &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89,
    &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94,
    &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77,
    &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82,
    &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78,
    &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83,
    &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE340, &SHAPE340,
    &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1,
    &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75,
    &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77,
    &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81,
    &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86,
    &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90,
    &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95,
    &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90,
    &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95,
    &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87,
    &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92,
    &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13,
    &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340,
    &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13,
    &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340,
    &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13,
    &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340,
    &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13,
    &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340,
    &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13,
    &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340,
    &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13,
    &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340,
    &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13,
    &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340,
    &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13,
    &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340,
    &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247,
    &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0,
    &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0,
    &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE253,
    &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247,
    &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0,
    &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0,
    &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE247,
    &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247,
    &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0,
    &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0,
    &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE247,
    &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247,
    &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0,
    &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0,
    &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE247,
    &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253,
    &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0,
    &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0,
    &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE247,
    &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253,
    &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0,
    &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0,
    &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE253,
    &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253,
    &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0,
    &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0,
    &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE253,
    &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253,
    &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0,
    &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0,
    &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE253,
    &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE235, &SHAPE237, &SHAPE235, &SHAPE237,
    &SHAPE239, &SHAPE241, &SHAPE239, &SHAPE241, &SHAPE243, &SHAPE245, &SHAPE243, &SHAPE245,
    &SHAPE247, &SHAPE249, &SHAPE247, &SHAPE249, &SHAPE251, &SHAPE253, &SHAPE251, &SHAPE253,
    &SHAPE255, &SHAPE257, &SHAPE255, &SHAPE257, &SHAPE259, &SHAPE261, &SHAPE259, &SHAPE261,
    &SHAPE263, &SHAPE265, &SHAPE263, &SHAPE265, &SHAPE235, &SHAPE237, &SHAPE235, &SHAPE237,
    &SHAPE239, &SHAPE241, &SHAPE239, &SHAPE241, &SHAPE243, &SHAPE245, &SHAPE243, &SHAPE245,
    &SHAPE247, &SHAPE249, &SHAPE247, &SHAPE249, &SHAPE251, &SHAPE253, &SHAPE251, &SHAPE253,
    &SHAPE255, &SHAPE257, &SHAPE255, &SHAPE257, &SHAPE259, &SHAPE261, &SHAPE259, &SHAPE261,
    &SHAPE263, &SHAPE265, &SHAPE263, &SHAPE265, &SHAPE235, &SHAPE237, &SHAPE235, &SHAPE237,
    &SHAPE239, &SHAPE241, &SHAPE239, &SHAPE241, &SHAPE243, &SHAPE245, &SHAPE243, &SHAPE245,
    &SHAPE247, &SHAPE249, &SHAPE247, &SHAPE249, &SHAPE251, &SHAPE253, &SHAPE251, &SHAPE253,
    &SHAPE255, &SHAPE257, &SHAPE255, &SHAPE257, &SHAPE259, &SHAPE261, &SHAPE259, &SHAPE261,
    &SHAPE263, &SHAPE265, &SHAPE263, &SHAPE265, &SHAPE235, &SHAPE237, &SHAPE235, &SHAPE237,
    &SHAPE239, &SHAPE241, &SHAPE239, &SHAPE241, &SHAPE243, &SHAPE245, &SHAPE243, &SHAPE245,
    &SHAPE247, &SHAPE249, &SHAPE247, &SHAPE249, &SHAPE251, &SHAPE253, &SHAPE251, &SHAPE253,
    &SHAPE255, &SHAPE257, &SHAPE255, &SHAPE257, &SHAPE259, &SHAPE261, &SHAPE259, &SHAPE261,
    &SHAPE263, &SHAPE265, &SHAPE263, &SHAPE265, &SHAPE235, &SHAPE237, &SHAPE235, &SHAPE237,
    &SHAPE239, &SHAPE241, &SHAPE239, &SHAPE241, &SHAPE243, &SHAPE245, &SHAPE243, &SHAPE245,
    &SHAPE247, &SHAPE249, &SHAPE247, &SHAPE249, &SHAPE251, &SHAPE253, &SHAPE251, &SHAPE253,
    &SHAPE255, &SHAPE257, &SHAPE255, &SHAPE257, &SHAPE259, &SHAPE261, &SHAPE259, &SHAPE261,
    &SHAPE263, &SHAPE265, &SHAPE263, &SHAPE265, &SHAPE235, &SHAPE237, &SHAPE235, &SHAPE237,
    &SHAPE239, &SHAPE241, &SHAPE239, &SHAPE241, &SHAPE243, &SHAPE245, &SHAPE243, &SHAPE245,
    &SHAPE247, &SHAPE249, &SHAPE247, &SHAPE249, &SHAPE251, &SHAPE253, &SHAPE251, &SHAPE253,
    &SHAPE255, &SHAPE257, &SHAPE255, &SHAPE257, &SHAPE259, &SHAPE261, &SHAPE259, &SHAPE261,
    &SHAPE263, &SHAPE265, &SHAPE263, &SHAPE265, &SHAPE235, &SHAPE237, &SHAPE235, &SHAPE237,
    &SHAPE239, &SHAPE241, &SHAPE239, &SHAPE241, &SHAPE243, &SHAPE245, &SHAPE243, &SHAPE245,
    &SHAPE247, &SHAPE249, &SHAPE247, &SHAPE249, &SHAPE251, &SHAPE253, &SHAPE251, &SHAPE253,
    &SHAPE255, &SHAPE257, &SHAPE255, &SHAPE257, &SHAPE259, &SHAPE261, &SHAPE259, &SHAPE261,
    &SHAPE263, &SHAPE265, &SHAPE263, &SHAPE265, &SHAPE235, &SHAPE237, &SHAPE235, &SHAPE237,
    &SHAPE239, &SHAPE241, &SHAPE239, &SHAPE241, &SHAPE243, &SHAPE245, &SHAPE243, &SHAPE245,
    &SHAPE247, &SHAPE249, &SHAPE247, &SHAPE249, &SHAPE251, &SHAPE253, &SHAPE251, &SHAPE253,
    &SHAPE255, &SHAPE257, &SHAPE255, &SHAPE257, &SHAPE259, &SHAPE261, &SHAPE259, &SHAPE261,
    &SHAPE263, &SHAPE265, &SHAPE263, &SHAPE265, &SHAPE235, &SHAPE237, &SHAPE235, &SHAPE237,
    &SHAPE239, &SHAPE241, &SHAPE239, &SHAPE241, &SHAPE243, &SHAPE245, &SHAPE243, &SHAPE245,
    &SHAPE247, &SHAPE249, &SHAPE247, &SHAPE249, &SHAPE251, &SHAPE253, &SHAPE251, &SHAPE253,
    &SHAPE255, &SHAPE257, &SHAPE255, &SHAPE257, &SHAPE259, &SHAPE261, &SHAPE259, &SHAPE261,
    &SHAPE263, &SHAPE265, &SHAPE263, &SHAPE265, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE578, &SHAPE579, &SHAPE578, &SHAPE579,
    &SHAPE266, &SHAPE266, &SHAPE580, &SHAPE581, &SHAPE582, &SHAPE583, &SHAPE584, &SHAPE585,
    &SHAPE586, &SHAPE587, &SHAPE588, &SHAPE589, &SHAPE590, &SHAPE591, &SHAPE592, &SHAPE593,
    &SHAPE594, &SHAPE595, &SHAPE596, &SHAPE597, &SHAPE598, &SHAPE599, &SHAPE600, &SHAPE601,
    &SHAPE602, &SHAPE603, &SHAPE604, &SHAPE605, &SHAPE606, &SHAPE607, &SHAPE608, &SHAPE201,
    &SHAPE609, &SHAPE610, &SHAPE611, &SHAPE612, &SHAPE613, &SHAPE614, &SHAPE615, &SHAPE616,
    &SHAPE617, &SHAPE618, &SHAPE619, &SHAPE620, &SHAPE621, &SHAPE622, &SHAPE623, &SHAPE624,
    &SHAPE625, &SHAPE626, &SHAPE627, &SHAPE628, &SHAPE629, &SHAPE630, &SHAPE631, &SHAPE632,
    &SHAPE633, &SHAPE634, &SHAPE635, &SHAPE636, &SHAPE637, &SHAPE638, &SHAPE639, &SHAPE640,
    &SHAPE641, &SHAPE642, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79,
    &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83,
    &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88,
    &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92,
    &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88,
    &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97,
    &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98,
    &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89,
    &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94,
    &SHAPE94, &SHAPE1, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE644, &SHAPE0, &SHAPE645, &SHAPE0,
    &SHAPE645, &SHAPE0, &SHAPE645, &SHAPE0, &SHAPE645, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE190, &SHAPE0, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE0, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE1, &SHAPE651, &SHAPE651, &SHAPE651,
    &SHAPE652, &SHAPE652, &SHAPE652, &SHAPE652, &SHAPE652, &SHAPE652, &SHAPE652, &SHAPE652,
    &SHAPE652, &SHAPE653, &SHAPE653, &SHAPE653, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE660, &SHAPE660, &SHAPE661, &SHAPE661,
    &SHAPE662, &SHAPE662, &SHAPE663, &SHAPE663, &SHAPE1, &SHAPE650, &SHAPE650, &SHAPE0, &SHAPE665,
    &SHAPE665, &SHAPE665, &SHAPE665, &SHAPE665, &SHAPE665, &SHAPE665, &SHAPE665, &SHAPE665,
    &SHAPE665, &SHAPE665, &SHAPE665, &SHAPE38, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE76,
    &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80,
    &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85,
    &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89,
    &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94,
    &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77,
    &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82,
    &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78,
    &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83,
    &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76,
    &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81,
    &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85,
    &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90,
    &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94,
    &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90,
    &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82,
    &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87,
    &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83,
    &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77,
    &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81,
    &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86,
    &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90,
    &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95,
    &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90,
    &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95,
    &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87,
    &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92,
    &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77,
    &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82,
    &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86,
    &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91,
    &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95,
    &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79,
    &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95,
    &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80,
    &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92,
    &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78,
    &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82,
    &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87,
    &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91,
    &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96,
    &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79,
    &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84,
    &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80,
    &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85,
    &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78,
    &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83,
    &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87,
    &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92,
    &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96,
    &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97,
    &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84,
    &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89,
    &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85,
    &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79,
    &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83,
    &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88,
    &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92,
    &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88,
    &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97,
    &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98,
    &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89,
    &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94,
    &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79,
    &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84,
    &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88,
    &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93,
    &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88,
    &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93,
    &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98,
    &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99,
    &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94,
    &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80,
    &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84,
    &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89,
    &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93,
    &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77,
    &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93,
    &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78,
    &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99,
    &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76,
    &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80,
    &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85,
    &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89,
    &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94,
    &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77,
    &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82,
    &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78,
    &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83,
    &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76,
    &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81,
    &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85,
    &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90,
    &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94,
    &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90,
    &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82,
    &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87,
    &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83,
    &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77,
    &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81,
    &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86,
    &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90,
    &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95,
    &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90,
    &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95,
    &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87,
    &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92,
    &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77,
    &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82,
    &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86,
    &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91,
    &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95,
    &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79,
    &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95,
    &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80,
    &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92,
    &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78,
    &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82,
    &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87,
    &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91,
    &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96,
    &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79,
    &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84,
    &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80,
    &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85,
    &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1,
    &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13,
    &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1,
    &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13,
    &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1,
    &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13,
    &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1,
    &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13,
    &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1,
    &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE0, &SHAPE345,
    &SHAPE345, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348,
    &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355,
    &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355,
    &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364,
    &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371,
    &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381,
    &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374,
    &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381,
    &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371,
    &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374,
    &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381,
    &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381,
    &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408,
    &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415,
    &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425,
    &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418,
    &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425,
    &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441,
    &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434,
    &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415,
    &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418,
    &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425,
    &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425,
    &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434,
    &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441,
    &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE341,
    &SHAPE342, &SHAPE342, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE348,
    &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355,
    &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350,
    &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE364,
    &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371,
    &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376,
    &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374,
    &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381,
    &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366,
    &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374,
    &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381,
    &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376,
    &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE408,
    &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415,
    &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420,
    &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418,
    &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425,
    &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436,
    &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434,
    &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441,
    &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410,
    &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418,
    &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425,
    &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420,
    &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434,
    &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441,
    &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436,
    &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE341,
    &SHAPE342, &SHAPE342, &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE0,
    &SHAPE345, &SHAPE345, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350,
    &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE348, &SHAPE350,
    &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353,
    &SHAPE355, &SHAPE355, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366,
    &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376,
    &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379,
    &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376,
    &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE364, &SHAPE366,
    &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369,
    &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376,
    &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376,
    &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379,
    &SHAPE381, &SHAPE381, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410,
    &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420,
    &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423,
    &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420,
    &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436,
    &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439,
    &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436,
    &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE408, &SHAPE410,
    &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413,
    &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420,
    &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420,
    &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423,
    &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436,
    &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436,
    &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439,
    &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE341, &SHAPE342, &SHAPE342,
    &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE348, &SHAPE350, &SHAPE350,
    &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355,
    &SHAPE355, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353,
    &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE364, &SHAPE366, &SHAPE366,
    &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371,
    &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379,
    &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376,
    &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381,
    &SHAPE381, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369,
    &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376,
    &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381,
    &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379,
    &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE408, &SHAPE410, &SHAPE410,
    &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415,
    &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423,
    &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420,
    &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425,
    &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439,
    &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436,
    &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441,
    &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413,
    &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420,
    &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425,
    &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423,
    &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436,
    &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441,
    &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439,
    &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE341, &SHAPE342, &SHAPE342,
    &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE0, &SHAPE345, &SHAPE345,
    &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355,
    &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348,
    &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355,
    &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371,
    &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374,
    &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381,
    &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381,
    &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364,
    &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371,
    &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381,
    &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374,
    &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381,
    &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415,
    &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418,
    &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425,
    &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425,
    &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434,
    &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441,
    &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408,
    &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415,
    &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425,
    &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418,
    &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425,
    &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441,
    &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434,
    &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE0, &SHAPE345,
    &SHAPE345, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348,
    &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355,
    &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355,
    &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364,
    &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371,
    &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381,
    &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374,
    &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381,
    &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371,
    &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374,
    &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381,
    &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381,
    &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408,
    &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415,
    &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425,
    &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418,
    &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425,
    &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441,
    &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434,
    &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415,
    &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418,
    &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425,
    &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425,
    &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434,
    &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441,
    &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE341,
    &SHAPE342, &SHAPE342, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE348,
    &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355,
    &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350,
    &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE364,
    &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371,
    &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376,
    &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374,
    &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381,
    &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366,
    &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374,
    &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381,
    &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376,
    &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE408,
    &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415,
    &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420,
    &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418,
    &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425,
    &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436,
    &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434,
    &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441,
    &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410,
    &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418,
    &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425,
    &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420,
    &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434,
    &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441,
    &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436,
    &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE341,
    &SHAPE342, &SHAPE342, &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE0,
    &SHAPE345, &SHAPE345, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350,
    &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE348, &SHAPE350,
    &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353,
    &SHAPE355, &SHAPE355, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366,
    &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376,
    &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379,
    &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376,
    &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE364, &SHAPE366,
    &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369,
    &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376,
    &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376,
    &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379,
    &SHAPE381, &SHAPE381, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410,
    &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420,
    &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423,
    &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420,
    &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436,
    &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439,
    &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436,
    &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE408, &SHAPE410,
    &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413,
    &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420,
    &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420,
    &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423,
    &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436,
    &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436,
    &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439,
    &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE341, &SHAPE342, &SHAPE342,
    &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE348, &SHAPE350, &SHAPE350,
    &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355,
    &SHAPE355, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353,
    &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE364, &SHAPE366, &SHAPE366,
    &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371,
    &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379,
    &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376,
    &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381,
    &SHAPE381, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369,
    &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376,
    &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381,
    &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379,
    &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE408, &SHAPE410, &SHAPE410,
    &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415,
    &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423,
    &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420,
    &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425,
    &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439,
    &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436,
    &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441,
    &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413,
    &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420,
    &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425,
    &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423,
    &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436,
    &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441,
    &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439,
    &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE341, &SHAPE342, &SHAPE342,
    &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE0, &SHAPE345, &SHAPE345,
    &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355,
    &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348,
    &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355,
    &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371,
    &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374,
    &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381,
    &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381,
    &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364,
    &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371,
    &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381,
    &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374,
    &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381,
    &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415,
    &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418,
    &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425,
    &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425,
    &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434,
    &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441,
    &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408,
    &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415,
    &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425,
    &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418,
    &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425,
    &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441,
    &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434,
    &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE0, &SHAPE345,
    &SHAPE345, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348,
    &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355,
    &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355,
    &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364,
    &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371,
    &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381,
    &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374,
    &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381,
    &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371,
    &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374,
    &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381,
    &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381,
    &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408,
    &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415,
    &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425,
    &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418,
    &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425,
    &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441,
    &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434,
    &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415,
    &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418,
    &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425,
    &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425,
    &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434,
    &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441,
    &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE341,
    &SHAPE342, &SHAPE342, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE348,
    &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355,
    &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350,
    &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE364,
    &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371,
    &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376,
    &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374,
    &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381,
    &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366,
    &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374,
    &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381,
    &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376,
    &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE408,
    &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415,
    &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420,
    &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418,
    &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425,
    &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436,
    &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434,
    &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441,
    &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410,
    &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418,
    &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425,
    &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420,
    &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434,
    &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441,
    &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436,
    &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE341,
    &SHAPE342, &SHAPE342, &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE0,
    &SHAPE345, &SHAPE345, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350,
    &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE348, &SHAPE350,
    &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353,
    &SHAPE355, &SHAPE355, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366,
    &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376,
    &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379,
    &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376,
    &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE364, &SHAPE366,
    &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369,
    &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376,
    &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376,
    &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379,
    &SHAPE381, &SHAPE381, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410,
    &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420,
    &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423,
    &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420,
    &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436,
    &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439,
    &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436,
    &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE408, &SHAPE410,
    &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413,
    &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420,
    &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420,
    &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423,
    &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436,
    &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436,
    &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439,
    &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE668, &SHAPE668, &SHAPE668, &SHAPE668, &SHAPE668, &SHAPE668,
    &SHAPE668, &SHAPE668, &SHAPE668, &SHAPE668, &SHAPE668, &SHAPE668, &SHAPE668, &SHAPE668,
    &SHAPE668, &SHAPE668, &SHAPE668, &SHAPE668, &SHAPE668, &SHAPE668, &SHAPE668, &SHAPE668,
    &SHAPE668, &SHAPE668, &SHAPE668, &SHAPE668, &SHAPE668, &SHAPE668, &SHAPE668, &SHAPE668,
    &SHAPE668, &SHAPE668, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE670, &SHAPE670, &SHAPE671,
    &SHAPE671, &SHAPE672, &SHAPE673, &SHAPE674, &SHAPE675, &SHAPE676, &SHAPE676, &SHAPE677,
    &SHAPE677, &SHAPE678, &SHAPE678, &SHAPE678, &SHAPE678, &SHAPE678, &SHAPE678, &SHAPE678,
    &SHAPE678, &SHAPE678, &SHAPE678, &SHAPE678, &SHAPE678, &SHAPE678, &SHAPE678, &SHAPE678,
    &SHAPE678, &SHAPE1, &SHAPE556, &SHAPE556, &SHAPE556, &SHAPE556, &SHAPE683, &SHAPE683,
    &SHAPE683, &SHAPE683, &SHAPE684, &SHAPE684, &SHAPE684, &SHAPE684, &SHAPE685, &SHAPE685,
    &SHAPE685, &SHAPE685, &SHAPE685, &SHAPE685, &SHAPE685, &SHAPE685, &SHAPE686, &SHAPE686,
    &SHAPE687, &SHAPE687, &SHAPE688, &SHAPE688, &SHAPE689, &SHAPE689, &SHAPE690, &SHAPE690,
    &SHAPE690, &SHAPE690, &SHAPE691, &SHAPE691, &SHAPE691, &SHAPE691, &SHAPE692, &SHAPE692,
    &SHAPE693, &SHAPE693, &SHAPE692, &SHAPE692, &SHAPE693, &SHAPE693, &SHAPE555, &SHAPE555,
    &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555,
    &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555,
    &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555,
    &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555,
    &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555,
    &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555,
    &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555,
    &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE0, &SHAPE1, &SHAPE0, &SHAPE0, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE0, &SHAPE1, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE1, &SHAPE1,
    &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13,
    &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE235, &SHAPE237,
    &SHAPE235, &SHAPE237, &SHAPE239, &SHAPE241, &SHAPE239, &SHAPE241, &SHAPE243, &SHAPE245,
    &SHAPE243, &SHAPE245, &SHAPE247, &SHAPE249, &SHAPE247, &SHAPE249, &SHAPE251, &SHAPE253,
    &SHAPE251, &SHAPE253, &SHAPE255, &SHAPE257, &SHAPE255, &SHAPE257, &SHAPE259, &SHAPE261,
    &SHAPE259, &SHAPE261, &SHAPE263, &SHAPE265, &SHAPE263, &SHAPE265, &SHAPE235, &SHAPE237,
    &SHAPE235, &SHAPE237, &SHAPE239, &SHAPE241, &SHAPE239, &SHAPE241, &SHAPE243, &SHAPE245,
    &SHAPE243, &SHAPE245, &SHAPE247, &SHAPE249, &SHAPE247, &SHAPE249, &SHAPE251, &SHAPE253,
    &SHAPE251, &SHAPE253, &SHAPE255, &SHAPE257, &SHAPE255, &SHAPE257, &SHAPE259, &SHAPE261,
    &SHAPE259, &SHAPE261, &SHAPE263, &SHAPE265, &SHAPE263, &SHAPE265, &SHAPE193, &SHAPE193,
    &SHAPE193, &SHAPE193, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193,
    &SHAPE193, &SHAPE193, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195,
    &SHAPE195, &SHAPE195, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195,
    &SHAPE195, &SHAPE195, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194,
    &SHAPE194, &SHAPE194, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194,
    &SHAPE194, &SHAPE194, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192,
    &SHAPE192, &SHAPE192, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192,
    &SHAPE192, &SHAPE192, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE193, &SHAPE193,
    &SHAPE193, &SHAPE193, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193,
    &SHAPE193, &SHAPE193, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195,
    &SHAPE195, &SHAPE195, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195,
    &SHAPE195, &SHAPE195, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194,
    &SHAPE194, &SHAPE194, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194,
    &SHAPE194, &SHAPE194, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192,
    &SHAPE192, &SHAPE192, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192,
    &SHAPE192, &SHAPE192, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE0, &SHAPE0, &SHAPE247,
    &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247,
    &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0,
    &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0,
    &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE247,
    &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247, &SHAPE0, &SHAPE0, &SHAPE247, &SHAPE247,
    &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0,
    &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE0, &SHAPE0, &SHAPE253, &SHAPE253, &SHAPE76, &SHAPE76,
    &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81,
    &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85,
    &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90,
    &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94,
    &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90,
    &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82,
    &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87,
    &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83,
    &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77,
    &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81,
    &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86,
    &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90,
    &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95,
    &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90,
    &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95,
    &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87,
    &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92,
    &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE192, &SHAPE192, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE698, &SHAPE698, &SHAPE698, &SHAPE698, &SHAPE698, &SHAPE698,
    &SHAPE698, &SHAPE698, &SHAPE698, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE233, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE38, &SHAPE38, &SHAPE38,
    &SHAPE38, &SHAPE1, &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78,
    &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83,
    &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87,
    &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92,
    &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96,
    &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97,
    &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84,
    &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89,
    &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85,
    &SHAPE94, &SHAPE94, &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE0,
    &SHAPE345, &SHAPE345, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE348, &SHAPE350, &SHAPE350,
    &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355,
    &SHAPE355, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353,
    &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE364, &SHAPE366, &SHAPE366,
    &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371,
    &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379,
    &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376,
    &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381,
    &SHAPE381, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369,
    &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376,
    &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381,
    &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379,
    &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE408, &SHAPE410, &SHAPE410,
    &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415,
    &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423,
    &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420,
    &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425,
    &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439,
    &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436,
    &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441,
    &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413,
    &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420,
    &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425,
    &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423,
    &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436,
    &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441,
    &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439,
    &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE340, &SHAPE340, &SHAPE13,
    &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13,
    &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78,
    &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83,
    &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87,
    &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92,
    &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96,
    &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97,
    &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84,
    &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89,
    &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85,
    &SHAPE94, &SHAPE94, &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE0,
    &SHAPE345, &SHAPE345, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE348, &SHAPE350, &SHAPE350,
    &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355,
    &SHAPE355, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353,
    &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE364, &SHAPE366, &SHAPE366,
    &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371,
    &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379,
    &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376,
    &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381,
    &SHAPE381, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369,
    &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376,
    &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381,
    &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379,
    &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE408, &SHAPE410, &SHAPE410,
    &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415,
    &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423,
    &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420,
    &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425,
    &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439,
    &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436,
    &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441,
    &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413,
    &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420,
    &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425,
    &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423,
    &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436,
    &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441,
    &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439,
    &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77,
    &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81,
    &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86,
    &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90,
    &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95,
    &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90,
    &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95,
    &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87,
    &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92,
    &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13,
    &SHAPE1, &SHAPE1, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE341, &SHAPE342,
    &SHAPE342, &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE0, &SHAPE345,
    &SHAPE345, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353,
    &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE348, &SHAPE350, &SHAPE350,
    &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355,
    &SHAPE355, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369,
    &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376,
    &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381,
    &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379,
    &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE364, &SHAPE366, &SHAPE366,
    &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371,
    &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379,
    &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376,
    &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381,
    &SHAPE381, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413,
    &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420,
    &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425,
    &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423,
    &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436,
    &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441,
    &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439,
    &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE408, &SHAPE410, &SHAPE410,
    &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415,
    &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423,
    &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420,
    &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425,
    &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439,
    &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436,
    &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441,
    &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE708, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709,
    &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709,
    &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709,
    &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709,
    &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE1, &SHAPE1, &SHAPE710, &SHAPE710,
    &SHAPE711, &SHAPE711, &SHAPE712, &SHAPE712, &SHAPE713, &SHAPE713, &SHAPE714, &SHAPE714,
    &SHAPE715, &SHAPE715, &SHAPE716, &SHAPE716, &SHAPE717, &SHAPE717, &SHAPE718, &SHAPE718,
    &SHAPE719, &SHAPE719, &SHAPE720, &SHAPE720, &SHAPE721, &SHAPE721, &SHAPE722, &SHAPE722,
    &SHAPE723, &SHAPE723, &SHAPE724, &SHAPE724, &SHAPE725, &SHAPE725, &SHAPE726, &SHAPE726,
    &SHAPE727, &SHAPE727, &SHAPE728, &SHAPE728, &SHAPE729, &SHAPE729, &SHAPE730, &SHAPE730,
    &SHAPE731, &SHAPE731, &SHAPE732, &SHAPE732, &SHAPE733, &SHAPE733, &SHAPE1, &SHAPE340,
    &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77,
    &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82,
    &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86,
    &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91,
    &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95,
    &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79,
    &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95,
    &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80,
    &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92,
    &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE341, &SHAPE342,
    &SHAPE342, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE348, &SHAPE350,
    &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353,
    &SHAPE355, &SHAPE355, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350,
    &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE364, &SHAPE366,
    &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369,
    &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376,
    &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376,
    &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379,
    &SHAPE381, &SHAPE381, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366,
    &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376,
    &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379,
    &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376,
    &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE408, &SHAPE410,
    &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413,
    &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420,
    &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420,
    &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423,
    &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436,
    &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436,
    &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439,
    &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410,
    &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420,
    &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423,
    &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420,
    &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436,
    &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439,
    &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436,
    &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE1, &SHAPE340,
    &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77,
    &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82,
    &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86,
    &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91,
    &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95,
    &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79,
    &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95,
    &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80,
    &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92,
    &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE341, &SHAPE342,
    &SHAPE342, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE348, &SHAPE350,
    &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353,
    &SHAPE355, &SHAPE355, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350,
    &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE364, &SHAPE366,
    &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369,
    &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376,
    &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376,
    &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379,
    &SHAPE381, &SHAPE381, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366,
    &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376,
    &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379,
    &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376,
    &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE408, &SHAPE410,
    &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413,
    &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420,
    &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420,
    &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423,
    &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436,
    &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436,
    &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439,
    &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410,
    &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420,
    &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423,
    &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420,
    &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436,
    &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439,
    &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436,
    &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE1, &SHAPE1, &SHAPE340,
    &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77,
    &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82,
    &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86,
    &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91,
    &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95,
    &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79,
    &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95,
    &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80,
    &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92,
    &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE341, &SHAPE342,
    &SHAPE342, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE348, &SHAPE350,
    &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353,
    &SHAPE355, &SHAPE355, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350,
    &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE364, &SHAPE366,
    &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369,
    &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376,
    &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376,
    &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379,
    &SHAPE381, &SHAPE381, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366,
    &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376,
    &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379,
    &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376,
    &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE408, &SHAPE410,
    &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413,
    &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420,
    &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420,
    &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423,
    &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436,
    &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436,
    &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439,
    &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410,
    &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420,
    &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423,
    &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420,
    &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436,
    &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439,
    &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436,
    &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446,
    &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449,
    &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446,
    &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE0, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE1, &SHAPE1, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79,
    &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84,
    &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88,
    &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93,
    &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88,
    &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93,
    &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98,
    &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99,
    &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94,
    &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80,
    &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84,
    &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89,
    &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93,
    &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77,
    &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93,
    &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78,
    &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99,
    &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76,
    &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80,
    &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85,
    &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89,
    &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94,
    &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77,
    &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82,
    &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78,
    &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83,
    &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76,
    &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81,
    &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85,
    &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90,
    &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94,
    &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90,
    &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82,
    &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87,
    &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83,
    &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE340, &SHAPE340, &SHAPE13,
    &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1,
    &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13,
    &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79,
    &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84,
    &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88,
    &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93,
    &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88,
    &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93,
    &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98,
    &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99,
    &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94,
    &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80,
    &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84,
    &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89,
    &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93,
    &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77,
    &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93,
    &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78,
    &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99,
    &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76,
    &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80,
    &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85,
    &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89,
    &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94,
    &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77,
    &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82,
    &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78,
    &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83,
    &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76,
    &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81,
    &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85,
    &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90,
    &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94,
    &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90,
    &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82,
    &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87,
    &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83,
    &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE340, &SHAPE340, &SHAPE13,
    &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1,
    &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13,
    &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE578, &SHAPE578, &SHAPE578, &SHAPE578, &SHAPE579, &SHAPE579, &SHAPE579, &SHAPE579,
    &SHAPE578, &SHAPE578, &SHAPE578, &SHAPE578, &SHAPE579, &SHAPE579, &SHAPE579, &SHAPE579,
    &SHAPE266, &SHAPE266, &SHAPE266, &SHAPE266, &SHAPE266, &SHAPE266, &SHAPE266, &SHAPE266,
    &SHAPE734, &SHAPE734, &SHAPE734, &SHAPE734, &SHAPE735, &SHAPE735, &SHAPE736, &SHAPE736,
    &SHAPE737, &SHAPE737, &SHAPE737, &SHAPE737, &SHAPE738, &SHAPE738, &SHAPE738, &SHAPE738,
    &SHAPE739, &SHAPE739, &SHAPE739, &SHAPE739, &SHAPE1, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE741, &SHAPE741, &SHAPE75, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE1, &SHAPE758, &SHAPE758, &SHAPE758, &SHAPE758, &SHAPE760, &SHAPE760,
    &SHAPE0, &SHAPE0, &SHAPE758, &SHAPE758, &SHAPE758, &SHAPE758, &SHAPE760, &SHAPE760, &SHAPE0,
    &SHAPE0, &SHAPE758, &SHAPE758, &SHAPE758, &SHAPE758, &SHAPE760, &SHAPE760, &SHAPE0, &SHAPE0,
    &SHAPE758, &SHAPE758, &SHAPE758, &SHAPE758, &SHAPE760, &SHAPE760, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE1, &SHAPE189, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79,
    &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84,
    &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88,
    &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93,
    &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88,
    &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93,
    &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98,
    &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99,
    &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94,
    &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE341, &SHAPE342, &SHAPE342,
    &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE0, &SHAPE345, &SHAPE345,
    &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355,
    &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348,
    &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355,
    &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371,
    &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374,
    &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381,
    &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381,
    &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364,
    &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371,
    &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381,
    &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374,
    &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381,
    &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415,
    &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418,
    &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425,
    &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425,
    &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434,
    &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441,
    &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408,
    &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415,
    &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425,
    &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418,
    &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425,
    &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441,
    &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434,
    &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79,
    &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84,
    &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88,
    &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93,
    &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88,
    &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93,
    &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98,
    &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99,
    &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94,
    &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE341, &SHAPE342, &SHAPE342,
    &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE0, &SHAPE345, &SHAPE345,
    &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355,
    &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348,
    &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355,
    &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371,
    &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374,
    &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381,
    &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381,
    &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364,
    &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371,
    &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381,
    &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374,
    &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381,
    &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415,
    &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418,
    &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425,
    &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425,
    &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434,
    &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441,
    &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408,
    &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415,
    &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425,
    &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418,
    &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425,
    &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441,
    &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434,
    &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79,
    &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84,
    &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88,
    &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93,
    &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88,
    &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93,
    &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98,
    &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99,
    &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94,
    &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE341, &SHAPE342, &SHAPE342,
    &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE0, &SHAPE345, &SHAPE345,
    &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355,
    &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348,
    &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355,
    &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371,
    &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374,
    &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381,
    &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381,
    &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364,
    &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371,
    &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381,
    &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374,
    &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381,
    &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415,
    &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418,
    &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425,
    &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425,
    &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434,
    &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441,
    &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408,
    &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415,
    &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425,
    &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418,
    &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425,
    &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441,
    &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434,
    &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79,
    &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84,
    &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88,
    &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93,
    &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88,
    &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93,
    &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98,
    &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99,
    &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94,
    &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE341, &SHAPE342, &SHAPE342,
    &SHAPE341, &SHAPE342, &SHAPE342, &SHAPE0, &SHAPE345, &SHAPE345, &SHAPE0, &SHAPE345, &SHAPE345,
    &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355,
    &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE348, &SHAPE350, &SHAPE350, &SHAPE348,
    &SHAPE350, &SHAPE350, &SHAPE353, &SHAPE355, &SHAPE355, &SHAPE353, &SHAPE355, &SHAPE355,
    &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371,
    &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374,
    &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381,
    &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381,
    &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE364, &SHAPE366, &SHAPE366, &SHAPE364,
    &SHAPE366, &SHAPE366, &SHAPE369, &SHAPE371, &SHAPE371, &SHAPE369, &SHAPE371, &SHAPE371,
    &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381,
    &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE374, &SHAPE376, &SHAPE376, &SHAPE374,
    &SHAPE376, &SHAPE376, &SHAPE379, &SHAPE381, &SHAPE381, &SHAPE379, &SHAPE381, &SHAPE381,
    &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415,
    &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418,
    &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425,
    &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425,
    &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434,
    &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441,
    &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE408, &SHAPE410, &SHAPE410, &SHAPE408,
    &SHAPE410, &SHAPE410, &SHAPE413, &SHAPE415, &SHAPE415, &SHAPE413, &SHAPE415, &SHAPE415,
    &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425,
    &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE418, &SHAPE420, &SHAPE420, &SHAPE418,
    &SHAPE420, &SHAPE420, &SHAPE423, &SHAPE425, &SHAPE425, &SHAPE423, &SHAPE425, &SHAPE425,
    &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441,
    &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE434, &SHAPE436, &SHAPE436, &SHAPE434,
    &SHAPE436, &SHAPE436, &SHAPE439, &SHAPE441, &SHAPE441, &SHAPE439, &SHAPE441, &SHAPE441,
    &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451,
    &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE444, &SHAPE446, &SHAPE446, &SHAPE444,
    &SHAPE446, &SHAPE446, &SHAPE449, &SHAPE451, &SHAPE451, &SHAPE449, &SHAPE451, &SHAPE451,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE38, &SHAPE38, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE0, &SHAPE1, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23,
    &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23,
    &SHAPE23, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE557, &SHAPE557, &SHAPE1, &SHAPE75, &SHAPE75, &SHAPE75,
    &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75,
    &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75,
    &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75,
    &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75,
    &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75,
    &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75,
    &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75,
    &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75,
    &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE38, &SHAPE38, &SHAPE0,
];
static OUTLINE_SHAPES_MAP: [&LazyLock<VoxelShape>; 27914] = [
    &SHAPE0, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE2,
    &SHAPE2, &SHAPE2, &SHAPE2, &SHAPE2, &SHAPE2, &SHAPE2, &SHAPE2, &SHAPE2, &SHAPE2, &SHAPE2,
    &SHAPE2, &SHAPE2, &SHAPE2, &SHAPE2, &SHAPE2, &SHAPE3, &SHAPE3, &SHAPE3, &SHAPE3, &SHAPE4,
    &SHAPE4, &SHAPE4, &SHAPE4, &SHAPE5, &SHAPE5, &SHAPE5, &SHAPE5, &SHAPE4, &SHAPE4, &SHAPE4,
    &SHAPE4, &SHAPE6, &SHAPE6, &SHAPE6, &SHAPE6, &SHAPE4, &SHAPE4, &SHAPE4, &SHAPE4, &SHAPE7,
    &SHAPE7, &SHAPE7, &SHAPE7, &SHAPE4, &SHAPE4, &SHAPE4, &SHAPE4, &SHAPE4, &SHAPE4, &SHAPE4,
    &SHAPE4, &SHAPE4, &SHAPE4, &SHAPE4, &SHAPE4, &SHAPE1, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE10,
    &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE8, &SHAPE9,
    &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE11,
    &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8,
    &SHAPE9, &SHAPE8, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE11, &SHAPE10, &SHAPE11,
    &SHAPE10, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE10,
    &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE8, &SHAPE9,
    &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE11,
    &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8,
    &SHAPE9, &SHAPE8, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE11, &SHAPE10, &SHAPE11,
    &SHAPE10, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE10,
    &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE8, &SHAPE9,
    &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE11,
    &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8,
    &SHAPE9, &SHAPE8, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE11, &SHAPE10, &SHAPE11,
    &SHAPE10, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE10,
    &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE8, &SHAPE9,
    &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE11,
    &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8,
    &SHAPE9, &SHAPE8, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE11, &SHAPE10, &SHAPE11,
    &SHAPE10, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE10,
    &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE8, &SHAPE9,
    &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE11,
    &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8,
    &SHAPE9, &SHAPE8, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE11, &SHAPE10, &SHAPE11,
    &SHAPE10, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE9, &SHAPE8, &SHAPE9, &SHAPE8, &SHAPE10,
    &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE11, &SHAPE10, &SHAPE11, &SHAPE10, &SHAPE12, &SHAPE12,
    &SHAPE12, &SHAPE12, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE12, &SHAPE12,
    &SHAPE12, &SHAPE12, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE14, &SHAPE15, &SHAPE16, &SHAPE17, &SHAPE18, &SHAPE19, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE20, &SHAPE20, &SHAPE20, &SHAPE21, &SHAPE22,
    &SHAPE23, &SHAPE2, &SHAPE24, &SHAPE24, &SHAPE14, &SHAPE15, &SHAPE16, &SHAPE17, &SHAPE18,
    &SHAPE19, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE25, &SHAPE25, &SHAPE26,
    &SHAPE26, &SHAPE27, &SHAPE27, &SHAPE28, &SHAPE28, &SHAPE29, &SHAPE29, &SHAPE30, &SHAPE30,
    &SHAPE31, &SHAPE31, &SHAPE32, &SHAPE32, &SHAPE33, &SHAPE33, &SHAPE34, &SHAPE34, &SHAPE35,
    &SHAPE35, &SHAPE36, &SHAPE36, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE37, &SHAPE37, &SHAPE37, &SHAPE37, &SHAPE37, &SHAPE37, &SHAPE37, &SHAPE37,
    &SHAPE37, &SHAPE37, &SHAPE37, &SHAPE37, &SHAPE37, &SHAPE37, &SHAPE38, &SHAPE38, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE39, &SHAPE40, &SHAPE41, &SHAPE42, &SHAPE43, &SHAPE44,
    &SHAPE45, &SHAPE46, &SHAPE47, &SHAPE48, &SHAPE49, &SHAPE50, &SHAPE51, &SHAPE52, &SHAPE53,
    &SHAPE54, &SHAPE55, &SHAPE56, &SHAPE57, &SHAPE58, &SHAPE59, &SHAPE60, &SHAPE61, &SHAPE62,
    &SHAPE63, &SHAPE64, &SHAPE65, &SHAPE66, &SHAPE67, &SHAPE68, &SHAPE69, &SHAPE70, &SHAPE71,
    &SHAPE72, &SHAPE73, &SHAPE74, &SHAPE75, &SHAPE44, &SHAPE45, &SHAPE46, &SHAPE47, &SHAPE48,
    &SHAPE49, &SHAPE50, &SHAPE51, &SHAPE52, &SHAPE53, &SHAPE54, &SHAPE55, &SHAPE56, &SHAPE57,
    &SHAPE58, &SHAPE59, &SHAPE60, &SHAPE61, &SHAPE62, &SHAPE63, &SHAPE64, &SHAPE65, &SHAPE66,
    &SHAPE67, &SHAPE68, &SHAPE69, &SHAPE70, &SHAPE71, &SHAPE72, &SHAPE73, &SHAPE74, &SHAPE75,
    &SHAPE44, &SHAPE45, &SHAPE46, &SHAPE47, &SHAPE48, &SHAPE49, &SHAPE50, &SHAPE51, &SHAPE52,
    &SHAPE53, &SHAPE54, &SHAPE55, &SHAPE56, &SHAPE57, &SHAPE58, &SHAPE59, &SHAPE60, &SHAPE61,
    &SHAPE62, &SHAPE63, &SHAPE64, &SHAPE65, &SHAPE66, &SHAPE67, &SHAPE68, &SHAPE69, &SHAPE70,
    &SHAPE71, &SHAPE72, &SHAPE73, &SHAPE74, &SHAPE75, &SHAPE44, &SHAPE45, &SHAPE46, &SHAPE47,
    &SHAPE48, &SHAPE49, &SHAPE50, &SHAPE51, &SHAPE52, &SHAPE53, &SHAPE54, &SHAPE55, &SHAPE56,
    &SHAPE57, &SHAPE58, &SHAPE59, &SHAPE60, &SHAPE61, &SHAPE62, &SHAPE63, &SHAPE64, &SHAPE65,
    &SHAPE66, &SHAPE67, &SHAPE68, &SHAPE69, &SHAPE70, &SHAPE71, &SHAPE72, &SHAPE73, &SHAPE74,
    &SHAPE75, &SHAPE44, &SHAPE45, &SHAPE46, &SHAPE47, &SHAPE48, &SHAPE49, &SHAPE50, &SHAPE51,
    &SHAPE52, &SHAPE53, &SHAPE54, &SHAPE55, &SHAPE56, &SHAPE57, &SHAPE58, &SHAPE59, &SHAPE60,
    &SHAPE61, &SHAPE62, &SHAPE63, &SHAPE64, &SHAPE65, &SHAPE66, &SHAPE67, &SHAPE68, &SHAPE69,
    &SHAPE70, &SHAPE71, &SHAPE72, &SHAPE73, &SHAPE74, &SHAPE75, &SHAPE44, &SHAPE45, &SHAPE46,
    &SHAPE47, &SHAPE48, &SHAPE49, &SHAPE50, &SHAPE51, &SHAPE52, &SHAPE53, &SHAPE54, &SHAPE55,
    &SHAPE56, &SHAPE57, &SHAPE58, &SHAPE59, &SHAPE60, &SHAPE61, &SHAPE62, &SHAPE63, &SHAPE64,
    &SHAPE65, &SHAPE66, &SHAPE67, &SHAPE68, &SHAPE69, &SHAPE70, &SHAPE71, &SHAPE72, &SHAPE73,
    &SHAPE74, &SHAPE75, &SHAPE44, &SHAPE45, &SHAPE46, &SHAPE47, &SHAPE48, &SHAPE49, &SHAPE50,
    &SHAPE51, &SHAPE52, &SHAPE53, &SHAPE54, &SHAPE55, &SHAPE56, &SHAPE57, &SHAPE58, &SHAPE59,
    &SHAPE60, &SHAPE61, &SHAPE62, &SHAPE63, &SHAPE64, &SHAPE65, &SHAPE66, &SHAPE67, &SHAPE68,
    &SHAPE69, &SHAPE70, &SHAPE71, &SHAPE72, &SHAPE73, &SHAPE74, &SHAPE75, &SHAPE44, &SHAPE45,
    &SHAPE46, &SHAPE47, &SHAPE48, &SHAPE49, &SHAPE50, &SHAPE51, &SHAPE52, &SHAPE53, &SHAPE54,
    &SHAPE55, &SHAPE56, &SHAPE57, &SHAPE58, &SHAPE59, &SHAPE60, &SHAPE61, &SHAPE62, &SHAPE63,
    &SHAPE64, &SHAPE65, &SHAPE66, &SHAPE67, &SHAPE68, &SHAPE69, &SHAPE70, &SHAPE71, &SHAPE72,
    &SHAPE73, &SHAPE74, &SHAPE75, &SHAPE44, &SHAPE45, &SHAPE46, &SHAPE47, &SHAPE48, &SHAPE49,
    &SHAPE50, &SHAPE51, &SHAPE52, &SHAPE53, &SHAPE54, &SHAPE55, &SHAPE56, &SHAPE57, &SHAPE58,
    &SHAPE59, &SHAPE60, &SHAPE61, &SHAPE62, &SHAPE63, &SHAPE64, &SHAPE65, &SHAPE66, &SHAPE67,
    &SHAPE68, &SHAPE69, &SHAPE70, &SHAPE71, &SHAPE72, &SHAPE73, &SHAPE74, &SHAPE75, &SHAPE44,
    &SHAPE45, &SHAPE46, &SHAPE47, &SHAPE48, &SHAPE49, &SHAPE50, &SHAPE51, &SHAPE52, &SHAPE53,
    &SHAPE54, &SHAPE55, &SHAPE56, &SHAPE57, &SHAPE58, &SHAPE59, &SHAPE60, &SHAPE61, &SHAPE62,
    &SHAPE63, &SHAPE64, &SHAPE65, &SHAPE66, &SHAPE67, &SHAPE68, &SHAPE69, &SHAPE70, &SHAPE71,
    &SHAPE72, &SHAPE73, &SHAPE74, &SHAPE75, &SHAPE44, &SHAPE45, &SHAPE46, &SHAPE47, &SHAPE48,
    &SHAPE49, &SHAPE50, &SHAPE51, &SHAPE52, &SHAPE53, &SHAPE54, &SHAPE55, &SHAPE56, &SHAPE57,
    &SHAPE58, &SHAPE59, &SHAPE60, &SHAPE61, &SHAPE62, &SHAPE63, &SHAPE64, &SHAPE65, &SHAPE66,
    &SHAPE67, &SHAPE68, &SHAPE69, &SHAPE70, &SHAPE71, &SHAPE72, &SHAPE73, &SHAPE74, &SHAPE75,
    &SHAPE44, &SHAPE45, &SHAPE46, &SHAPE47, &SHAPE48, &SHAPE49, &SHAPE50, &SHAPE51, &SHAPE52,
    &SHAPE53, &SHAPE54, &SHAPE55, &SHAPE56, &SHAPE57, &SHAPE58, &SHAPE59, &SHAPE60, &SHAPE61,
    &SHAPE62, &SHAPE63, &SHAPE64, &SHAPE65, &SHAPE66, &SHAPE67, &SHAPE68, &SHAPE69, &SHAPE70,
    &SHAPE71, &SHAPE72, &SHAPE73, &SHAPE74, &SHAPE75, &SHAPE44, &SHAPE45, &SHAPE46, &SHAPE47,
    &SHAPE48, &SHAPE49, &SHAPE50, &SHAPE51, &SHAPE52, &SHAPE53, &SHAPE54, &SHAPE55, &SHAPE56,
    &SHAPE57, &SHAPE58, &SHAPE59, &SHAPE60, &SHAPE61, &SHAPE62, &SHAPE63, &SHAPE64, &SHAPE65,
    &SHAPE66, &SHAPE67, &SHAPE68, &SHAPE69, &SHAPE70, &SHAPE71, &SHAPE72, &SHAPE73, &SHAPE74,
    &SHAPE75, &SHAPE44, &SHAPE45, &SHAPE46, &SHAPE47, &SHAPE48, &SHAPE49, &SHAPE50, &SHAPE51,
    &SHAPE52, &SHAPE53, &SHAPE54, &SHAPE55, &SHAPE56, &SHAPE57, &SHAPE58, &SHAPE59, &SHAPE60,
    &SHAPE61, &SHAPE62, &SHAPE63, &SHAPE64, &SHAPE65, &SHAPE66, &SHAPE67, &SHAPE68, &SHAPE69,
    &SHAPE70, &SHAPE71, &SHAPE72, &SHAPE73, &SHAPE74, &SHAPE75, &SHAPE44, &SHAPE45, &SHAPE46,
    &SHAPE47, &SHAPE48, &SHAPE49, &SHAPE50, &SHAPE51, &SHAPE52, &SHAPE53, &SHAPE54, &SHAPE55,
    &SHAPE56, &SHAPE57, &SHAPE58, &SHAPE59, &SHAPE60, &SHAPE61, &SHAPE62, &SHAPE63, &SHAPE64,
    &SHAPE65, &SHAPE66, &SHAPE67, &SHAPE68, &SHAPE69, &SHAPE70, &SHAPE71, &SHAPE72, &SHAPE73,
    &SHAPE74, &SHAPE75, &SHAPE44, &SHAPE45, &SHAPE46, &SHAPE47, &SHAPE48, &SHAPE49, &SHAPE50,
    &SHAPE51, &SHAPE52, &SHAPE53, &SHAPE54, &SHAPE55, &SHAPE56, &SHAPE57, &SHAPE58, &SHAPE59,
    &SHAPE60, &SHAPE61, &SHAPE62, &SHAPE63, &SHAPE64, &SHAPE65, &SHAPE66, &SHAPE67, &SHAPE68,
    &SHAPE69, &SHAPE70, &SHAPE71, &SHAPE72, &SHAPE73, &SHAPE74, &SHAPE75, &SHAPE75, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE76, &SHAPE76,
    &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81,
    &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85,
    &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90,
    &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94,
    &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90,
    &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82,
    &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87,
    &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83,
    &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE100, &SHAPE100, &SHAPE101,
    &SHAPE101, &SHAPE102, &SHAPE102, &SHAPE100, &SHAPE100, &SHAPE102, &SHAPE102, &SHAPE101,
    &SHAPE101, &SHAPE100, &SHAPE100, &SHAPE103, &SHAPE103, &SHAPE104, &SHAPE104, &SHAPE100,
    &SHAPE100, &SHAPE104, &SHAPE104, &SHAPE103, &SHAPE103, &SHAPE105, &SHAPE106, &SHAPE107,
    &SHAPE108, &SHAPE109, &SHAPE110, &SHAPE111, &SHAPE112, &SHAPE113, &SHAPE105, &SHAPE106,
    &SHAPE107, &SHAPE108, &SHAPE109, &SHAPE110, &SHAPE111, &SHAPE112, &SHAPE113, &SHAPE105,
    &SHAPE106, &SHAPE107, &SHAPE108, &SHAPE109, &SHAPE110, &SHAPE111, &SHAPE112, &SHAPE113,
    &SHAPE105, &SHAPE106, &SHAPE107, &SHAPE108, &SHAPE109, &SHAPE110, &SHAPE111, &SHAPE112,
    &SHAPE113, &SHAPE105, &SHAPE106, &SHAPE107, &SHAPE108, &SHAPE109, &SHAPE110, &SHAPE111,
    &SHAPE112, &SHAPE113, &SHAPE105, &SHAPE106, &SHAPE107, &SHAPE108, &SHAPE109, &SHAPE110,
    &SHAPE111, &SHAPE112, &SHAPE113, &SHAPE105, &SHAPE106, &SHAPE107, &SHAPE108, &SHAPE109,
    &SHAPE110, &SHAPE111, &SHAPE112, &SHAPE113, &SHAPE105, &SHAPE106, &SHAPE107, &SHAPE108,
    &SHAPE109, &SHAPE110, &SHAPE111, &SHAPE112, &SHAPE113, &SHAPE105, &SHAPE106, &SHAPE107,
    &SHAPE108, &SHAPE109, &SHAPE110, &SHAPE111, &SHAPE112, &SHAPE113, &SHAPE105, &SHAPE106,
    &SHAPE107, &SHAPE108, &SHAPE109, &SHAPE110, &SHAPE111, &SHAPE112, &SHAPE113, &SHAPE105,
    &SHAPE106, &SHAPE107, &SHAPE108, &SHAPE109, &SHAPE110, &SHAPE111, &SHAPE112, &SHAPE113,
    &SHAPE105, &SHAPE106, &SHAPE107, &SHAPE108, &SHAPE109, &SHAPE110, &SHAPE111, &SHAPE112,
    &SHAPE113, &SHAPE105, &SHAPE106, &SHAPE107, &SHAPE108, &SHAPE109, &SHAPE110, &SHAPE111,
    &SHAPE112, &SHAPE113, &SHAPE105, &SHAPE106, &SHAPE107, &SHAPE108, &SHAPE109, &SHAPE110,
    &SHAPE111, &SHAPE112, &SHAPE113, &SHAPE105, &SHAPE106, &SHAPE107, &SHAPE108, &SHAPE109,
    &SHAPE110, &SHAPE111, &SHAPE112, &SHAPE113, &SHAPE105, &SHAPE106, &SHAPE107, &SHAPE108,
    &SHAPE109, &SHAPE110, &SHAPE111, &SHAPE112, &SHAPE113, &SHAPE114, &SHAPE115, &SHAPE116,
    &SHAPE117, &SHAPE118, &SHAPE119, &SHAPE120, &SHAPE121, &SHAPE122, &SHAPE114, &SHAPE115,
    &SHAPE116, &SHAPE117, &SHAPE118, &SHAPE119, &SHAPE120, &SHAPE121, &SHAPE122, &SHAPE114,
    &SHAPE115, &SHAPE116, &SHAPE117, &SHAPE118, &SHAPE119, &SHAPE120, &SHAPE121, &SHAPE122,
    &SHAPE114, &SHAPE115, &SHAPE116, &SHAPE117, &SHAPE118, &SHAPE119, &SHAPE120, &SHAPE121,
    &SHAPE122, &SHAPE114, &SHAPE115, &SHAPE116, &SHAPE117, &SHAPE118, &SHAPE119, &SHAPE120,
    &SHAPE121, &SHAPE122, &SHAPE114, &SHAPE115, &SHAPE116, &SHAPE117, &SHAPE118, &SHAPE119,
    &SHAPE120, &SHAPE121, &SHAPE122, &SHAPE114, &SHAPE115, &SHAPE116, &SHAPE117, &SHAPE118,
    &SHAPE119, &SHAPE120, &SHAPE121, &SHAPE122, &SHAPE114, &SHAPE115, &SHAPE116, &SHAPE117,
    &SHAPE118, &SHAPE119, &SHAPE120, &SHAPE121, &SHAPE122, &SHAPE114, &SHAPE115, &SHAPE116,
    &SHAPE117, &SHAPE118, &SHAPE119, &SHAPE120, &SHAPE121, &SHAPE122, &SHAPE114, &SHAPE115,
    &SHAPE116, &SHAPE117, &SHAPE118, &SHAPE119, &SHAPE120, &SHAPE121, &SHAPE122, &SHAPE114,
    &SHAPE115, &SHAPE116, &SHAPE117, &SHAPE118, &SHAPE119, &SHAPE120, &SHAPE121, &SHAPE122,
    &SHAPE114, &SHAPE115, &SHAPE116, &SHAPE117, &SHAPE118, &SHAPE119, &SHAPE120, &SHAPE121,
    &SHAPE122, &SHAPE114, &SHAPE115, &SHAPE116, &SHAPE117, &SHAPE118, &SHAPE119, &SHAPE120,
    &SHAPE121, &SHAPE122, &SHAPE114, &SHAPE115, &SHAPE116, &SHAPE117, &SHAPE118, &SHAPE119,
    &SHAPE120, &SHAPE121, &SHAPE122, &SHAPE114, &SHAPE115, &SHAPE116, &SHAPE117, &SHAPE118,
    &SHAPE119, &SHAPE120, &SHAPE121, &SHAPE122, &SHAPE114, &SHAPE115, &SHAPE116, &SHAPE117,
    &SHAPE118, &SHAPE119, &SHAPE120, &SHAPE121, &SHAPE122, &SHAPE123, &SHAPE124, &SHAPE125,
    &SHAPE126, &SHAPE127, &SHAPE128, &SHAPE129, &SHAPE130, &SHAPE131, &SHAPE123, &SHAPE124,
    &SHAPE125, &SHAPE126, &SHAPE127, &SHAPE128, &SHAPE129, &SHAPE130, &SHAPE131, &SHAPE123,
    &SHAPE124, &SHAPE125, &SHAPE126, &SHAPE127, &SHAPE128, &SHAPE129, &SHAPE130, &SHAPE131,
    &SHAPE123, &SHAPE124, &SHAPE125, &SHAPE126, &SHAPE127, &SHAPE128, &SHAPE129, &SHAPE130,
    &SHAPE131, &SHAPE123, &SHAPE124, &SHAPE125, &SHAPE126, &SHAPE127, &SHAPE128, &SHAPE129,
    &SHAPE130, &SHAPE131, &SHAPE123, &SHAPE124, &SHAPE125, &SHAPE126, &SHAPE127, &SHAPE128,
    &SHAPE129, &SHAPE130, &SHAPE131, &SHAPE123, &SHAPE124, &SHAPE125, &SHAPE126, &SHAPE127,
    &SHAPE128, &SHAPE129, &SHAPE130, &SHAPE131, &SHAPE123, &SHAPE124, &SHAPE125, &SHAPE126,
    &SHAPE127, &SHAPE128, &SHAPE129, &SHAPE130, &SHAPE131, &SHAPE123, &SHAPE124, &SHAPE125,
    &SHAPE126, &SHAPE127, &SHAPE128, &SHAPE129, &SHAPE130, &SHAPE131, &SHAPE123, &SHAPE124,
    &SHAPE125, &SHAPE126, &SHAPE127, &SHAPE128, &SHAPE129, &SHAPE130, &SHAPE131, &SHAPE123,
    &SHAPE124, &SHAPE125, &SHAPE126, &SHAPE127, &SHAPE128, &SHAPE129, &SHAPE130, &SHAPE131,
    &SHAPE123, &SHAPE124, &SHAPE125, &SHAPE126, &SHAPE127, &SHAPE128, &SHAPE129, &SHAPE130,
    &SHAPE131, &SHAPE123, &SHAPE124, &SHAPE125, &SHAPE126, &SHAPE127, &SHAPE128, &SHAPE129,
    &SHAPE130, &SHAPE131, &SHAPE123, &SHAPE124, &SHAPE125, &SHAPE126, &SHAPE127, &SHAPE128,
    &SHAPE129, &SHAPE130, &SHAPE131, &SHAPE123, &SHAPE124, &SHAPE125, &SHAPE126, &SHAPE127,
    &SHAPE128, &SHAPE129, &SHAPE130, &SHAPE131, &SHAPE123, &SHAPE124, &SHAPE125, &SHAPE126,
    &SHAPE127, &SHAPE128, &SHAPE129, &SHAPE130, &SHAPE131, &SHAPE132, &SHAPE133, &SHAPE134,
    &SHAPE135, &SHAPE136, &SHAPE137, &SHAPE138, &SHAPE139, &SHAPE140, &SHAPE132, &SHAPE133,
    &SHAPE134, &SHAPE135, &SHAPE136, &SHAPE137, &SHAPE138, &SHAPE139, &SHAPE140, &SHAPE132,
    &SHAPE133, &SHAPE134, &SHAPE135, &SHAPE136, &SHAPE137, &SHAPE138, &SHAPE139, &SHAPE140,
    &SHAPE132, &SHAPE133, &SHAPE134, &SHAPE135, &SHAPE136, &SHAPE137, &SHAPE138, &SHAPE139,
    &SHAPE140, &SHAPE132, &SHAPE133, &SHAPE134, &SHAPE135, &SHAPE136, &SHAPE137, &SHAPE138,
    &SHAPE139, &SHAPE140, &SHAPE132, &SHAPE133, &SHAPE134, &SHAPE135, &SHAPE136, &SHAPE137,
    &SHAPE138, &SHAPE139, &SHAPE140, &SHAPE132, &SHAPE133, &SHAPE134, &SHAPE135, &SHAPE136,
    &SHAPE137, &SHAPE138, &SHAPE139, &SHAPE140, &SHAPE132, &SHAPE133, &SHAPE134, &SHAPE135,
    &SHAPE136, &SHAPE137, &SHAPE138, &SHAPE139, &SHAPE140, &SHAPE132, &SHAPE133, &SHAPE134,
    &SHAPE135, &SHAPE136, &SHAPE137, &SHAPE138, &SHAPE139, &SHAPE140, &SHAPE132, &SHAPE133,
    &SHAPE134, &SHAPE135, &SHAPE136, &SHAPE137, &SHAPE138, &SHAPE139, &SHAPE140, &SHAPE132,
    &SHAPE133, &SHAPE134, &SHAPE135, &SHAPE136, &SHAPE137, &SHAPE138, &SHAPE139, &SHAPE140,
    &SHAPE132, &SHAPE133, &SHAPE134, &SHAPE135, &SHAPE136, &SHAPE137, &SHAPE138, &SHAPE139,
    &SHAPE140, &SHAPE132, &SHAPE133, &SHAPE134, &SHAPE135, &SHAPE136, &SHAPE137, &SHAPE138,
    &SHAPE139, &SHAPE140, &SHAPE132, &SHAPE133, &SHAPE134, &SHAPE135, &SHAPE136, &SHAPE137,
    &SHAPE138, &SHAPE139, &SHAPE140, &SHAPE132, &SHAPE133, &SHAPE134, &SHAPE135, &SHAPE136,
    &SHAPE137, &SHAPE138, &SHAPE139, &SHAPE140, &SHAPE132, &SHAPE133, &SHAPE134, &SHAPE135,
    &SHAPE136, &SHAPE137, &SHAPE138, &SHAPE139, &SHAPE140, &SHAPE141, &SHAPE142, &SHAPE143,
    &SHAPE144, &SHAPE145, &SHAPE146, &SHAPE147, &SHAPE148, &SHAPE149, &SHAPE141, &SHAPE142,
    &SHAPE143, &SHAPE144, &SHAPE145, &SHAPE146, &SHAPE147, &SHAPE148, &SHAPE149, &SHAPE141,
    &SHAPE142, &SHAPE143, &SHAPE144, &SHAPE145, &SHAPE146, &SHAPE147, &SHAPE148, &SHAPE149,
    &SHAPE141, &SHAPE142, &SHAPE143, &SHAPE144, &SHAPE145, &SHAPE146, &SHAPE147, &SHAPE148,
    &SHAPE149, &SHAPE141, &SHAPE142, &SHAPE143, &SHAPE144, &SHAPE145, &SHAPE146, &SHAPE147,
    &SHAPE148, &SHAPE149, &SHAPE141, &SHAPE142, &SHAPE143, &SHAPE144, &SHAPE145, &SHAPE146,
    &SHAPE147, &SHAPE148, &SHAPE149, &SHAPE141, &SHAPE142, &SHAPE143, &SHAPE144, &SHAPE145,
    &SHAPE146, &SHAPE147, &SHAPE148, &SHAPE149, &SHAPE141, &SHAPE142, &SHAPE143, &SHAPE144,
    &SHAPE145, &SHAPE146, &SHAPE147, &SHAPE148, &SHAPE149, &SHAPE141, &SHAPE142, &SHAPE143,
    &SHAPE144, &SHAPE145, &SHAPE146, &SHAPE147, &SHAPE148, &SHAPE149, &SHAPE141, &SHAPE142,
    &SHAPE143, &SHAPE144, &SHAPE145, &SHAPE146, &SHAPE147, &SHAPE148, &SHAPE149, &SHAPE141,
    &SHAPE142, &SHAPE143, &SHAPE144, &SHAPE145, &SHAPE146, &SHAPE147, &SHAPE148, &SHAPE149,
    &SHAPE141, &SHAPE142, &SHAPE143, &SHAPE144, &SHAPE145, &SHAPE146, &SHAPE147, &SHAPE148,
    &SHAPE149, &SHAPE141, &SHAPE142, &SHAPE143, &SHAPE144, &SHAPE145, &SHAPE146, &SHAPE147,
    &SHAPE148, &SHAPE149, &SHAPE141, &SHAPE142, &SHAPE143, &SHAPE144, &SHAPE145, &SHAPE146,
    &SHAPE147, &SHAPE148, &SHAPE149, &SHAPE141, &SHAPE142, &SHAPE143, &SHAPE144, &SHAPE145,
    &SHAPE146, &SHAPE147, &SHAPE148, &SHAPE149, &SHAPE141, &SHAPE142, &SHAPE143, &SHAPE144,
    &SHAPE145, &SHAPE146, &SHAPE147, &SHAPE148, &SHAPE149, &SHAPE150, &SHAPE151, &SHAPE152,
    &SHAPE153, &SHAPE154, &SHAPE155, &SHAPE156, &SHAPE157, &SHAPE158, &SHAPE150, &SHAPE151,
    &SHAPE152, &SHAPE153, &SHAPE154, &SHAPE155, &SHAPE156, &SHAPE157, &SHAPE158, &SHAPE150,
    &SHAPE151, &SHAPE152, &SHAPE153, &SHAPE154, &SHAPE155, &SHAPE156, &SHAPE157, &SHAPE158,
    &SHAPE150, &SHAPE151, &SHAPE152, &SHAPE153, &SHAPE154, &SHAPE155, &SHAPE156, &SHAPE157,
    &SHAPE158, &SHAPE150, &SHAPE151, &SHAPE152, &SHAPE153, &SHAPE154, &SHAPE155, &SHAPE156,
    &SHAPE157, &SHAPE158, &SHAPE150, &SHAPE151, &SHAPE152, &SHAPE153, &SHAPE154, &SHAPE155,
    &SHAPE156, &SHAPE157, &SHAPE158, &SHAPE150, &SHAPE151, &SHAPE152, &SHAPE153, &SHAPE154,
    &SHAPE155, &SHAPE156, &SHAPE157, &SHAPE158, &SHAPE150, &SHAPE151, &SHAPE152, &SHAPE153,
    &SHAPE154, &SHAPE155, &SHAPE156, &SHAPE157, &SHAPE158, &SHAPE150, &SHAPE151, &SHAPE152,
    &SHAPE153, &SHAPE154, &SHAPE155, &SHAPE156, &SHAPE157, &SHAPE158, &SHAPE150, &SHAPE151,
    &SHAPE152, &SHAPE153, &SHAPE154, &SHAPE155, &SHAPE156, &SHAPE157, &SHAPE158, &SHAPE150,
    &SHAPE151, &SHAPE152, &SHAPE153, &SHAPE154, &SHAPE155, &SHAPE156, &SHAPE157, &SHAPE158,
    &SHAPE150, &SHAPE151, &SHAPE152, &SHAPE153, &SHAPE154, &SHAPE155, &SHAPE156, &SHAPE157,
    &SHAPE158, &SHAPE150, &SHAPE151, &SHAPE152, &SHAPE153, &SHAPE154, &SHAPE155, &SHAPE156,
    &SHAPE157, &SHAPE158, &SHAPE150, &SHAPE151, &SHAPE152, &SHAPE153, &SHAPE154, &SHAPE155,
    &SHAPE156, &SHAPE157, &SHAPE158, &SHAPE150, &SHAPE151, &SHAPE152, &SHAPE153, &SHAPE154,
    &SHAPE155, &SHAPE156, &SHAPE157, &SHAPE158, &SHAPE150, &SHAPE151, &SHAPE152, &SHAPE153,
    &SHAPE154, &SHAPE155, &SHAPE156, &SHAPE157, &SHAPE158, &SHAPE159, &SHAPE160, &SHAPE161,
    &SHAPE162, &SHAPE163, &SHAPE164, &SHAPE165, &SHAPE166, &SHAPE167, &SHAPE159, &SHAPE160,
    &SHAPE161, &SHAPE162, &SHAPE163, &SHAPE164, &SHAPE165, &SHAPE166, &SHAPE167, &SHAPE159,
    &SHAPE160, &SHAPE161, &SHAPE162, &SHAPE163, &SHAPE164, &SHAPE165, &SHAPE166, &SHAPE167,
    &SHAPE159, &SHAPE160, &SHAPE161, &SHAPE162, &SHAPE163, &SHAPE164, &SHAPE165, &SHAPE166,
    &SHAPE167, &SHAPE159, &SHAPE160, &SHAPE161, &SHAPE162, &SHAPE163, &SHAPE164, &SHAPE165,
    &SHAPE166, &SHAPE167, &SHAPE159, &SHAPE160, &SHAPE161, &SHAPE162, &SHAPE163, &SHAPE164,
    &SHAPE165, &SHAPE166, &SHAPE167, &SHAPE159, &SHAPE160, &SHAPE161, &SHAPE162, &SHAPE163,
    &SHAPE164, &SHAPE165, &SHAPE166, &SHAPE167, &SHAPE159, &SHAPE160, &SHAPE161, &SHAPE162,
    &SHAPE163, &SHAPE164, &SHAPE165, &SHAPE166, &SHAPE167, &SHAPE159, &SHAPE160, &SHAPE161,
    &SHAPE162, &SHAPE163, &SHAPE164, &SHAPE165, &SHAPE166, &SHAPE167, &SHAPE159, &SHAPE160,
    &SHAPE161, &SHAPE162, &SHAPE163, &SHAPE164, &SHAPE165, &SHAPE166, &SHAPE167, &SHAPE159,
    &SHAPE160, &SHAPE161, &SHAPE162, &SHAPE163, &SHAPE164, &SHAPE165, &SHAPE166, &SHAPE167,
    &SHAPE159, &SHAPE160, &SHAPE161, &SHAPE162, &SHAPE163, &SHAPE164, &SHAPE165, &SHAPE166,
    &SHAPE167, &SHAPE159, &SHAPE160, &SHAPE161, &SHAPE162, &SHAPE163, &SHAPE164, &SHAPE165,
    &SHAPE166, &SHAPE167, &SHAPE159, &SHAPE160, &SHAPE161, &SHAPE162, &SHAPE163, &SHAPE164,
    &SHAPE165, &SHAPE166, &SHAPE167, &SHAPE159, &SHAPE160, &SHAPE161, &SHAPE162, &SHAPE163,
    &SHAPE164, &SHAPE165, &SHAPE166, &SHAPE167, &SHAPE159, &SHAPE160, &SHAPE161, &SHAPE162,
    &SHAPE163, &SHAPE164, &SHAPE165, &SHAPE166, &SHAPE167, &SHAPE168, &SHAPE169, &SHAPE170,
    &SHAPE171, &SHAPE172, &SHAPE173, &SHAPE174, &SHAPE175, &SHAPE176, &SHAPE168, &SHAPE169,
    &SHAPE170, &SHAPE171, &SHAPE172, &SHAPE173, &SHAPE174, &SHAPE175, &SHAPE176, &SHAPE168,
    &SHAPE169, &SHAPE170, &SHAPE171, &SHAPE172, &SHAPE173, &SHAPE174, &SHAPE175, &SHAPE176,
    &SHAPE168, &SHAPE169, &SHAPE170, &SHAPE171, &SHAPE172, &SHAPE173, &SHAPE174, &SHAPE175,
    &SHAPE176, &SHAPE168, &SHAPE169, &SHAPE170, &SHAPE171, &SHAPE172, &SHAPE173, &SHAPE174,
    &SHAPE175, &SHAPE176, &SHAPE168, &SHAPE169, &SHAPE170, &SHAPE171, &SHAPE172, &SHAPE173,
    &SHAPE174, &SHAPE175, &SHAPE176, &SHAPE168, &SHAPE169, &SHAPE170, &SHAPE171, &SHAPE172,
    &SHAPE173, &SHAPE174, &SHAPE175, &SHAPE176, &SHAPE168, &SHAPE169, &SHAPE170, &SHAPE171,
    &SHAPE172, &SHAPE173, &SHAPE174, &SHAPE175, &SHAPE176, &SHAPE168, &SHAPE169, &SHAPE170,
    &SHAPE171, &SHAPE172, &SHAPE173, &SHAPE174, &SHAPE175, &SHAPE176, &SHAPE168, &SHAPE169,
    &SHAPE170, &SHAPE171, &SHAPE172, &SHAPE173, &SHAPE174, &SHAPE175, &SHAPE176, &SHAPE168,
    &SHAPE169, &SHAPE170, &SHAPE171, &SHAPE172, &SHAPE173, &SHAPE174, &SHAPE175, &SHAPE176,
    &SHAPE168, &SHAPE169, &SHAPE170, &SHAPE171, &SHAPE172, &SHAPE173, &SHAPE174, &SHAPE175,
    &SHAPE176, &SHAPE168, &SHAPE169, &SHAPE170, &SHAPE171, &SHAPE172, &SHAPE173, &SHAPE174,
    &SHAPE175, &SHAPE176, &SHAPE168, &SHAPE169, &SHAPE170, &SHAPE171, &SHAPE172, &SHAPE173,
    &SHAPE174, &SHAPE175, &SHAPE176, &SHAPE168, &SHAPE169, &SHAPE170, &SHAPE171, &SHAPE172,
    &SHAPE173, &SHAPE174, &SHAPE175, &SHAPE176, &SHAPE168, &SHAPE169, &SHAPE170, &SHAPE171,
    &SHAPE172, &SHAPE173, &SHAPE174, &SHAPE175, &SHAPE176, &SHAPE177, &SHAPE178, &SHAPE179,
    &SHAPE180, &SHAPE181, &SHAPE182, &SHAPE183, &SHAPE184, &SHAPE185, &SHAPE177, &SHAPE178,
    &SHAPE179, &SHAPE180, &SHAPE181, &SHAPE182, &SHAPE183, &SHAPE184, &SHAPE185, &SHAPE177,
    &SHAPE178, &SHAPE179, &SHAPE180, &SHAPE181, &SHAPE182, &SHAPE183, &SHAPE184, &SHAPE185,
    &SHAPE177, &SHAPE178, &SHAPE179, &SHAPE180, &SHAPE181, &SHAPE182, &SHAPE183, &SHAPE184,
    &SHAPE185, &SHAPE177, &SHAPE178, &SHAPE179, &SHAPE180, &SHAPE181, &SHAPE182, &SHAPE183,
    &SHAPE184, &SHAPE185, &SHAPE177, &SHAPE178, &SHAPE179, &SHAPE180, &SHAPE181, &SHAPE182,
    &SHAPE183, &SHAPE184, &SHAPE185, &SHAPE177, &SHAPE178, &SHAPE179, &SHAPE180, &SHAPE181,
    &SHAPE182, &SHAPE183, &SHAPE184, &SHAPE185, &SHAPE177, &SHAPE178, &SHAPE179, &SHAPE180,
    &SHAPE181, &SHAPE182, &SHAPE183, &SHAPE184, &SHAPE185, &SHAPE177, &SHAPE178, &SHAPE179,
    &SHAPE180, &SHAPE181, &SHAPE182, &SHAPE183, &SHAPE184, &SHAPE185, &SHAPE177, &SHAPE178,
    &SHAPE179, &SHAPE180, &SHAPE181, &SHAPE182, &SHAPE183, &SHAPE184, &SHAPE185, &SHAPE177,
    &SHAPE178, &SHAPE179, &SHAPE180, &SHAPE181, &SHAPE182, &SHAPE183, &SHAPE184, &SHAPE185,
    &SHAPE177, &SHAPE178, &SHAPE179, &SHAPE180, &SHAPE181, &SHAPE182, &SHAPE183, &SHAPE184,
    &SHAPE185, &SHAPE177, &SHAPE178, &SHAPE179, &SHAPE180, &SHAPE181, &SHAPE182, &SHAPE183,
    &SHAPE184, &SHAPE185, &SHAPE177, &SHAPE178, &SHAPE179, &SHAPE180, &SHAPE181, &SHAPE182,
    &SHAPE183, &SHAPE184, &SHAPE185, &SHAPE177, &SHAPE178, &SHAPE179, &SHAPE180, &SHAPE181,
    &SHAPE182, &SHAPE183, &SHAPE184, &SHAPE185, &SHAPE177, &SHAPE178, &SHAPE179, &SHAPE180,
    &SHAPE181, &SHAPE182, &SHAPE183, &SHAPE184, &SHAPE185, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE12, &SHAPE186, &SHAPE187, &SHAPE13, &SHAPE188, &SHAPE18, &SHAPE189, &SHAPE1, &SHAPE190,
    &SHAPE190, &SHAPE190, &SHAPE190, &SHAPE190, &SHAPE190, &SHAPE190, &SHAPE190, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE192, &SHAPE192, &SHAPE193,
    &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193,
    &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195,
    &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195,
    &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194,
    &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194,
    &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192,
    &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192,
    &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE195,
    &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE192, &SHAPE192, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE12,
    &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE76, &SHAPE76,
    &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81,
    &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85,
    &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90,
    &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94,
    &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90,
    &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82,
    &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87,
    &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83,
    &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE196, &SHAPE196, &SHAPE197,
    &SHAPE197, &SHAPE198, &SHAPE198, &SHAPE199, &SHAPE199, &SHAPE196, &SHAPE196, &SHAPE197,
    &SHAPE197, &SHAPE198, &SHAPE198, &SHAPE199, &SHAPE199, &SHAPE196, &SHAPE196, &SHAPE197,
    &SHAPE197, &SHAPE198, &SHAPE198, &SHAPE199, &SHAPE199, &SHAPE196, &SHAPE196, &SHAPE197,
    &SHAPE197, &SHAPE198, &SHAPE198, &SHAPE199, &SHAPE199, &SHAPE196, &SHAPE196, &SHAPE197,
    &SHAPE197, &SHAPE198, &SHAPE198, &SHAPE199, &SHAPE199, &SHAPE196, &SHAPE196, &SHAPE197,
    &SHAPE197, &SHAPE198, &SHAPE198, &SHAPE199, &SHAPE199, &SHAPE196, &SHAPE196, &SHAPE197,
    &SHAPE197, &SHAPE198, &SHAPE198, &SHAPE199, &SHAPE199, &SHAPE196, &SHAPE196, &SHAPE197,
    &SHAPE197, &SHAPE198, &SHAPE198, &SHAPE199, &SHAPE199, &SHAPE196, &SHAPE196, &SHAPE197,
    &SHAPE197, &SHAPE198, &SHAPE198, &SHAPE199, &SHAPE199, &SHAPE196, &SHAPE196, &SHAPE197,
    &SHAPE197, &SHAPE198, &SHAPE198, &SHAPE199, &SHAPE199, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE200, &SHAPE200, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE202, &SHAPE202, &SHAPE201,
    &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE201, &SHAPE204, &SHAPE204, &SHAPE204,
    &SHAPE204, &SHAPE206, &SHAPE206, &SHAPE206, &SHAPE206, &SHAPE204, &SHAPE204, &SHAPE204,
    &SHAPE204, &SHAPE206, &SHAPE206, &SHAPE206, &SHAPE206, &SHAPE204, &SHAPE204, &SHAPE204,
    &SHAPE204, &SHAPE206, &SHAPE206, &SHAPE206, &SHAPE206, &SHAPE204, &SHAPE204, &SHAPE204,
    &SHAPE204, &SHAPE206, &SHAPE206, &SHAPE206, &SHAPE206, &SHAPE204, &SHAPE204, &SHAPE204,
    &SHAPE204, &SHAPE206, &SHAPE206, &SHAPE206, &SHAPE206, &SHAPE204, &SHAPE204, &SHAPE204,
    &SHAPE204, &SHAPE206, &SHAPE206, &SHAPE206, &SHAPE206, &SHAPE204, &SHAPE204, &SHAPE204,
    &SHAPE204, &SHAPE206, &SHAPE206, &SHAPE206, &SHAPE206, &SHAPE204, &SHAPE204, &SHAPE204,
    &SHAPE204, &SHAPE206, &SHAPE206, &SHAPE206, &SHAPE206, &SHAPE204, &SHAPE204, &SHAPE204,
    &SHAPE204, &SHAPE206, &SHAPE206, &SHAPE206, &SHAPE206, &SHAPE204, &SHAPE204, &SHAPE204,
    &SHAPE204, &SHAPE206, &SHAPE206, &SHAPE206, &SHAPE206, &SHAPE204, &SHAPE204, &SHAPE204,
    &SHAPE204, &SHAPE206, &SHAPE206, &SHAPE206, &SHAPE206, &SHAPE204, &SHAPE204, &SHAPE204,
    &SHAPE204, &SHAPE206, &SHAPE206, &SHAPE206, &SHAPE206, &SHAPE207, &SHAPE207, &SHAPE207,
    &SHAPE207, &SHAPE208, &SHAPE208, &SHAPE208, &SHAPE208, &SHAPE209, &SHAPE209, &SHAPE210,
    &SHAPE210, &SHAPE211, &SHAPE211, &SHAPE212, &SHAPE212, &SHAPE213, &SHAPE213, &SHAPE213,
    &SHAPE213, &SHAPE214, &SHAPE214, &SHAPE214, &SHAPE214, &SHAPE215, &SHAPE216, &SHAPE192,
    &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192,
    &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194,
    &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194,
    &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193,
    &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193,
    &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195,
    &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195,
    &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE215,
    &SHAPE216, &SHAPE215, &SHAPE216, &SHAPE215, &SHAPE216, &SHAPE215, &SHAPE216, &SHAPE215,
    &SHAPE216, &SHAPE215, &SHAPE216, &SHAPE215, &SHAPE216, &SHAPE215, &SHAPE216, &SHAPE215,
    &SHAPE216, &SHAPE215, &SHAPE216, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE39, &SHAPE39,
    &SHAPE40, &SHAPE40, &SHAPE41, &SHAPE41, &SHAPE42, &SHAPE42, &SHAPE43, &SHAPE43, &SHAPE217,
    &SHAPE218, &SHAPE217, &SHAPE218, &SHAPE219, &SHAPE220, &SHAPE219, &SHAPE220, &SHAPE221,
    &SHAPE222, &SHAPE223, &SHAPE224, &SHAPE225, &SHAPE226, &SHAPE227, &SHAPE228, &SHAPE229,
    &SHAPE230, &SHAPE229, &SHAPE230, &SHAPE231, &SHAPE232, &SHAPE231, &SHAPE232, &SHAPE12,
    &SHAPE186, &SHAPE187, &SHAPE13, &SHAPE188, &SHAPE18, &SHAPE189, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23,
    &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE234, &SHAPE1,
    &SHAPE24, &SHAPE24, &SHAPE24, &SHAPE24, &SHAPE24, &SHAPE24, &SHAPE24, &SHAPE24, &SHAPE24,
    &SHAPE24, &SHAPE24, &SHAPE24, &SHAPE24, &SHAPE24, &SHAPE24, &SHAPE24, &SHAPE1, &SHAPE1,
    &SHAPE236, &SHAPE238, &SHAPE236, &SHAPE238, &SHAPE240, &SHAPE242, &SHAPE240, &SHAPE242,
    &SHAPE244, &SHAPE246, &SHAPE244, &SHAPE246, &SHAPE248, &SHAPE250, &SHAPE248, &SHAPE250,
    &SHAPE252, &SHAPE254, &SHAPE252, &SHAPE254, &SHAPE256, &SHAPE258, &SHAPE256, &SHAPE258,
    &SHAPE260, &SHAPE262, &SHAPE260, &SHAPE262, &SHAPE264, &SHAPE266, &SHAPE264, &SHAPE266,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE39,
    &SHAPE40, &SHAPE41, &SHAPE42, &SHAPE43, &SHAPE1, &SHAPE248, &SHAPE254, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE267, &SHAPE268, &SHAPE269,
    &SHAPE270, &SHAPE271, &SHAPE272, &SHAPE273, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12,
    &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12,
    &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12,
    &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12,
    &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12,
    &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12,
    &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12,
    &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274, &SHAPE274, &SHAPE274,
    &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275, &SHAPE275, &SHAPE275,
    &SHAPE275, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277,
    &SHAPE278, &SHAPE279, &SHAPE278, &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281,
    &SHAPE282, &SHAPE283, &SHAPE282, &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285,
    &SHAPE286, &SHAPE287, &SHAPE286, &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289,
    &SHAPE290, &SHAPE291, &SHAPE290, &SHAPE291, &SHAPE292, &SHAPE292, &SHAPE293, &SHAPE293,
    &SHAPE294, &SHAPE294, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279,
    &SHAPE278, &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283,
    &SHAPE282, &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287,
    &SHAPE286, &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291,
    &SHAPE290, &SHAPE291, &SHAPE1, &SHAPE1, &SHAPE295, &SHAPE296, &SHAPE297, &SHAPE298, &SHAPE295,
    &SHAPE296, &SHAPE297, &SHAPE298, &SHAPE299, &SHAPE300, &SHAPE301, &SHAPE302, &SHAPE303,
    &SHAPE304, &SHAPE305, &SHAPE291, &SHAPE299, &SHAPE300, &SHAPE301, &SHAPE302, &SHAPE303,
    &SHAPE304, &SHAPE305, &SHAPE291, &SHAPE44, &SHAPE45, &SHAPE46, &SHAPE47, &SHAPE48, &SHAPE49,
    &SHAPE50, &SHAPE51, &SHAPE52, &SHAPE53, &SHAPE54, &SHAPE55, &SHAPE56, &SHAPE57, &SHAPE58,
    &SHAPE59, &SHAPE60, &SHAPE61, &SHAPE62, &SHAPE63, &SHAPE64, &SHAPE65, &SHAPE66, &SHAPE67,
    &SHAPE68, &SHAPE69, &SHAPE70, &SHAPE71, &SHAPE72, &SHAPE73, &SHAPE74, &SHAPE1, &SHAPE306,
    &SHAPE307, &SHAPE306, &SHAPE307, &SHAPE308, &SHAPE309, &SHAPE308, &SHAPE309, &SHAPE310,
    &SHAPE311, &SHAPE310, &SHAPE311, &SHAPE312, &SHAPE313, &SHAPE312, &SHAPE313, &SHAPE314,
    &SHAPE315, &SHAPE314, &SHAPE315, &SHAPE316, &SHAPE317, &SHAPE316, &SHAPE317, &SHAPE318,
    &SHAPE319, &SHAPE318, &SHAPE319, &SHAPE320, &SHAPE321, &SHAPE320, &SHAPE321, &SHAPE322,
    &SHAPE323, &SHAPE322, &SHAPE323, &SHAPE324, &SHAPE325, &SHAPE324, &SHAPE325, &SHAPE326,
    &SHAPE327, &SHAPE326, &SHAPE327, &SHAPE328, &SHAPE329, &SHAPE328, &SHAPE329, &SHAPE330,
    &SHAPE331, &SHAPE330, &SHAPE331, &SHAPE332, &SHAPE333, &SHAPE332, &SHAPE333, &SHAPE334,
    &SHAPE335, &SHAPE334, &SHAPE335, &SHAPE336, &SHAPE75, &SHAPE336, &SHAPE75, &SHAPE44, &SHAPE45,
    &SHAPE44, &SHAPE45, &SHAPE46, &SHAPE47, &SHAPE46, &SHAPE47, &SHAPE48, &SHAPE49, &SHAPE48,
    &SHAPE49, &SHAPE50, &SHAPE51, &SHAPE50, &SHAPE51, &SHAPE52, &SHAPE53, &SHAPE52, &SHAPE53,
    &SHAPE54, &SHAPE55, &SHAPE54, &SHAPE55, &SHAPE56, &SHAPE57, &SHAPE56, &SHAPE57, &SHAPE58,
    &SHAPE59, &SHAPE58, &SHAPE59, &SHAPE60, &SHAPE61, &SHAPE60, &SHAPE61, &SHAPE62, &SHAPE63,
    &SHAPE62, &SHAPE63, &SHAPE64, &SHAPE65, &SHAPE64, &SHAPE65, &SHAPE66, &SHAPE67, &SHAPE66,
    &SHAPE67, &SHAPE68, &SHAPE69, &SHAPE68, &SHAPE69, &SHAPE70, &SHAPE71, &SHAPE70, &SHAPE71,
    &SHAPE72, &SHAPE73, &SHAPE72, &SHAPE73, &SHAPE74, &SHAPE1, &SHAPE74, &SHAPE1, &SHAPE306,
    &SHAPE307, &SHAPE306, &SHAPE307, &SHAPE308, &SHAPE309, &SHAPE308, &SHAPE309, &SHAPE310,
    &SHAPE311, &SHAPE310, &SHAPE311, &SHAPE312, &SHAPE313, &SHAPE312, &SHAPE313, &SHAPE314,
    &SHAPE315, &SHAPE314, &SHAPE315, &SHAPE316, &SHAPE317, &SHAPE316, &SHAPE317, &SHAPE318,
    &SHAPE319, &SHAPE318, &SHAPE319, &SHAPE320, &SHAPE321, &SHAPE320, &SHAPE321, &SHAPE322,
    &SHAPE323, &SHAPE322, &SHAPE323, &SHAPE324, &SHAPE325, &SHAPE324, &SHAPE325, &SHAPE326,
    &SHAPE327, &SHAPE326, &SHAPE327, &SHAPE328, &SHAPE329, &SHAPE328, &SHAPE329, &SHAPE330,
    &SHAPE331, &SHAPE330, &SHAPE331, &SHAPE332, &SHAPE333, &SHAPE332, &SHAPE333, &SHAPE334,
    &SHAPE335, &SHAPE334, &SHAPE335, &SHAPE336, &SHAPE75, &SHAPE336, &SHAPE75, &SHAPE44, &SHAPE45,
    &SHAPE44, &SHAPE45, &SHAPE46, &SHAPE47, &SHAPE46, &SHAPE47, &SHAPE48, &SHAPE49, &SHAPE48,
    &SHAPE49, &SHAPE50, &SHAPE51, &SHAPE50, &SHAPE51, &SHAPE52, &SHAPE53, &SHAPE52, &SHAPE53,
    &SHAPE54, &SHAPE55, &SHAPE54, &SHAPE55, &SHAPE56, &SHAPE57, &SHAPE56, &SHAPE57, &SHAPE58,
    &SHAPE59, &SHAPE58, &SHAPE59, &SHAPE60, &SHAPE61, &SHAPE60, &SHAPE61, &SHAPE62, &SHAPE63,
    &SHAPE62, &SHAPE63, &SHAPE64, &SHAPE65, &SHAPE64, &SHAPE65, &SHAPE66, &SHAPE67, &SHAPE66,
    &SHAPE67, &SHAPE68, &SHAPE69, &SHAPE68, &SHAPE69, &SHAPE70, &SHAPE71, &SHAPE70, &SHAPE71,
    &SHAPE72, &SHAPE73, &SHAPE72, &SHAPE73, &SHAPE74, &SHAPE1, &SHAPE74, &SHAPE1, &SHAPE337,
    &SHAPE337, &SHAPE337, &SHAPE337, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE337,
    &SHAPE337, &SHAPE337, &SHAPE337, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE338,
    &SHAPE338, &SHAPE338, &SHAPE338, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE338,
    &SHAPE338, &SHAPE338, &SHAPE338, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE76,
    &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80,
    &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85,
    &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89,
    &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94,
    &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77,
    &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82,
    &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78,
    &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83,
    &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76,
    &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81,
    &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85,
    &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90,
    &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94,
    &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90,
    &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82,
    &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87,
    &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83,
    &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77,
    &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81,
    &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86,
    &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90,
    &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95,
    &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90,
    &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95,
    &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87,
    &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92,
    &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE1, &SHAPE1, &SHAPE339, &SHAPE1,
    &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79,
    &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84,
    &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88,
    &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93,
    &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88,
    &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93,
    &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98,
    &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99,
    &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94,
    &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE191, &SHAPE343, &SHAPE344,
    &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE0, &SHAPE346, &SHAPE347,
    &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE354, &SHAPE356,
    &SHAPE357, &SHAPE354, &SHAPE356, &SHAPE357, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE358,
    &SHAPE359, &SHAPE360, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE361, &SHAPE362, &SHAPE363,
    &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE370, &SHAPE372,
    &SHAPE373, &SHAPE370, &SHAPE372, &SHAPE373, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE375,
    &SHAPE377, &SHAPE378, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE380, &SHAPE382, &SHAPE383,
    &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE387, &SHAPE388,
    &SHAPE389, &SHAPE387, &SHAPE388, &SHAPE389, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE390,
    &SHAPE391, &SHAPE392, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE393, &SHAPE394, &SHAPE395,
    &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE399, &SHAPE400,
    &SHAPE401, &SHAPE399, &SHAPE400, &SHAPE401, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE402,
    &SHAPE403, &SHAPE404, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE405, &SHAPE406, &SHAPE407,
    &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE414, &SHAPE416,
    &SHAPE417, &SHAPE414, &SHAPE416, &SHAPE417, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE419,
    &SHAPE421, &SHAPE422, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE424, &SHAPE426, &SHAPE427,
    &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE431, &SHAPE432,
    &SHAPE433, &SHAPE431, &SHAPE432, &SHAPE433, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE435,
    &SHAPE437, &SHAPE438, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE440, &SHAPE442, &SHAPE443,
    &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE450, &SHAPE452,
    &SHAPE453, &SHAPE450, &SHAPE452, &SHAPE453, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE454,
    &SHAPE455, &SHAPE456, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE457, &SHAPE458, &SHAPE459,
    &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE463, &SHAPE464,
    &SHAPE465, &SHAPE463, &SHAPE464, &SHAPE465, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE466,
    &SHAPE467, &SHAPE468, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE469, &SHAPE470, &SHAPE471,
    &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE475, &SHAPE476,
    &SHAPE477, &SHAPE475, &SHAPE476, &SHAPE477, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE478,
    &SHAPE479, &SHAPE480, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE481, &SHAPE482, &SHAPE483,
    &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE487, &SHAPE488,
    &SHAPE489, &SHAPE487, &SHAPE488, &SHAPE489, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE490,
    &SHAPE491, &SHAPE492, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE493, &SHAPE494, &SHAPE495,
    &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE499, &SHAPE500,
    &SHAPE501, &SHAPE499, &SHAPE500, &SHAPE501, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE502,
    &SHAPE503, &SHAPE504, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE505, &SHAPE506, &SHAPE507,
    &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE511, &SHAPE512,
    &SHAPE513, &SHAPE511, &SHAPE512, &SHAPE513, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE514,
    &SHAPE515, &SHAPE516, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE517, &SHAPE518, &SHAPE519,
    &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE523, &SHAPE524,
    &SHAPE525, &SHAPE523, &SHAPE524, &SHAPE525, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE526,
    &SHAPE527, &SHAPE528, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE529, &SHAPE530, &SHAPE531,
    &SHAPE1, &SHAPE1, &SHAPE236, &SHAPE238, &SHAPE236, &SHAPE238, &SHAPE240, &SHAPE242, &SHAPE240,
    &SHAPE242, &SHAPE244, &SHAPE246, &SHAPE244, &SHAPE246, &SHAPE248, &SHAPE250, &SHAPE248,
    &SHAPE250, &SHAPE252, &SHAPE254, &SHAPE252, &SHAPE254, &SHAPE256, &SHAPE258, &SHAPE256,
    &SHAPE258, &SHAPE260, &SHAPE262, &SHAPE260, &SHAPE262, &SHAPE264, &SHAPE266, &SHAPE264,
    &SHAPE266, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79,
    &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84,
    &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88,
    &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93,
    &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88,
    &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93,
    &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98,
    &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99,
    &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94,
    &SHAPE532, &SHAPE13, &SHAPE533, &SHAPE189, &SHAPE18, &SHAPE534, &SHAPE534, &SHAPE534,
    &SHAPE534, &SHAPE534, &SHAPE534, &SHAPE534, &SHAPE534, &SHAPE535, &SHAPE535, &SHAPE535,
    &SHAPE535, &SHAPE535, &SHAPE535, &SHAPE535, &SHAPE535, &SHAPE536, &SHAPE537, &SHAPE537,
    &SHAPE537, &SHAPE537, &SHAPE21, &SHAPE21, &SHAPE21, &SHAPE21, &SHAPE1, &SHAPE23, &SHAPE1,
    &SHAPE1, &SHAPE538, &SHAPE539, &SHAPE540, &SHAPE541, &SHAPE542, &SHAPE543, &SHAPE544,
    &SHAPE545, &SHAPE546, &SHAPE547, &SHAPE548, &SHAPE549, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77,
    &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82,
    &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86,
    &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91,
    &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95,
    &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79,
    &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95,
    &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80,
    &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92,
    &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE1, &SHAPE1, &SHAPE100, &SHAPE100, &SHAPE100,
    &SHAPE100, &SHAPE100, &SHAPE100, &SHAPE100, &SHAPE100, &SHAPE550, &SHAPE550, &SHAPE551,
    &SHAPE551, &SHAPE552, &SHAPE552, &SHAPE553, &SHAPE553, &SHAPE550, &SHAPE550, &SHAPE551,
    &SHAPE551, &SHAPE552, &SHAPE552, &SHAPE553, &SHAPE553, &SHAPE554, &SHAPE554, &SHAPE554,
    &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554,
    &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554,
    &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554,
    &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554,
    &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554,
    &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554,
    &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554,
    &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE554, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE76, &SHAPE76,
    &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81,
    &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85,
    &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90,
    &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94,
    &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90,
    &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82,
    &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87,
    &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83,
    &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77,
    &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81,
    &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86,
    &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90,
    &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95,
    &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90,
    &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95,
    &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87,
    &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92,
    &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77,
    &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82,
    &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86,
    &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91,
    &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95,
    &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79,
    &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95,
    &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80,
    &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92,
    &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE191, &SHAPE343, &SHAPE344,
    &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE0, &SHAPE346, &SHAPE347,
    &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE354, &SHAPE356,
    &SHAPE357, &SHAPE354, &SHAPE356, &SHAPE357, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE358,
    &SHAPE359, &SHAPE360, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE361, &SHAPE362, &SHAPE363,
    &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE370, &SHAPE372,
    &SHAPE373, &SHAPE370, &SHAPE372, &SHAPE373, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE375,
    &SHAPE377, &SHAPE378, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE380, &SHAPE382, &SHAPE383,
    &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE387, &SHAPE388,
    &SHAPE389, &SHAPE387, &SHAPE388, &SHAPE389, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE390,
    &SHAPE391, &SHAPE392, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE393, &SHAPE394, &SHAPE395,
    &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE399, &SHAPE400,
    &SHAPE401, &SHAPE399, &SHAPE400, &SHAPE401, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE402,
    &SHAPE403, &SHAPE404, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE405, &SHAPE406, &SHAPE407,
    &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE414, &SHAPE416,
    &SHAPE417, &SHAPE414, &SHAPE416, &SHAPE417, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE419,
    &SHAPE421, &SHAPE422, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE424, &SHAPE426, &SHAPE427,
    &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE431, &SHAPE432,
    &SHAPE433, &SHAPE431, &SHAPE432, &SHAPE433, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE435,
    &SHAPE437, &SHAPE438, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE440, &SHAPE442, &SHAPE443,
    &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE450, &SHAPE452,
    &SHAPE453, &SHAPE450, &SHAPE452, &SHAPE453, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE454,
    &SHAPE455, &SHAPE456, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE457, &SHAPE458, &SHAPE459,
    &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE463, &SHAPE464,
    &SHAPE465, &SHAPE463, &SHAPE464, &SHAPE465, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE466,
    &SHAPE467, &SHAPE468, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE469, &SHAPE470, &SHAPE471,
    &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE475, &SHAPE476,
    &SHAPE477, &SHAPE475, &SHAPE476, &SHAPE477, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE478,
    &SHAPE479, &SHAPE480, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE481, &SHAPE482, &SHAPE483,
    &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE487, &SHAPE488,
    &SHAPE489, &SHAPE487, &SHAPE488, &SHAPE489, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE490,
    &SHAPE491, &SHAPE492, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE493, &SHAPE494, &SHAPE495,
    &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE499, &SHAPE500,
    &SHAPE501, &SHAPE499, &SHAPE500, &SHAPE501, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE502,
    &SHAPE503, &SHAPE504, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE505, &SHAPE506, &SHAPE507,
    &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE511, &SHAPE512,
    &SHAPE513, &SHAPE511, &SHAPE512, &SHAPE513, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE514,
    &SHAPE515, &SHAPE516, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE517, &SHAPE518, &SHAPE519,
    &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE523, &SHAPE524,
    &SHAPE525, &SHAPE523, &SHAPE524, &SHAPE525, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE526,
    &SHAPE527, &SHAPE528, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE529, &SHAPE530, &SHAPE531,
    &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE0, &SHAPE346,
    &SHAPE347, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE349,
    &SHAPE351, &SHAPE352, &SHAPE354, &SHAPE356, &SHAPE357, &SHAPE354, &SHAPE356, &SHAPE357,
    &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE361, &SHAPE362,
    &SHAPE363, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE365,
    &SHAPE367, &SHAPE368, &SHAPE370, &SHAPE372, &SHAPE373, &SHAPE370, &SHAPE372, &SHAPE373,
    &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE380, &SHAPE382,
    &SHAPE383, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE384,
    &SHAPE385, &SHAPE386, &SHAPE387, &SHAPE388, &SHAPE389, &SHAPE387, &SHAPE388, &SHAPE389,
    &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE393, &SHAPE394,
    &SHAPE395, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE396,
    &SHAPE397, &SHAPE398, &SHAPE399, &SHAPE400, &SHAPE401, &SHAPE399, &SHAPE400, &SHAPE401,
    &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE405, &SHAPE406,
    &SHAPE407, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE409,
    &SHAPE411, &SHAPE412, &SHAPE414, &SHAPE416, &SHAPE417, &SHAPE414, &SHAPE416, &SHAPE417,
    &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE424, &SHAPE426,
    &SHAPE427, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE428,
    &SHAPE429, &SHAPE430, &SHAPE431, &SHAPE432, &SHAPE433, &SHAPE431, &SHAPE432, &SHAPE433,
    &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE440, &SHAPE442,
    &SHAPE443, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE445,
    &SHAPE447, &SHAPE448, &SHAPE450, &SHAPE452, &SHAPE453, &SHAPE450, &SHAPE452, &SHAPE453,
    &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE457, &SHAPE458,
    &SHAPE459, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE460,
    &SHAPE461, &SHAPE462, &SHAPE463, &SHAPE464, &SHAPE465, &SHAPE463, &SHAPE464, &SHAPE465,
    &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE469, &SHAPE470,
    &SHAPE471, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE472,
    &SHAPE473, &SHAPE474, &SHAPE475, &SHAPE476, &SHAPE477, &SHAPE475, &SHAPE476, &SHAPE477,
    &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE481, &SHAPE482,
    &SHAPE483, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE484,
    &SHAPE485, &SHAPE486, &SHAPE487, &SHAPE488, &SHAPE489, &SHAPE487, &SHAPE488, &SHAPE489,
    &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE493, &SHAPE494,
    &SHAPE495, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE496,
    &SHAPE497, &SHAPE498, &SHAPE499, &SHAPE500, &SHAPE501, &SHAPE499, &SHAPE500, &SHAPE501,
    &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE505, &SHAPE506,
    &SHAPE507, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE508,
    &SHAPE509, &SHAPE510, &SHAPE511, &SHAPE512, &SHAPE513, &SHAPE511, &SHAPE512, &SHAPE513,
    &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE517, &SHAPE518,
    &SHAPE519, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE520,
    &SHAPE521, &SHAPE522, &SHAPE523, &SHAPE524, &SHAPE525, &SHAPE523, &SHAPE524, &SHAPE525,
    &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE529, &SHAPE530,
    &SHAPE531, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38,
    &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38,
    &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38,
    &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE12, &SHAPE275, &SHAPE186,
    &SHAPE532, &SHAPE187, &SHAPE555, &SHAPE13, &SHAPE556, &SHAPE12, &SHAPE275, &SHAPE186,
    &SHAPE532, &SHAPE187, &SHAPE555, &SHAPE13, &SHAPE556, &SHAPE217, &SHAPE218, &SHAPE217,
    &SHAPE218, &SHAPE219, &SHAPE220, &SHAPE219, &SHAPE220, &SHAPE221, &SHAPE222, &SHAPE223,
    &SHAPE224, &SHAPE225, &SHAPE226, &SHAPE227, &SHAPE228, &SHAPE229, &SHAPE230, &SHAPE229,
    &SHAPE230, &SHAPE231, &SHAPE232, &SHAPE231, &SHAPE232, &SHAPE217, &SHAPE218, &SHAPE217,
    &SHAPE218, &SHAPE219, &SHAPE220, &SHAPE219, &SHAPE220, &SHAPE221, &SHAPE222, &SHAPE223,
    &SHAPE224, &SHAPE225, &SHAPE226, &SHAPE227, &SHAPE228, &SHAPE229, &SHAPE230, &SHAPE229,
    &SHAPE230, &SHAPE231, &SHAPE232, &SHAPE231, &SHAPE232, &SHAPE217, &SHAPE218, &SHAPE217,
    &SHAPE218, &SHAPE219, &SHAPE220, &SHAPE219, &SHAPE220, &SHAPE221, &SHAPE222, &SHAPE223,
    &SHAPE224, &SHAPE225, &SHAPE226, &SHAPE227, &SHAPE228, &SHAPE229, &SHAPE230, &SHAPE229,
    &SHAPE230, &SHAPE231, &SHAPE232, &SHAPE231, &SHAPE232, &SHAPE217, &SHAPE218, &SHAPE217,
    &SHAPE218, &SHAPE219, &SHAPE220, &SHAPE219, &SHAPE220, &SHAPE221, &SHAPE222, &SHAPE223,
    &SHAPE224, &SHAPE225, &SHAPE226, &SHAPE227, &SHAPE228, &SHAPE229, &SHAPE230, &SHAPE229,
    &SHAPE230, &SHAPE231, &SHAPE232, &SHAPE231, &SHAPE232, &SHAPE217, &SHAPE218, &SHAPE217,
    &SHAPE218, &SHAPE219, &SHAPE220, &SHAPE219, &SHAPE220, &SHAPE221, &SHAPE222, &SHAPE223,
    &SHAPE224, &SHAPE225, &SHAPE226, &SHAPE227, &SHAPE228, &SHAPE229, &SHAPE230, &SHAPE229,
    &SHAPE230, &SHAPE231, &SHAPE232, &SHAPE231, &SHAPE232, &SHAPE217, &SHAPE218, &SHAPE217,
    &SHAPE218, &SHAPE219, &SHAPE220, &SHAPE219, &SHAPE220, &SHAPE221, &SHAPE222, &SHAPE223,
    &SHAPE224, &SHAPE225, &SHAPE226, &SHAPE227, &SHAPE228, &SHAPE229, &SHAPE230, &SHAPE229,
    &SHAPE230, &SHAPE231, &SHAPE232, &SHAPE231, &SHAPE232, &SHAPE217, &SHAPE218, &SHAPE217,
    &SHAPE218, &SHAPE219, &SHAPE220, &SHAPE219, &SHAPE220, &SHAPE221, &SHAPE222, &SHAPE223,
    &SHAPE224, &SHAPE225, &SHAPE226, &SHAPE227, &SHAPE228, &SHAPE229, &SHAPE230, &SHAPE229,
    &SHAPE230, &SHAPE231, &SHAPE232, &SHAPE231, &SHAPE232, &SHAPE217, &SHAPE218, &SHAPE217,
    &SHAPE218, &SHAPE219, &SHAPE220, &SHAPE219, &SHAPE220, &SHAPE221, &SHAPE222, &SHAPE223,
    &SHAPE224, &SHAPE225, &SHAPE226, &SHAPE227, &SHAPE228, &SHAPE229, &SHAPE230, &SHAPE229,
    &SHAPE230, &SHAPE231, &SHAPE232, &SHAPE231, &SHAPE232, &SHAPE217, &SHAPE218, &SHAPE217,
    &SHAPE218, &SHAPE219, &SHAPE220, &SHAPE219, &SHAPE220, &SHAPE221, &SHAPE222, &SHAPE223,
    &SHAPE224, &SHAPE225, &SHAPE226, &SHAPE227, &SHAPE228, &SHAPE229, &SHAPE230, &SHAPE229,
    &SHAPE230, &SHAPE231, &SHAPE232, &SHAPE231, &SHAPE232, &SHAPE217, &SHAPE218, &SHAPE217,
    &SHAPE218, &SHAPE219, &SHAPE220, &SHAPE219, &SHAPE220, &SHAPE221, &SHAPE222, &SHAPE223,
    &SHAPE224, &SHAPE225, &SHAPE226, &SHAPE227, &SHAPE228, &SHAPE229, &SHAPE230, &SHAPE229,
    &SHAPE230, &SHAPE231, &SHAPE232, &SHAPE231, &SHAPE232, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE558, &SHAPE558, &SHAPE559,
    &SHAPE559, &SHAPE560, &SHAPE560, &SHAPE561, &SHAPE561, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE558, &SHAPE558, &SHAPE559,
    &SHAPE559, &SHAPE560, &SHAPE560, &SHAPE561, &SHAPE561, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE558, &SHAPE558, &SHAPE559,
    &SHAPE559, &SHAPE560, &SHAPE560, &SHAPE561, &SHAPE561, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE558, &SHAPE558, &SHAPE559,
    &SHAPE559, &SHAPE560, &SHAPE560, &SHAPE561, &SHAPE561, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE558, &SHAPE558, &SHAPE559,
    &SHAPE559, &SHAPE560, &SHAPE560, &SHAPE561, &SHAPE561, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557,
    &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE557, &SHAPE558, &SHAPE558, &SHAPE559,
    &SHAPE559, &SHAPE560, &SHAPE560, &SHAPE561, &SHAPE561, &SHAPE562, &SHAPE562, &SHAPE562,
    &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562,
    &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562,
    &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562,
    &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE562, &SHAPE563, &SHAPE563, &SHAPE564,
    &SHAPE564, &SHAPE565, &SHAPE565, &SHAPE566, &SHAPE566, &SHAPE567, &SHAPE567, &SHAPE568,
    &SHAPE568, &SHAPE567, &SHAPE567, &SHAPE568, &SHAPE568, &SHAPE567, &SHAPE567, &SHAPE568,
    &SHAPE568, &SHAPE100, &SHAPE100, &SHAPE101, &SHAPE101, &SHAPE102, &SHAPE102, &SHAPE100,
    &SHAPE100, &SHAPE102, &SHAPE102, &SHAPE101, &SHAPE101, &SHAPE100, &SHAPE100, &SHAPE103,
    &SHAPE103, &SHAPE104, &SHAPE104, &SHAPE100, &SHAPE100, &SHAPE104, &SHAPE104, &SHAPE103,
    &SHAPE103, &SHAPE216, &SHAPE215, &SHAPE215, &SHAPE215, &SHAPE215, &SHAPE215, &SHAPE215,
    &SHAPE215, &SHAPE215, &SHAPE215, &SHAPE215, &SHAPE215, &SHAPE215, &SHAPE215, &SHAPE215,
    &SHAPE215, &SHAPE216, &SHAPE215, &SHAPE215, &SHAPE215, &SHAPE215, &SHAPE215, &SHAPE215,
    &SHAPE215, &SHAPE215, &SHAPE215, &SHAPE215, &SHAPE215, &SHAPE215, &SHAPE215, &SHAPE215,
    &SHAPE215, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12,
    &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE187,
    &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187,
    &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187,
    &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187,
    &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE187, &SHAPE1, &SHAPE1,
    &SHAPE569, &SHAPE570, &SHAPE571, &SHAPE572, &SHAPE573, &SHAPE569, &SHAPE570, &SHAPE571,
    &SHAPE572, &SHAPE573, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE76, &SHAPE76,
    &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81,
    &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85,
    &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90,
    &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94,
    &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90,
    &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82,
    &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87,
    &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83,
    &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE12, &SHAPE12, &SHAPE12,
    &SHAPE12, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE12, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279, &SHAPE278,
    &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283, &SHAPE282,
    &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287, &SHAPE286,
    &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291, &SHAPE290,
    &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279, &SHAPE278,
    &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283, &SHAPE282,
    &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287, &SHAPE286,
    &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291, &SHAPE290,
    &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279, &SHAPE278,
    &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283, &SHAPE282,
    &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287, &SHAPE286,
    &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291, &SHAPE290,
    &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279, &SHAPE278,
    &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283, &SHAPE282,
    &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287, &SHAPE286,
    &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291, &SHAPE290,
    &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279, &SHAPE278,
    &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283, &SHAPE282,
    &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287, &SHAPE286,
    &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291, &SHAPE290,
    &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279, &SHAPE278,
    &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283, &SHAPE282,
    &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287, &SHAPE286,
    &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291, &SHAPE290,
    &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279, &SHAPE278,
    &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283, &SHAPE282,
    &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287, &SHAPE286,
    &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291, &SHAPE290,
    &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279, &SHAPE278,
    &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283, &SHAPE282,
    &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287, &SHAPE286,
    &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291, &SHAPE290,
    &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279, &SHAPE278,
    &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283, &SHAPE282,
    &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287, &SHAPE286,
    &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291, &SHAPE290,
    &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279, &SHAPE278,
    &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283, &SHAPE282,
    &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287, &SHAPE286,
    &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291, &SHAPE290,
    &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279, &SHAPE278,
    &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283, &SHAPE282,
    &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287, &SHAPE286,
    &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291, &SHAPE290,
    &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279, &SHAPE278,
    &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283, &SHAPE282,
    &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287, &SHAPE286,
    &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291, &SHAPE290,
    &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279, &SHAPE278,
    &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283, &SHAPE282,
    &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287, &SHAPE286,
    &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291, &SHAPE290,
    &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279, &SHAPE278,
    &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283, &SHAPE282,
    &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287, &SHAPE286,
    &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291, &SHAPE290,
    &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279, &SHAPE278,
    &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283, &SHAPE282,
    &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287, &SHAPE286,
    &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291, &SHAPE290,
    &SHAPE291, &SHAPE276, &SHAPE277, &SHAPE276, &SHAPE277, &SHAPE278, &SHAPE279, &SHAPE278,
    &SHAPE279, &SHAPE280, &SHAPE281, &SHAPE280, &SHAPE281, &SHAPE282, &SHAPE283, &SHAPE282,
    &SHAPE283, &SHAPE284, &SHAPE285, &SHAPE284, &SHAPE285, &SHAPE286, &SHAPE287, &SHAPE286,
    &SHAPE287, &SHAPE288, &SHAPE289, &SHAPE288, &SHAPE289, &SHAPE290, &SHAPE291, &SHAPE290,
    &SHAPE291, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79,
    &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84,
    &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88,
    &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93,
    &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88,
    &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93,
    &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98,
    &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99,
    &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94,
    &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80,
    &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84,
    &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89,
    &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93,
    &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77,
    &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93,
    &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78,
    &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99,
    &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76,
    &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80,
    &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85,
    &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89,
    &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94,
    &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77,
    &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82,
    &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78,
    &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83,
    &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76,
    &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81,
    &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85,
    &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90,
    &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94,
    &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90,
    &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82,
    &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87,
    &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83,
    &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77,
    &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81,
    &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86,
    &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90,
    &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95,
    &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90,
    &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95,
    &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87,
    &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92,
    &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77,
    &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82,
    &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86,
    &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91,
    &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95,
    &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79,
    &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95,
    &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80,
    &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92,
    &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78,
    &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82,
    &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87,
    &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91,
    &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96,
    &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79,
    &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84,
    &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80,
    &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85,
    &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0,
    &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE193, &SHAPE193,
    &SHAPE193, &SHAPE193, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193,
    &SHAPE193, &SHAPE193, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195,
    &SHAPE195, &SHAPE195, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195,
    &SHAPE195, &SHAPE195, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194,
    &SHAPE194, &SHAPE194, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194,
    &SHAPE194, &SHAPE194, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192,
    &SHAPE192, &SHAPE192, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192,
    &SHAPE192, &SHAPE192, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80,
    &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84,
    &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89,
    &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93,
    &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77,
    &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93,
    &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78,
    &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99,
    &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76,
    &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80,
    &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85,
    &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89,
    &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94,
    &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77,
    &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82,
    &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78,
    &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83,
    &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76,
    &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81,
    &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85,
    &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90,
    &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94,
    &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90,
    &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82,
    &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87,
    &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83,
    &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE340, &SHAPE340, &SHAPE13,
    &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1,
    &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75,
    &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE75, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE574, &SHAPE575, &SHAPE576, &SHAPE577, &SHAPE574, &SHAPE575,
    &SHAPE576, &SHAPE577, &SHAPE574, &SHAPE575, &SHAPE576, &SHAPE577, &SHAPE574, &SHAPE575,
    &SHAPE576, &SHAPE577, &SHAPE574, &SHAPE575, &SHAPE576, &SHAPE577, &SHAPE574, &SHAPE575,
    &SHAPE576, &SHAPE577, &SHAPE574, &SHAPE575, &SHAPE576, &SHAPE577, &SHAPE574, &SHAPE575,
    &SHAPE576, &SHAPE577, &SHAPE574, &SHAPE575, &SHAPE576, &SHAPE577, &SHAPE574, &SHAPE575,
    &SHAPE576, &SHAPE577, &SHAPE574, &SHAPE575, &SHAPE576, &SHAPE577, &SHAPE574, &SHAPE575,
    &SHAPE576, &SHAPE577, &SHAPE574, &SHAPE575, &SHAPE576, &SHAPE577, &SHAPE574, &SHAPE575,
    &SHAPE576, &SHAPE577, &SHAPE574, &SHAPE575, &SHAPE576, &SHAPE577, &SHAPE574, &SHAPE575,
    &SHAPE576, &SHAPE577, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77,
    &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82,
    &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86,
    &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91,
    &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95,
    &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79,
    &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95,
    &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80,
    &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92,
    &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1,
    &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340,
    &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1,
    &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340,
    &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1,
    &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340,
    &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1,
    &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340,
    &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1,
    &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340,
    &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1,
    &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340,
    &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1,
    &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340,
    &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1,
    &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340,
    &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE337, &SHAPE337, &SHAPE337, &SHAPE337,
    &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE337, &SHAPE337, &SHAPE337, &SHAPE337,
    &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE338, &SHAPE338, &SHAPE338, &SHAPE338,
    &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE338, &SHAPE338, &SHAPE338, &SHAPE338,
    &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE337, &SHAPE337, &SHAPE337, &SHAPE337,
    &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE337, &SHAPE337, &SHAPE337, &SHAPE337,
    &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE338, &SHAPE338, &SHAPE338, &SHAPE338,
    &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE338, &SHAPE338, &SHAPE338, &SHAPE338,
    &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE337, &SHAPE337, &SHAPE337, &SHAPE337,
    &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE337, &SHAPE337, &SHAPE337, &SHAPE337,
    &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE338, &SHAPE338, &SHAPE338, &SHAPE338,
    &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE338, &SHAPE338, &SHAPE338, &SHAPE338,
    &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE337, &SHAPE337, &SHAPE337, &SHAPE337,
    &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE337, &SHAPE337, &SHAPE337, &SHAPE337,
    &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE338, &SHAPE338, &SHAPE338, &SHAPE338,
    &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE338, &SHAPE338, &SHAPE338, &SHAPE338,
    &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE337, &SHAPE337, &SHAPE337, &SHAPE337,
    &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE337, &SHAPE337, &SHAPE337, &SHAPE337,
    &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE338, &SHAPE338, &SHAPE338, &SHAPE338,
    &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE338, &SHAPE338, &SHAPE338, &SHAPE338,
    &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE337, &SHAPE337, &SHAPE337, &SHAPE337,
    &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE337, &SHAPE337, &SHAPE337, &SHAPE337,
    &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE338, &SHAPE338, &SHAPE338, &SHAPE338,
    &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE338, &SHAPE338, &SHAPE338, &SHAPE338,
    &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE337, &SHAPE337, &SHAPE337, &SHAPE337,
    &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE337, &SHAPE337, &SHAPE337, &SHAPE337,
    &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE338, &SHAPE338, &SHAPE338, &SHAPE338,
    &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE338, &SHAPE338, &SHAPE338, &SHAPE338,
    &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE337, &SHAPE337, &SHAPE337, &SHAPE337,
    &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE337, &SHAPE337, &SHAPE337, &SHAPE337,
    &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE338, &SHAPE338, &SHAPE338, &SHAPE338,
    &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE338, &SHAPE338, &SHAPE338, &SHAPE338,
    &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE337, &SHAPE337, &SHAPE337, &SHAPE337,
    &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE337, &SHAPE337, &SHAPE337, &SHAPE337,
    &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE338, &SHAPE338, &SHAPE338, &SHAPE338,
    &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE338, &SHAPE338, &SHAPE338, &SHAPE338,
    &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE236, &SHAPE238, &SHAPE236, &SHAPE238,
    &SHAPE240, &SHAPE242, &SHAPE240, &SHAPE242, &SHAPE244, &SHAPE246, &SHAPE244, &SHAPE246,
    &SHAPE248, &SHAPE250, &SHAPE248, &SHAPE250, &SHAPE252, &SHAPE254, &SHAPE252, &SHAPE254,
    &SHAPE256, &SHAPE258, &SHAPE256, &SHAPE258, &SHAPE260, &SHAPE262, &SHAPE260, &SHAPE262,
    &SHAPE264, &SHAPE266, &SHAPE264, &SHAPE266, &SHAPE236, &SHAPE238, &SHAPE236, &SHAPE238,
    &SHAPE240, &SHAPE242, &SHAPE240, &SHAPE242, &SHAPE244, &SHAPE246, &SHAPE244, &SHAPE246,
    &SHAPE248, &SHAPE250, &SHAPE248, &SHAPE250, &SHAPE252, &SHAPE254, &SHAPE252, &SHAPE254,
    &SHAPE256, &SHAPE258, &SHAPE256, &SHAPE258, &SHAPE260, &SHAPE262, &SHAPE260, &SHAPE262,
    &SHAPE264, &SHAPE266, &SHAPE264, &SHAPE266, &SHAPE236, &SHAPE238, &SHAPE236, &SHAPE238,
    &SHAPE240, &SHAPE242, &SHAPE240, &SHAPE242, &SHAPE244, &SHAPE246, &SHAPE244, &SHAPE246,
    &SHAPE248, &SHAPE250, &SHAPE248, &SHAPE250, &SHAPE252, &SHAPE254, &SHAPE252, &SHAPE254,
    &SHAPE256, &SHAPE258, &SHAPE256, &SHAPE258, &SHAPE260, &SHAPE262, &SHAPE260, &SHAPE262,
    &SHAPE264, &SHAPE266, &SHAPE264, &SHAPE266, &SHAPE236, &SHAPE238, &SHAPE236, &SHAPE238,
    &SHAPE240, &SHAPE242, &SHAPE240, &SHAPE242, &SHAPE244, &SHAPE246, &SHAPE244, &SHAPE246,
    &SHAPE248, &SHAPE250, &SHAPE248, &SHAPE250, &SHAPE252, &SHAPE254, &SHAPE252, &SHAPE254,
    &SHAPE256, &SHAPE258, &SHAPE256, &SHAPE258, &SHAPE260, &SHAPE262, &SHAPE260, &SHAPE262,
    &SHAPE264, &SHAPE266, &SHAPE264, &SHAPE266, &SHAPE236, &SHAPE238, &SHAPE236, &SHAPE238,
    &SHAPE240, &SHAPE242, &SHAPE240, &SHAPE242, &SHAPE244, &SHAPE246, &SHAPE244, &SHAPE246,
    &SHAPE248, &SHAPE250, &SHAPE248, &SHAPE250, &SHAPE252, &SHAPE254, &SHAPE252, &SHAPE254,
    &SHAPE256, &SHAPE258, &SHAPE256, &SHAPE258, &SHAPE260, &SHAPE262, &SHAPE260, &SHAPE262,
    &SHAPE264, &SHAPE266, &SHAPE264, &SHAPE266, &SHAPE236, &SHAPE238, &SHAPE236, &SHAPE238,
    &SHAPE240, &SHAPE242, &SHAPE240, &SHAPE242, &SHAPE244, &SHAPE246, &SHAPE244, &SHAPE246,
    &SHAPE248, &SHAPE250, &SHAPE248, &SHAPE250, &SHAPE252, &SHAPE254, &SHAPE252, &SHAPE254,
    &SHAPE256, &SHAPE258, &SHAPE256, &SHAPE258, &SHAPE260, &SHAPE262, &SHAPE260, &SHAPE262,
    &SHAPE264, &SHAPE266, &SHAPE264, &SHAPE266, &SHAPE236, &SHAPE238, &SHAPE236, &SHAPE238,
    &SHAPE240, &SHAPE242, &SHAPE240, &SHAPE242, &SHAPE244, &SHAPE246, &SHAPE244, &SHAPE246,
    &SHAPE248, &SHAPE250, &SHAPE248, &SHAPE250, &SHAPE252, &SHAPE254, &SHAPE252, &SHAPE254,
    &SHAPE256, &SHAPE258, &SHAPE256, &SHAPE258, &SHAPE260, &SHAPE262, &SHAPE260, &SHAPE262,
    &SHAPE264, &SHAPE266, &SHAPE264, &SHAPE266, &SHAPE236, &SHAPE238, &SHAPE236, &SHAPE238,
    &SHAPE240, &SHAPE242, &SHAPE240, &SHAPE242, &SHAPE244, &SHAPE246, &SHAPE244, &SHAPE246,
    &SHAPE248, &SHAPE250, &SHAPE248, &SHAPE250, &SHAPE252, &SHAPE254, &SHAPE252, &SHAPE254,
    &SHAPE256, &SHAPE258, &SHAPE256, &SHAPE258, &SHAPE260, &SHAPE262, &SHAPE260, &SHAPE262,
    &SHAPE264, &SHAPE266, &SHAPE264, &SHAPE266, &SHAPE236, &SHAPE238, &SHAPE236, &SHAPE238,
    &SHAPE240, &SHAPE242, &SHAPE240, &SHAPE242, &SHAPE244, &SHAPE246, &SHAPE244, &SHAPE246,
    &SHAPE248, &SHAPE250, &SHAPE248, &SHAPE250, &SHAPE252, &SHAPE254, &SHAPE252, &SHAPE254,
    &SHAPE256, &SHAPE258, &SHAPE256, &SHAPE258, &SHAPE260, &SHAPE262, &SHAPE260, &SHAPE262,
    &SHAPE264, &SHAPE266, &SHAPE264, &SHAPE266, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193,
    &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195,
    &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194,
    &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192,
    &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE578, &SHAPE579, &SHAPE578, &SHAPE579,
    &SHAPE266, &SHAPE266, &SHAPE580, &SHAPE581, &SHAPE582, &SHAPE583, &SHAPE584, &SHAPE585,
    &SHAPE586, &SHAPE587, &SHAPE588, &SHAPE589, &SHAPE590, &SHAPE591, &SHAPE592, &SHAPE593,
    &SHAPE594, &SHAPE595, &SHAPE596, &SHAPE597, &SHAPE598, &SHAPE599, &SHAPE600, &SHAPE601,
    &SHAPE602, &SHAPE603, &SHAPE604, &SHAPE605, &SHAPE606, &SHAPE607, &SHAPE608, &SHAPE201,
    &SHAPE609, &SHAPE610, &SHAPE611, &SHAPE612, &SHAPE613, &SHAPE614, &SHAPE615, &SHAPE616,
    &SHAPE617, &SHAPE618, &SHAPE619, &SHAPE620, &SHAPE621, &SHAPE622, &SHAPE623, &SHAPE624,
    &SHAPE625, &SHAPE626, &SHAPE627, &SHAPE628, &SHAPE629, &SHAPE630, &SHAPE631, &SHAPE632,
    &SHAPE633, &SHAPE634, &SHAPE635, &SHAPE636, &SHAPE637, &SHAPE638, &SHAPE639, &SHAPE640,
    &SHAPE641, &SHAPE642, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79,
    &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83,
    &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88,
    &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92,
    &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88,
    &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97,
    &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98,
    &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89,
    &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94,
    &SHAPE94, &SHAPE1, &SHAPE38, &SHAPE643, &SHAPE0, &SHAPE644, &SHAPE0, &SHAPE646, &SHAPE0,
    &SHAPE647, &SHAPE648, &SHAPE647, &SHAPE649, &SHAPE647, &SHAPE1, &SHAPE1, &SHAPE12, &SHAPE186,
    &SHAPE187, &SHAPE13, &SHAPE190, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE650, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE556,
    &SHAPE556, &SHAPE556, &SHAPE556, &SHAPE556, &SHAPE556, &SHAPE556, &SHAPE556, &SHAPE556,
    &SHAPE556, &SHAPE556, &SHAPE556, &SHAPE556, &SHAPE556, &SHAPE556, &SHAPE556, &SHAPE556,
    &SHAPE556, &SHAPE556, &SHAPE556, &SHAPE556, &SHAPE556, &SHAPE556, &SHAPE556, &SHAPE556,
    &SHAPE556, &SHAPE1, &SHAPE1, &SHAPE651, &SHAPE651, &SHAPE651, &SHAPE652, &SHAPE652, &SHAPE652,
    &SHAPE652, &SHAPE652, &SHAPE652, &SHAPE652, &SHAPE652, &SHAPE652, &SHAPE653, &SHAPE653,
    &SHAPE653, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE654, &SHAPE654, &SHAPE654, &SHAPE654, &SHAPE654, &SHAPE654, &SHAPE654,
    &SHAPE654, &SHAPE654, &SHAPE654, &SHAPE654, &SHAPE654, &SHAPE654, &SHAPE654, &SHAPE654,
    &SHAPE654, &SHAPE654, &SHAPE654, &SHAPE654, &SHAPE654, &SHAPE655, &SHAPE655, &SHAPE655,
    &SHAPE655, &SHAPE655, &SHAPE655, &SHAPE655, &SHAPE655, &SHAPE655, &SHAPE655, &SHAPE655,
    &SHAPE655, &SHAPE655, &SHAPE655, &SHAPE655, &SHAPE655, &SHAPE655, &SHAPE655, &SHAPE655,
    &SHAPE655, &SHAPE656, &SHAPE656, &SHAPE657, &SHAPE657, &SHAPE658, &SHAPE658, &SHAPE659,
    &SHAPE659, &SHAPE656, &SHAPE656, &SHAPE657, &SHAPE657, &SHAPE658, &SHAPE658, &SHAPE659,
    &SHAPE659, &SHAPE656, &SHAPE656, &SHAPE657, &SHAPE657, &SHAPE658, &SHAPE658, &SHAPE659,
    &SHAPE659, &SHAPE656, &SHAPE656, &SHAPE657, &SHAPE657, &SHAPE658, &SHAPE658, &SHAPE659,
    &SHAPE659, &SHAPE656, &SHAPE656, &SHAPE657, &SHAPE657, &SHAPE658, &SHAPE658, &SHAPE659,
    &SHAPE659, &SHAPE656, &SHAPE656, &SHAPE657, &SHAPE657, &SHAPE658, &SHAPE658, &SHAPE659,
    &SHAPE659, &SHAPE656, &SHAPE656, &SHAPE657, &SHAPE657, &SHAPE658, &SHAPE658, &SHAPE659,
    &SHAPE659, &SHAPE656, &SHAPE656, &SHAPE657, &SHAPE657, &SHAPE658, &SHAPE658, &SHAPE659,
    &SHAPE659, &SHAPE656, &SHAPE656, &SHAPE657, &SHAPE657, &SHAPE658, &SHAPE658, &SHAPE659,
    &SHAPE659, &SHAPE656, &SHAPE656, &SHAPE657, &SHAPE657, &SHAPE658, &SHAPE658, &SHAPE659,
    &SHAPE659, &SHAPE660, &SHAPE660, &SHAPE661, &SHAPE661, &SHAPE662, &SHAPE662, &SHAPE663,
    &SHAPE663, &SHAPE1, &SHAPE650, &SHAPE650, &SHAPE664, &SHAPE666, &SHAPE666, &SHAPE666,
    &SHAPE666, &SHAPE667, &SHAPE667, &SHAPE666, &SHAPE666, &SHAPE666, &SHAPE666, &SHAPE667,
    &SHAPE667, &SHAPE38, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE0, &SHAPE76, &SHAPE76, &SHAPE77,
    &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81,
    &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86,
    &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90,
    &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95,
    &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90,
    &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95,
    &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87,
    &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92,
    &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77,
    &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82,
    &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86,
    &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91,
    &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95,
    &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79,
    &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95,
    &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80,
    &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92,
    &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78,
    &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82,
    &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87,
    &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91,
    &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96,
    &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79,
    &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84,
    &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80,
    &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85,
    &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78,
    &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83,
    &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87,
    &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92,
    &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96,
    &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97,
    &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84,
    &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89,
    &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85,
    &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79,
    &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83,
    &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88,
    &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92,
    &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88,
    &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97,
    &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98,
    &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89,
    &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94,
    &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79,
    &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84,
    &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88,
    &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93,
    &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88,
    &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93,
    &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98,
    &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99,
    &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94,
    &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80,
    &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84,
    &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89,
    &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93,
    &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77,
    &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93,
    &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78,
    &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99,
    &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76,
    &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80,
    &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85,
    &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89,
    &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94,
    &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77,
    &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82,
    &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78,
    &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83,
    &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76,
    &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81,
    &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85,
    &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90,
    &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94,
    &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90,
    &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82,
    &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87,
    &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83,
    &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77,
    &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81,
    &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86,
    &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90,
    &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95,
    &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90,
    &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95,
    &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87,
    &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92,
    &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77,
    &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82,
    &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86,
    &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91,
    &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95,
    &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79,
    &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95,
    &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80,
    &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92,
    &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78,
    &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82,
    &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87,
    &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91,
    &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96,
    &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79,
    &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84,
    &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80,
    &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85,
    &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78,
    &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83,
    &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87,
    &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92,
    &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96,
    &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97,
    &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84,
    &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89,
    &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85,
    &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79,
    &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83,
    &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88,
    &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92,
    &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88,
    &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97,
    &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98,
    &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89,
    &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94,
    &SHAPE94, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340,
    &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1,
    &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340,
    &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1,
    &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340,
    &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1,
    &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340,
    &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1,
    &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE191, &SHAPE343,
    &SHAPE344, &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE0, &SHAPE346,
    &SHAPE347, &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE354,
    &SHAPE356, &SHAPE357, &SHAPE354, &SHAPE356, &SHAPE357, &SHAPE358, &SHAPE359, &SHAPE360,
    &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE361, &SHAPE362,
    &SHAPE363, &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE370,
    &SHAPE372, &SHAPE373, &SHAPE370, &SHAPE372, &SHAPE373, &SHAPE375, &SHAPE377, &SHAPE378,
    &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE380, &SHAPE382,
    &SHAPE383, &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE387,
    &SHAPE388, &SHAPE389, &SHAPE387, &SHAPE388, &SHAPE389, &SHAPE390, &SHAPE391, &SHAPE392,
    &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE393, &SHAPE394,
    &SHAPE395, &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE399,
    &SHAPE400, &SHAPE401, &SHAPE399, &SHAPE400, &SHAPE401, &SHAPE402, &SHAPE403, &SHAPE404,
    &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE405, &SHAPE406,
    &SHAPE407, &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE414,
    &SHAPE416, &SHAPE417, &SHAPE414, &SHAPE416, &SHAPE417, &SHAPE419, &SHAPE421, &SHAPE422,
    &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE424, &SHAPE426,
    &SHAPE427, &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE431,
    &SHAPE432, &SHAPE433, &SHAPE431, &SHAPE432, &SHAPE433, &SHAPE435, &SHAPE437, &SHAPE438,
    &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE440, &SHAPE442,
    &SHAPE443, &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE450,
    &SHAPE452, &SHAPE453, &SHAPE450, &SHAPE452, &SHAPE453, &SHAPE454, &SHAPE455, &SHAPE456,
    &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE457, &SHAPE458,
    &SHAPE459, &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE463,
    &SHAPE464, &SHAPE465, &SHAPE463, &SHAPE464, &SHAPE465, &SHAPE466, &SHAPE467, &SHAPE468,
    &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE469, &SHAPE470,
    &SHAPE471, &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE475,
    &SHAPE476, &SHAPE477, &SHAPE475, &SHAPE476, &SHAPE477, &SHAPE478, &SHAPE479, &SHAPE480,
    &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE481, &SHAPE482,
    &SHAPE483, &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE487,
    &SHAPE488, &SHAPE489, &SHAPE487, &SHAPE488, &SHAPE489, &SHAPE490, &SHAPE491, &SHAPE492,
    &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE493, &SHAPE494,
    &SHAPE495, &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE499,
    &SHAPE500, &SHAPE501, &SHAPE499, &SHAPE500, &SHAPE501, &SHAPE502, &SHAPE503, &SHAPE504,
    &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE505, &SHAPE506,
    &SHAPE507, &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE511,
    &SHAPE512, &SHAPE513, &SHAPE511, &SHAPE512, &SHAPE513, &SHAPE514, &SHAPE515, &SHAPE516,
    &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE517, &SHAPE518,
    &SHAPE519, &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE523,
    &SHAPE524, &SHAPE525, &SHAPE523, &SHAPE524, &SHAPE525, &SHAPE526, &SHAPE527, &SHAPE528,
    &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE529, &SHAPE530,
    &SHAPE531, &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE0,
    &SHAPE346, &SHAPE347, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE349, &SHAPE351, &SHAPE352,
    &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE354, &SHAPE356, &SHAPE357, &SHAPE354, &SHAPE356,
    &SHAPE357, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE361,
    &SHAPE362, &SHAPE363, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE365, &SHAPE367, &SHAPE368,
    &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE370, &SHAPE372, &SHAPE373, &SHAPE370, &SHAPE372,
    &SHAPE373, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE380,
    &SHAPE382, &SHAPE383, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE384, &SHAPE385, &SHAPE386,
    &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE387, &SHAPE388, &SHAPE389, &SHAPE387, &SHAPE388,
    &SHAPE389, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE393,
    &SHAPE394, &SHAPE395, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE396, &SHAPE397, &SHAPE398,
    &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE399, &SHAPE400, &SHAPE401, &SHAPE399, &SHAPE400,
    &SHAPE401, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE405,
    &SHAPE406, &SHAPE407, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE409, &SHAPE411, &SHAPE412,
    &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE414, &SHAPE416, &SHAPE417, &SHAPE414, &SHAPE416,
    &SHAPE417, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE424,
    &SHAPE426, &SHAPE427, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE428, &SHAPE429, &SHAPE430,
    &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE431, &SHAPE432, &SHAPE433, &SHAPE431, &SHAPE432,
    &SHAPE433, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE440,
    &SHAPE442, &SHAPE443, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE445, &SHAPE447, &SHAPE448,
    &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE450, &SHAPE452, &SHAPE453, &SHAPE450, &SHAPE452,
    &SHAPE453, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE457,
    &SHAPE458, &SHAPE459, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE460, &SHAPE461, &SHAPE462,
    &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE463, &SHAPE464, &SHAPE465, &SHAPE463, &SHAPE464,
    &SHAPE465, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE469,
    &SHAPE470, &SHAPE471, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE472, &SHAPE473, &SHAPE474,
    &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE475, &SHAPE476, &SHAPE477, &SHAPE475, &SHAPE476,
    &SHAPE477, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE481,
    &SHAPE482, &SHAPE483, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE484, &SHAPE485, &SHAPE486,
    &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE487, &SHAPE488, &SHAPE489, &SHAPE487, &SHAPE488,
    &SHAPE489, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE493,
    &SHAPE494, &SHAPE495, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE496, &SHAPE497, &SHAPE498,
    &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE499, &SHAPE500, &SHAPE501, &SHAPE499, &SHAPE500,
    &SHAPE501, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE505,
    &SHAPE506, &SHAPE507, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE508, &SHAPE509, &SHAPE510,
    &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE511, &SHAPE512, &SHAPE513, &SHAPE511, &SHAPE512,
    &SHAPE513, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE517,
    &SHAPE518, &SHAPE519, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE520, &SHAPE521, &SHAPE522,
    &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE523, &SHAPE524, &SHAPE525, &SHAPE523, &SHAPE524,
    &SHAPE525, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE529,
    &SHAPE530, &SHAPE531, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE191, &SHAPE343, &SHAPE344,
    &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE0, &SHAPE346, &SHAPE347,
    &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE354, &SHAPE356,
    &SHAPE357, &SHAPE354, &SHAPE356, &SHAPE357, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE358,
    &SHAPE359, &SHAPE360, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE361, &SHAPE362, &SHAPE363,
    &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE370, &SHAPE372,
    &SHAPE373, &SHAPE370, &SHAPE372, &SHAPE373, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE375,
    &SHAPE377, &SHAPE378, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE380, &SHAPE382, &SHAPE383,
    &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE387, &SHAPE388,
    &SHAPE389, &SHAPE387, &SHAPE388, &SHAPE389, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE390,
    &SHAPE391, &SHAPE392, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE393, &SHAPE394, &SHAPE395,
    &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE399, &SHAPE400,
    &SHAPE401, &SHAPE399, &SHAPE400, &SHAPE401, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE402,
    &SHAPE403, &SHAPE404, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE405, &SHAPE406, &SHAPE407,
    &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE414, &SHAPE416,
    &SHAPE417, &SHAPE414, &SHAPE416, &SHAPE417, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE419,
    &SHAPE421, &SHAPE422, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE424, &SHAPE426, &SHAPE427,
    &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE431, &SHAPE432,
    &SHAPE433, &SHAPE431, &SHAPE432, &SHAPE433, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE435,
    &SHAPE437, &SHAPE438, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE440, &SHAPE442, &SHAPE443,
    &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE450, &SHAPE452,
    &SHAPE453, &SHAPE450, &SHAPE452, &SHAPE453, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE454,
    &SHAPE455, &SHAPE456, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE457, &SHAPE458, &SHAPE459,
    &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE463, &SHAPE464,
    &SHAPE465, &SHAPE463, &SHAPE464, &SHAPE465, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE466,
    &SHAPE467, &SHAPE468, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE469, &SHAPE470, &SHAPE471,
    &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE475, &SHAPE476,
    &SHAPE477, &SHAPE475, &SHAPE476, &SHAPE477, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE478,
    &SHAPE479, &SHAPE480, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE481, &SHAPE482, &SHAPE483,
    &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE487, &SHAPE488,
    &SHAPE489, &SHAPE487, &SHAPE488, &SHAPE489, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE490,
    &SHAPE491, &SHAPE492, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE493, &SHAPE494, &SHAPE495,
    &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE499, &SHAPE500,
    &SHAPE501, &SHAPE499, &SHAPE500, &SHAPE501, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE502,
    &SHAPE503, &SHAPE504, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE505, &SHAPE506, &SHAPE507,
    &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE511, &SHAPE512,
    &SHAPE513, &SHAPE511, &SHAPE512, &SHAPE513, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE514,
    &SHAPE515, &SHAPE516, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE517, &SHAPE518, &SHAPE519,
    &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE523, &SHAPE524,
    &SHAPE525, &SHAPE523, &SHAPE524, &SHAPE525, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE526,
    &SHAPE527, &SHAPE528, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE529, &SHAPE530, &SHAPE531,
    &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE0, &SHAPE346,
    &SHAPE347, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE349,
    &SHAPE351, &SHAPE352, &SHAPE354, &SHAPE356, &SHAPE357, &SHAPE354, &SHAPE356, &SHAPE357,
    &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE361, &SHAPE362,
    &SHAPE363, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE365,
    &SHAPE367, &SHAPE368, &SHAPE370, &SHAPE372, &SHAPE373, &SHAPE370, &SHAPE372, &SHAPE373,
    &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE380, &SHAPE382,
    &SHAPE383, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE384,
    &SHAPE385, &SHAPE386, &SHAPE387, &SHAPE388, &SHAPE389, &SHAPE387, &SHAPE388, &SHAPE389,
    &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE393, &SHAPE394,
    &SHAPE395, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE396,
    &SHAPE397, &SHAPE398, &SHAPE399, &SHAPE400, &SHAPE401, &SHAPE399, &SHAPE400, &SHAPE401,
    &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE405, &SHAPE406,
    &SHAPE407, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE409,
    &SHAPE411, &SHAPE412, &SHAPE414, &SHAPE416, &SHAPE417, &SHAPE414, &SHAPE416, &SHAPE417,
    &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE424, &SHAPE426,
    &SHAPE427, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE428,
    &SHAPE429, &SHAPE430, &SHAPE431, &SHAPE432, &SHAPE433, &SHAPE431, &SHAPE432, &SHAPE433,
    &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE440, &SHAPE442,
    &SHAPE443, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE445,
    &SHAPE447, &SHAPE448, &SHAPE450, &SHAPE452, &SHAPE453, &SHAPE450, &SHAPE452, &SHAPE453,
    &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE457, &SHAPE458,
    &SHAPE459, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE460,
    &SHAPE461, &SHAPE462, &SHAPE463, &SHAPE464, &SHAPE465, &SHAPE463, &SHAPE464, &SHAPE465,
    &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE469, &SHAPE470,
    &SHAPE471, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE472,
    &SHAPE473, &SHAPE474, &SHAPE475, &SHAPE476, &SHAPE477, &SHAPE475, &SHAPE476, &SHAPE477,
    &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE481, &SHAPE482,
    &SHAPE483, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE484,
    &SHAPE485, &SHAPE486, &SHAPE487, &SHAPE488, &SHAPE489, &SHAPE487, &SHAPE488, &SHAPE489,
    &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE493, &SHAPE494,
    &SHAPE495, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE496,
    &SHAPE497, &SHAPE498, &SHAPE499, &SHAPE500, &SHAPE501, &SHAPE499, &SHAPE500, &SHAPE501,
    &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE505, &SHAPE506,
    &SHAPE507, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE508,
    &SHAPE509, &SHAPE510, &SHAPE511, &SHAPE512, &SHAPE513, &SHAPE511, &SHAPE512, &SHAPE513,
    &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE517, &SHAPE518,
    &SHAPE519, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE520,
    &SHAPE521, &SHAPE522, &SHAPE523, &SHAPE524, &SHAPE525, &SHAPE523, &SHAPE524, &SHAPE525,
    &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE529, &SHAPE530,
    &SHAPE531, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE191,
    &SHAPE343, &SHAPE344, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE349,
    &SHAPE351, &SHAPE352, &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE354, &SHAPE356, &SHAPE357,
    &SHAPE354, &SHAPE356, &SHAPE357, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE358, &SHAPE359,
    &SHAPE360, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE365,
    &SHAPE367, &SHAPE368, &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE370, &SHAPE372, &SHAPE373,
    &SHAPE370, &SHAPE372, &SHAPE373, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE375, &SHAPE377,
    &SHAPE378, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE384,
    &SHAPE385, &SHAPE386, &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE387, &SHAPE388, &SHAPE389,
    &SHAPE387, &SHAPE388, &SHAPE389, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE390, &SHAPE391,
    &SHAPE392, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE396,
    &SHAPE397, &SHAPE398, &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE399, &SHAPE400, &SHAPE401,
    &SHAPE399, &SHAPE400, &SHAPE401, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE402, &SHAPE403,
    &SHAPE404, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE409,
    &SHAPE411, &SHAPE412, &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE414, &SHAPE416, &SHAPE417,
    &SHAPE414, &SHAPE416, &SHAPE417, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE419, &SHAPE421,
    &SHAPE422, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE428,
    &SHAPE429, &SHAPE430, &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE431, &SHAPE432, &SHAPE433,
    &SHAPE431, &SHAPE432, &SHAPE433, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE435, &SHAPE437,
    &SHAPE438, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE445,
    &SHAPE447, &SHAPE448, &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE450, &SHAPE452, &SHAPE453,
    &SHAPE450, &SHAPE452, &SHAPE453, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE454, &SHAPE455,
    &SHAPE456, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE460,
    &SHAPE461, &SHAPE462, &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE463, &SHAPE464, &SHAPE465,
    &SHAPE463, &SHAPE464, &SHAPE465, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE466, &SHAPE467,
    &SHAPE468, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE472,
    &SHAPE473, &SHAPE474, &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE475, &SHAPE476, &SHAPE477,
    &SHAPE475, &SHAPE476, &SHAPE477, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE478, &SHAPE479,
    &SHAPE480, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE484,
    &SHAPE485, &SHAPE486, &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE487, &SHAPE488, &SHAPE489,
    &SHAPE487, &SHAPE488, &SHAPE489, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE490, &SHAPE491,
    &SHAPE492, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE496,
    &SHAPE497, &SHAPE498, &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE499, &SHAPE500, &SHAPE501,
    &SHAPE499, &SHAPE500, &SHAPE501, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE502, &SHAPE503,
    &SHAPE504, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE508,
    &SHAPE509, &SHAPE510, &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE511, &SHAPE512, &SHAPE513,
    &SHAPE511, &SHAPE512, &SHAPE513, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE514, &SHAPE515,
    &SHAPE516, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE520,
    &SHAPE521, &SHAPE522, &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE523, &SHAPE524, &SHAPE525,
    &SHAPE523, &SHAPE524, &SHAPE525, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE526, &SHAPE527,
    &SHAPE528, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE191,
    &SHAPE343, &SHAPE344, &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE0,
    &SHAPE346, &SHAPE347, &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE349, &SHAPE351, &SHAPE352,
    &SHAPE354, &SHAPE356, &SHAPE357, &SHAPE354, &SHAPE356, &SHAPE357, &SHAPE358, &SHAPE359,
    &SHAPE360, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE361,
    &SHAPE362, &SHAPE363, &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE365, &SHAPE367, &SHAPE368,
    &SHAPE370, &SHAPE372, &SHAPE373, &SHAPE370, &SHAPE372, &SHAPE373, &SHAPE375, &SHAPE377,
    &SHAPE378, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE380,
    &SHAPE382, &SHAPE383, &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE384, &SHAPE385, &SHAPE386,
    &SHAPE387, &SHAPE388, &SHAPE389, &SHAPE387, &SHAPE388, &SHAPE389, &SHAPE390, &SHAPE391,
    &SHAPE392, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE393,
    &SHAPE394, &SHAPE395, &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE396, &SHAPE397, &SHAPE398,
    &SHAPE399, &SHAPE400, &SHAPE401, &SHAPE399, &SHAPE400, &SHAPE401, &SHAPE402, &SHAPE403,
    &SHAPE404, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE405,
    &SHAPE406, &SHAPE407, &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE409, &SHAPE411, &SHAPE412,
    &SHAPE414, &SHAPE416, &SHAPE417, &SHAPE414, &SHAPE416, &SHAPE417, &SHAPE419, &SHAPE421,
    &SHAPE422, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE424,
    &SHAPE426, &SHAPE427, &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE428, &SHAPE429, &SHAPE430,
    &SHAPE431, &SHAPE432, &SHAPE433, &SHAPE431, &SHAPE432, &SHAPE433, &SHAPE435, &SHAPE437,
    &SHAPE438, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE440,
    &SHAPE442, &SHAPE443, &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE445, &SHAPE447, &SHAPE448,
    &SHAPE450, &SHAPE452, &SHAPE453, &SHAPE450, &SHAPE452, &SHAPE453, &SHAPE454, &SHAPE455,
    &SHAPE456, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE457,
    &SHAPE458, &SHAPE459, &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE460, &SHAPE461, &SHAPE462,
    &SHAPE463, &SHAPE464, &SHAPE465, &SHAPE463, &SHAPE464, &SHAPE465, &SHAPE466, &SHAPE467,
    &SHAPE468, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE469,
    &SHAPE470, &SHAPE471, &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE472, &SHAPE473, &SHAPE474,
    &SHAPE475, &SHAPE476, &SHAPE477, &SHAPE475, &SHAPE476, &SHAPE477, &SHAPE478, &SHAPE479,
    &SHAPE480, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE481,
    &SHAPE482, &SHAPE483, &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE484, &SHAPE485, &SHAPE486,
    &SHAPE487, &SHAPE488, &SHAPE489, &SHAPE487, &SHAPE488, &SHAPE489, &SHAPE490, &SHAPE491,
    &SHAPE492, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE493,
    &SHAPE494, &SHAPE495, &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE496, &SHAPE497, &SHAPE498,
    &SHAPE499, &SHAPE500, &SHAPE501, &SHAPE499, &SHAPE500, &SHAPE501, &SHAPE502, &SHAPE503,
    &SHAPE504, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE505,
    &SHAPE506, &SHAPE507, &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE508, &SHAPE509, &SHAPE510,
    &SHAPE511, &SHAPE512, &SHAPE513, &SHAPE511, &SHAPE512, &SHAPE513, &SHAPE514, &SHAPE515,
    &SHAPE516, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE517,
    &SHAPE518, &SHAPE519, &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE520, &SHAPE521, &SHAPE522,
    &SHAPE523, &SHAPE524, &SHAPE525, &SHAPE523, &SHAPE524, &SHAPE525, &SHAPE526, &SHAPE527,
    &SHAPE528, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE529,
    &SHAPE530, &SHAPE531, &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE191, &SHAPE343, &SHAPE344,
    &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE349, &SHAPE351, &SHAPE352,
    &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE354, &SHAPE356, &SHAPE357, &SHAPE354, &SHAPE356,
    &SHAPE357, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE361,
    &SHAPE362, &SHAPE363, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE365, &SHAPE367, &SHAPE368,
    &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE370, &SHAPE372, &SHAPE373, &SHAPE370, &SHAPE372,
    &SHAPE373, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE380,
    &SHAPE382, &SHAPE383, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE384, &SHAPE385, &SHAPE386,
    &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE387, &SHAPE388, &SHAPE389, &SHAPE387, &SHAPE388,
    &SHAPE389, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE393,
    &SHAPE394, &SHAPE395, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE396, &SHAPE397, &SHAPE398,
    &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE399, &SHAPE400, &SHAPE401, &SHAPE399, &SHAPE400,
    &SHAPE401, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE405,
    &SHAPE406, &SHAPE407, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE409, &SHAPE411, &SHAPE412,
    &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE414, &SHAPE416, &SHAPE417, &SHAPE414, &SHAPE416,
    &SHAPE417, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE424,
    &SHAPE426, &SHAPE427, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE428, &SHAPE429, &SHAPE430,
    &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE431, &SHAPE432, &SHAPE433, &SHAPE431, &SHAPE432,
    &SHAPE433, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE440,
    &SHAPE442, &SHAPE443, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE445, &SHAPE447, &SHAPE448,
    &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE450, &SHAPE452, &SHAPE453, &SHAPE450, &SHAPE452,
    &SHAPE453, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE457,
    &SHAPE458, &SHAPE459, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE460, &SHAPE461, &SHAPE462,
    &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE463, &SHAPE464, &SHAPE465, &SHAPE463, &SHAPE464,
    &SHAPE465, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE469,
    &SHAPE470, &SHAPE471, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE472, &SHAPE473, &SHAPE474,
    &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE475, &SHAPE476, &SHAPE477, &SHAPE475, &SHAPE476,
    &SHAPE477, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE481,
    &SHAPE482, &SHAPE483, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE484, &SHAPE485, &SHAPE486,
    &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE487, &SHAPE488, &SHAPE489, &SHAPE487, &SHAPE488,
    &SHAPE489, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE493,
    &SHAPE494, &SHAPE495, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE496, &SHAPE497, &SHAPE498,
    &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE499, &SHAPE500, &SHAPE501, &SHAPE499, &SHAPE500,
    &SHAPE501, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE505,
    &SHAPE506, &SHAPE507, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE508, &SHAPE509, &SHAPE510,
    &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE511, &SHAPE512, &SHAPE513, &SHAPE511, &SHAPE512,
    &SHAPE513, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE517,
    &SHAPE518, &SHAPE519, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE520, &SHAPE521, &SHAPE522,
    &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE523, &SHAPE524, &SHAPE525, &SHAPE523, &SHAPE524,
    &SHAPE525, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE529,
    &SHAPE530, &SHAPE531, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE191, &SHAPE343, &SHAPE344,
    &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE0, &SHAPE346, &SHAPE347,
    &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE354, &SHAPE356,
    &SHAPE357, &SHAPE354, &SHAPE356, &SHAPE357, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE358,
    &SHAPE359, &SHAPE360, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE361, &SHAPE362, &SHAPE363,
    &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE370, &SHAPE372,
    &SHAPE373, &SHAPE370, &SHAPE372, &SHAPE373, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE375,
    &SHAPE377, &SHAPE378, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE380, &SHAPE382, &SHAPE383,
    &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE387, &SHAPE388,
    &SHAPE389, &SHAPE387, &SHAPE388, &SHAPE389, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE390,
    &SHAPE391, &SHAPE392, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE393, &SHAPE394, &SHAPE395,
    &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE399, &SHAPE400,
    &SHAPE401, &SHAPE399, &SHAPE400, &SHAPE401, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE402,
    &SHAPE403, &SHAPE404, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE405, &SHAPE406, &SHAPE407,
    &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE414, &SHAPE416,
    &SHAPE417, &SHAPE414, &SHAPE416, &SHAPE417, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE419,
    &SHAPE421, &SHAPE422, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE424, &SHAPE426, &SHAPE427,
    &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE431, &SHAPE432,
    &SHAPE433, &SHAPE431, &SHAPE432, &SHAPE433, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE435,
    &SHAPE437, &SHAPE438, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE440, &SHAPE442, &SHAPE443,
    &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE450, &SHAPE452,
    &SHAPE453, &SHAPE450, &SHAPE452, &SHAPE453, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE454,
    &SHAPE455, &SHAPE456, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE457, &SHAPE458, &SHAPE459,
    &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE463, &SHAPE464,
    &SHAPE465, &SHAPE463, &SHAPE464, &SHAPE465, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE466,
    &SHAPE467, &SHAPE468, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE469, &SHAPE470, &SHAPE471,
    &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE475, &SHAPE476,
    &SHAPE477, &SHAPE475, &SHAPE476, &SHAPE477, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE478,
    &SHAPE479, &SHAPE480, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE481, &SHAPE482, &SHAPE483,
    &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE487, &SHAPE488,
    &SHAPE489, &SHAPE487, &SHAPE488, &SHAPE489, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE490,
    &SHAPE491, &SHAPE492, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE493, &SHAPE494, &SHAPE495,
    &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE499, &SHAPE500,
    &SHAPE501, &SHAPE499, &SHAPE500, &SHAPE501, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE502,
    &SHAPE503, &SHAPE504, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE505, &SHAPE506, &SHAPE507,
    &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE511, &SHAPE512,
    &SHAPE513, &SHAPE511, &SHAPE512, &SHAPE513, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE514,
    &SHAPE515, &SHAPE516, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE517, &SHAPE518, &SHAPE519,
    &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE523, &SHAPE524,
    &SHAPE525, &SHAPE523, &SHAPE524, &SHAPE525, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE526,
    &SHAPE527, &SHAPE528, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE529, &SHAPE530, &SHAPE531,
    &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE0, &SHAPE346,
    &SHAPE347, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE349,
    &SHAPE351, &SHAPE352, &SHAPE354, &SHAPE356, &SHAPE357, &SHAPE354, &SHAPE356, &SHAPE357,
    &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE361, &SHAPE362,
    &SHAPE363, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE365,
    &SHAPE367, &SHAPE368, &SHAPE370, &SHAPE372, &SHAPE373, &SHAPE370, &SHAPE372, &SHAPE373,
    &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE380, &SHAPE382,
    &SHAPE383, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE384,
    &SHAPE385, &SHAPE386, &SHAPE387, &SHAPE388, &SHAPE389, &SHAPE387, &SHAPE388, &SHAPE389,
    &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE393, &SHAPE394,
    &SHAPE395, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE396,
    &SHAPE397, &SHAPE398, &SHAPE399, &SHAPE400, &SHAPE401, &SHAPE399, &SHAPE400, &SHAPE401,
    &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE405, &SHAPE406,
    &SHAPE407, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE409,
    &SHAPE411, &SHAPE412, &SHAPE414, &SHAPE416, &SHAPE417, &SHAPE414, &SHAPE416, &SHAPE417,
    &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE424, &SHAPE426,
    &SHAPE427, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE428,
    &SHAPE429, &SHAPE430, &SHAPE431, &SHAPE432, &SHAPE433, &SHAPE431, &SHAPE432, &SHAPE433,
    &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE440, &SHAPE442,
    &SHAPE443, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE445,
    &SHAPE447, &SHAPE448, &SHAPE450, &SHAPE452, &SHAPE453, &SHAPE450, &SHAPE452, &SHAPE453,
    &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE457, &SHAPE458,
    &SHAPE459, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE460,
    &SHAPE461, &SHAPE462, &SHAPE463, &SHAPE464, &SHAPE465, &SHAPE463, &SHAPE464, &SHAPE465,
    &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE469, &SHAPE470,
    &SHAPE471, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE472,
    &SHAPE473, &SHAPE474, &SHAPE475, &SHAPE476, &SHAPE477, &SHAPE475, &SHAPE476, &SHAPE477,
    &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE481, &SHAPE482,
    &SHAPE483, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE484,
    &SHAPE485, &SHAPE486, &SHAPE487, &SHAPE488, &SHAPE489, &SHAPE487, &SHAPE488, &SHAPE489,
    &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE493, &SHAPE494,
    &SHAPE495, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE496,
    &SHAPE497, &SHAPE498, &SHAPE499, &SHAPE500, &SHAPE501, &SHAPE499, &SHAPE500, &SHAPE501,
    &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE505, &SHAPE506,
    &SHAPE507, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE508,
    &SHAPE509, &SHAPE510, &SHAPE511, &SHAPE512, &SHAPE513, &SHAPE511, &SHAPE512, &SHAPE513,
    &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE517, &SHAPE518,
    &SHAPE519, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE520,
    &SHAPE521, &SHAPE522, &SHAPE523, &SHAPE524, &SHAPE525, &SHAPE523, &SHAPE524, &SHAPE525,
    &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE529, &SHAPE530,
    &SHAPE531, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE191,
    &SHAPE343, &SHAPE344, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE349,
    &SHAPE351, &SHAPE352, &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE354, &SHAPE356, &SHAPE357,
    &SHAPE354, &SHAPE356, &SHAPE357, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE358, &SHAPE359,
    &SHAPE360, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE365,
    &SHAPE367, &SHAPE368, &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE370, &SHAPE372, &SHAPE373,
    &SHAPE370, &SHAPE372, &SHAPE373, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE375, &SHAPE377,
    &SHAPE378, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE384,
    &SHAPE385, &SHAPE386, &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE387, &SHAPE388, &SHAPE389,
    &SHAPE387, &SHAPE388, &SHAPE389, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE390, &SHAPE391,
    &SHAPE392, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE396,
    &SHAPE397, &SHAPE398, &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE399, &SHAPE400, &SHAPE401,
    &SHAPE399, &SHAPE400, &SHAPE401, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE402, &SHAPE403,
    &SHAPE404, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE409,
    &SHAPE411, &SHAPE412, &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE414, &SHAPE416, &SHAPE417,
    &SHAPE414, &SHAPE416, &SHAPE417, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE419, &SHAPE421,
    &SHAPE422, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE428,
    &SHAPE429, &SHAPE430, &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE431, &SHAPE432, &SHAPE433,
    &SHAPE431, &SHAPE432, &SHAPE433, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE435, &SHAPE437,
    &SHAPE438, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE445,
    &SHAPE447, &SHAPE448, &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE450, &SHAPE452, &SHAPE453,
    &SHAPE450, &SHAPE452, &SHAPE453, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE454, &SHAPE455,
    &SHAPE456, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE460,
    &SHAPE461, &SHAPE462, &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE463, &SHAPE464, &SHAPE465,
    &SHAPE463, &SHAPE464, &SHAPE465, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE466, &SHAPE467,
    &SHAPE468, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE472,
    &SHAPE473, &SHAPE474, &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE475, &SHAPE476, &SHAPE477,
    &SHAPE475, &SHAPE476, &SHAPE477, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE478, &SHAPE479,
    &SHAPE480, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE484,
    &SHAPE485, &SHAPE486, &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE487, &SHAPE488, &SHAPE489,
    &SHAPE487, &SHAPE488, &SHAPE489, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE490, &SHAPE491,
    &SHAPE492, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE496,
    &SHAPE497, &SHAPE498, &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE499, &SHAPE500, &SHAPE501,
    &SHAPE499, &SHAPE500, &SHAPE501, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE502, &SHAPE503,
    &SHAPE504, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE508,
    &SHAPE509, &SHAPE510, &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE511, &SHAPE512, &SHAPE513,
    &SHAPE511, &SHAPE512, &SHAPE513, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE514, &SHAPE515,
    &SHAPE516, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE520,
    &SHAPE521, &SHAPE522, &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE523, &SHAPE524, &SHAPE525,
    &SHAPE523, &SHAPE524, &SHAPE525, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE526, &SHAPE527,
    &SHAPE528, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE191,
    &SHAPE343, &SHAPE344, &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE0,
    &SHAPE346, &SHAPE347, &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE349, &SHAPE351, &SHAPE352,
    &SHAPE354, &SHAPE356, &SHAPE357, &SHAPE354, &SHAPE356, &SHAPE357, &SHAPE358, &SHAPE359,
    &SHAPE360, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE361,
    &SHAPE362, &SHAPE363, &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE365, &SHAPE367, &SHAPE368,
    &SHAPE370, &SHAPE372, &SHAPE373, &SHAPE370, &SHAPE372, &SHAPE373, &SHAPE375, &SHAPE377,
    &SHAPE378, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE380,
    &SHAPE382, &SHAPE383, &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE384, &SHAPE385, &SHAPE386,
    &SHAPE387, &SHAPE388, &SHAPE389, &SHAPE387, &SHAPE388, &SHAPE389, &SHAPE390, &SHAPE391,
    &SHAPE392, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE393,
    &SHAPE394, &SHAPE395, &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE396, &SHAPE397, &SHAPE398,
    &SHAPE399, &SHAPE400, &SHAPE401, &SHAPE399, &SHAPE400, &SHAPE401, &SHAPE402, &SHAPE403,
    &SHAPE404, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE405,
    &SHAPE406, &SHAPE407, &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE409, &SHAPE411, &SHAPE412,
    &SHAPE414, &SHAPE416, &SHAPE417, &SHAPE414, &SHAPE416, &SHAPE417, &SHAPE419, &SHAPE421,
    &SHAPE422, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE424,
    &SHAPE426, &SHAPE427, &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE428, &SHAPE429, &SHAPE430,
    &SHAPE431, &SHAPE432, &SHAPE433, &SHAPE431, &SHAPE432, &SHAPE433, &SHAPE435, &SHAPE437,
    &SHAPE438, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE440,
    &SHAPE442, &SHAPE443, &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE445, &SHAPE447, &SHAPE448,
    &SHAPE450, &SHAPE452, &SHAPE453, &SHAPE450, &SHAPE452, &SHAPE453, &SHAPE454, &SHAPE455,
    &SHAPE456, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE457,
    &SHAPE458, &SHAPE459, &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE460, &SHAPE461, &SHAPE462,
    &SHAPE463, &SHAPE464, &SHAPE465, &SHAPE463, &SHAPE464, &SHAPE465, &SHAPE466, &SHAPE467,
    &SHAPE468, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE469,
    &SHAPE470, &SHAPE471, &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE472, &SHAPE473, &SHAPE474,
    &SHAPE475, &SHAPE476, &SHAPE477, &SHAPE475, &SHAPE476, &SHAPE477, &SHAPE478, &SHAPE479,
    &SHAPE480, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE481,
    &SHAPE482, &SHAPE483, &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE484, &SHAPE485, &SHAPE486,
    &SHAPE487, &SHAPE488, &SHAPE489, &SHAPE487, &SHAPE488, &SHAPE489, &SHAPE490, &SHAPE491,
    &SHAPE492, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE493,
    &SHAPE494, &SHAPE495, &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE496, &SHAPE497, &SHAPE498,
    &SHAPE499, &SHAPE500, &SHAPE501, &SHAPE499, &SHAPE500, &SHAPE501, &SHAPE502, &SHAPE503,
    &SHAPE504, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE505,
    &SHAPE506, &SHAPE507, &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE508, &SHAPE509, &SHAPE510,
    &SHAPE511, &SHAPE512, &SHAPE513, &SHAPE511, &SHAPE512, &SHAPE513, &SHAPE514, &SHAPE515,
    &SHAPE516, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE517,
    &SHAPE518, &SHAPE519, &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE520, &SHAPE521, &SHAPE522,
    &SHAPE523, &SHAPE524, &SHAPE525, &SHAPE523, &SHAPE524, &SHAPE525, &SHAPE526, &SHAPE527,
    &SHAPE528, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE529,
    &SHAPE530, &SHAPE531, &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE191, &SHAPE343, &SHAPE344,
    &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE349, &SHAPE351, &SHAPE352,
    &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE354, &SHAPE356, &SHAPE357, &SHAPE354, &SHAPE356,
    &SHAPE357, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE361,
    &SHAPE362, &SHAPE363, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE365, &SHAPE367, &SHAPE368,
    &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE370, &SHAPE372, &SHAPE373, &SHAPE370, &SHAPE372,
    &SHAPE373, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE380,
    &SHAPE382, &SHAPE383, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE384, &SHAPE385, &SHAPE386,
    &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE387, &SHAPE388, &SHAPE389, &SHAPE387, &SHAPE388,
    &SHAPE389, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE393,
    &SHAPE394, &SHAPE395, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE396, &SHAPE397, &SHAPE398,
    &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE399, &SHAPE400, &SHAPE401, &SHAPE399, &SHAPE400,
    &SHAPE401, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE405,
    &SHAPE406, &SHAPE407, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE409, &SHAPE411, &SHAPE412,
    &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE414, &SHAPE416, &SHAPE417, &SHAPE414, &SHAPE416,
    &SHAPE417, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE424,
    &SHAPE426, &SHAPE427, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE428, &SHAPE429, &SHAPE430,
    &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE431, &SHAPE432, &SHAPE433, &SHAPE431, &SHAPE432,
    &SHAPE433, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE440,
    &SHAPE442, &SHAPE443, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE445, &SHAPE447, &SHAPE448,
    &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE450, &SHAPE452, &SHAPE453, &SHAPE450, &SHAPE452,
    &SHAPE453, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE457,
    &SHAPE458, &SHAPE459, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE460, &SHAPE461, &SHAPE462,
    &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE463, &SHAPE464, &SHAPE465, &SHAPE463, &SHAPE464,
    &SHAPE465, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE469,
    &SHAPE470, &SHAPE471, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE472, &SHAPE473, &SHAPE474,
    &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE475, &SHAPE476, &SHAPE477, &SHAPE475, &SHAPE476,
    &SHAPE477, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE481,
    &SHAPE482, &SHAPE483, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE484, &SHAPE485, &SHAPE486,
    &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE487, &SHAPE488, &SHAPE489, &SHAPE487, &SHAPE488,
    &SHAPE489, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE493,
    &SHAPE494, &SHAPE495, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE496, &SHAPE497, &SHAPE498,
    &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE499, &SHAPE500, &SHAPE501, &SHAPE499, &SHAPE500,
    &SHAPE501, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE505,
    &SHAPE506, &SHAPE507, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE508, &SHAPE509, &SHAPE510,
    &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE511, &SHAPE512, &SHAPE513, &SHAPE511, &SHAPE512,
    &SHAPE513, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE517,
    &SHAPE518, &SHAPE519, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE520, &SHAPE521, &SHAPE522,
    &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE523, &SHAPE524, &SHAPE525, &SHAPE523, &SHAPE524,
    &SHAPE525, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE529,
    &SHAPE530, &SHAPE531, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE191, &SHAPE343, &SHAPE344,
    &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE0, &SHAPE346, &SHAPE347,
    &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE354, &SHAPE356,
    &SHAPE357, &SHAPE354, &SHAPE356, &SHAPE357, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE358,
    &SHAPE359, &SHAPE360, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE361, &SHAPE362, &SHAPE363,
    &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE370, &SHAPE372,
    &SHAPE373, &SHAPE370, &SHAPE372, &SHAPE373, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE375,
    &SHAPE377, &SHAPE378, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE380, &SHAPE382, &SHAPE383,
    &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE387, &SHAPE388,
    &SHAPE389, &SHAPE387, &SHAPE388, &SHAPE389, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE390,
    &SHAPE391, &SHAPE392, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE393, &SHAPE394, &SHAPE395,
    &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE399, &SHAPE400,
    &SHAPE401, &SHAPE399, &SHAPE400, &SHAPE401, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE402,
    &SHAPE403, &SHAPE404, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE405, &SHAPE406, &SHAPE407,
    &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE414, &SHAPE416,
    &SHAPE417, &SHAPE414, &SHAPE416, &SHAPE417, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE419,
    &SHAPE421, &SHAPE422, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE424, &SHAPE426, &SHAPE427,
    &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE431, &SHAPE432,
    &SHAPE433, &SHAPE431, &SHAPE432, &SHAPE433, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE435,
    &SHAPE437, &SHAPE438, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE440, &SHAPE442, &SHAPE443,
    &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE450, &SHAPE452,
    &SHAPE453, &SHAPE450, &SHAPE452, &SHAPE453, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE454,
    &SHAPE455, &SHAPE456, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE457, &SHAPE458, &SHAPE459,
    &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE463, &SHAPE464,
    &SHAPE465, &SHAPE463, &SHAPE464, &SHAPE465, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE466,
    &SHAPE467, &SHAPE468, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE469, &SHAPE470, &SHAPE471,
    &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE475, &SHAPE476,
    &SHAPE477, &SHAPE475, &SHAPE476, &SHAPE477, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE478,
    &SHAPE479, &SHAPE480, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE481, &SHAPE482, &SHAPE483,
    &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE487, &SHAPE488,
    &SHAPE489, &SHAPE487, &SHAPE488, &SHAPE489, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE490,
    &SHAPE491, &SHAPE492, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE493, &SHAPE494, &SHAPE495,
    &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE499, &SHAPE500,
    &SHAPE501, &SHAPE499, &SHAPE500, &SHAPE501, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE502,
    &SHAPE503, &SHAPE504, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE505, &SHAPE506, &SHAPE507,
    &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE511, &SHAPE512,
    &SHAPE513, &SHAPE511, &SHAPE512, &SHAPE513, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE514,
    &SHAPE515, &SHAPE516, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE517, &SHAPE518, &SHAPE519,
    &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE523, &SHAPE524,
    &SHAPE525, &SHAPE523, &SHAPE524, &SHAPE525, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE526,
    &SHAPE527, &SHAPE528, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE529, &SHAPE530, &SHAPE531,
    &SHAPE669, &SHAPE669, &SHAPE669, &SHAPE669, &SHAPE669, &SHAPE669, &SHAPE669, &SHAPE669,
    &SHAPE669, &SHAPE669, &SHAPE669, &SHAPE669, &SHAPE669, &SHAPE669, &SHAPE669, &SHAPE669,
    &SHAPE668, &SHAPE668, &SHAPE668, &SHAPE668, &SHAPE668, &SHAPE668, &SHAPE668, &SHAPE668,
    &SHAPE668, &SHAPE668, &SHAPE668, &SHAPE668, &SHAPE668, &SHAPE668, &SHAPE668, &SHAPE668,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE670, &SHAPE670, &SHAPE671, &SHAPE671, &SHAPE672,
    &SHAPE673, &SHAPE674, &SHAPE675, &SHAPE676, &SHAPE676, &SHAPE677, &SHAPE677, &SHAPE679,
    &SHAPE679, &SHAPE679, &SHAPE679, &SHAPE680, &SHAPE680, &SHAPE680, &SHAPE680, &SHAPE681,
    &SHAPE681, &SHAPE681, &SHAPE681, &SHAPE682, &SHAPE682, &SHAPE682, &SHAPE682, &SHAPE1,
    &SHAPE556, &SHAPE556, &SHAPE556, &SHAPE556, &SHAPE683, &SHAPE683, &SHAPE683, &SHAPE683,
    &SHAPE684, &SHAPE684, &SHAPE684, &SHAPE684, &SHAPE685, &SHAPE685, &SHAPE685, &SHAPE685,
    &SHAPE685, &SHAPE685, &SHAPE685, &SHAPE685, &SHAPE686, &SHAPE686, &SHAPE687, &SHAPE687,
    &SHAPE688, &SHAPE688, &SHAPE689, &SHAPE689, &SHAPE690, &SHAPE690, &SHAPE690, &SHAPE690,
    &SHAPE691, &SHAPE691, &SHAPE691, &SHAPE691, &SHAPE692, &SHAPE692, &SHAPE693, &SHAPE693,
    &SHAPE692, &SHAPE692, &SHAPE693, &SHAPE693, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555,
    &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555,
    &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555,
    &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555,
    &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555,
    &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555,
    &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555,
    &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555,
    &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE555, &SHAPE562, &SHAPE23, &SHAPE23, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE694, &SHAPE1, &SHAPE20, &SHAPE695, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE694,
    &SHAPE1, &SHAPE696, &SHAPE696, &SHAPE696, &SHAPE696, &SHAPE696, &SHAPE696, &SHAPE696,
    &SHAPE696, &SHAPE696, &SHAPE696, &SHAPE696, &SHAPE696, &SHAPE696, &SHAPE696, &SHAPE696,
    &SHAPE696, &SHAPE696, &SHAPE696, &SHAPE696, &SHAPE696, &SHAPE696, &SHAPE696, &SHAPE696,
    &SHAPE696, &SHAPE696, &SHAPE696, &SHAPE23, &SHAPE697, &SHAPE697, &SHAPE697, &SHAPE697,
    &SHAPE697, &SHAPE697, &SHAPE697, &SHAPE697, &SHAPE697, &SHAPE697, &SHAPE697, &SHAPE697,
    &SHAPE697, &SHAPE697, &SHAPE697, &SHAPE697, &SHAPE697, &SHAPE697, &SHAPE697, &SHAPE697,
    &SHAPE697, &SHAPE697, &SHAPE697, &SHAPE697, &SHAPE697, &SHAPE697, &SHAPE191, &SHAPE20, &SHAPE1,
    &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340,
    &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE215, &SHAPE216, &SHAPE215, &SHAPE216, &SHAPE236,
    &SHAPE238, &SHAPE236, &SHAPE238, &SHAPE240, &SHAPE242, &SHAPE240, &SHAPE242, &SHAPE244,
    &SHAPE246, &SHAPE244, &SHAPE246, &SHAPE248, &SHAPE250, &SHAPE248, &SHAPE250, &SHAPE252,
    &SHAPE254, &SHAPE252, &SHAPE254, &SHAPE256, &SHAPE258, &SHAPE256, &SHAPE258, &SHAPE260,
    &SHAPE262, &SHAPE260, &SHAPE262, &SHAPE264, &SHAPE266, &SHAPE264, &SHAPE266, &SHAPE236,
    &SHAPE238, &SHAPE236, &SHAPE238, &SHAPE240, &SHAPE242, &SHAPE240, &SHAPE242, &SHAPE244,
    &SHAPE246, &SHAPE244, &SHAPE246, &SHAPE248, &SHAPE250, &SHAPE248, &SHAPE250, &SHAPE252,
    &SHAPE254, &SHAPE252, &SHAPE254, &SHAPE256, &SHAPE258, &SHAPE256, &SHAPE258, &SHAPE260,
    &SHAPE262, &SHAPE260, &SHAPE262, &SHAPE264, &SHAPE266, &SHAPE264, &SHAPE266, &SHAPE193,
    &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE193,
    &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE195,
    &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE195,
    &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE194,
    &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE194,
    &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE192,
    &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE192,
    &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE193,
    &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE193,
    &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE195,
    &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE195,
    &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE194,
    &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE194,
    &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE192,
    &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE192,
    &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE337,
    &SHAPE337, &SHAPE337, &SHAPE337, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE337,
    &SHAPE337, &SHAPE337, &SHAPE337, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE338,
    &SHAPE338, &SHAPE338, &SHAPE338, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE338,
    &SHAPE338, &SHAPE338, &SHAPE338, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE337,
    &SHAPE337, &SHAPE337, &SHAPE337, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE337,
    &SHAPE337, &SHAPE337, &SHAPE337, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE248, &SHAPE338,
    &SHAPE338, &SHAPE338, &SHAPE338, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE338,
    &SHAPE338, &SHAPE338, &SHAPE338, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE254, &SHAPE76,
    &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80,
    &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85,
    &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89,
    &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94,
    &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77,
    &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82,
    &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78,
    &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83,
    &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76, &SHAPE76,
    &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81,
    &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85,
    &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90,
    &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94,
    &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90,
    &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82,
    &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87,
    &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83,
    &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE217, &SHAPE218, &SHAPE217,
    &SHAPE218, &SHAPE219, &SHAPE220, &SHAPE219, &SHAPE220, &SHAPE221, &SHAPE222, &SHAPE223,
    &SHAPE224, &SHAPE225, &SHAPE226, &SHAPE227, &SHAPE228, &SHAPE229, &SHAPE230, &SHAPE229,
    &SHAPE230, &SHAPE231, &SHAPE232, &SHAPE231, &SHAPE232, &SHAPE217, &SHAPE218, &SHAPE217,
    &SHAPE218, &SHAPE219, &SHAPE220, &SHAPE219, &SHAPE220, &SHAPE221, &SHAPE222, &SHAPE223,
    &SHAPE224, &SHAPE225, &SHAPE226, &SHAPE227, &SHAPE228, &SHAPE229, &SHAPE230, &SHAPE229,
    &SHAPE230, &SHAPE231, &SHAPE232, &SHAPE231, &SHAPE232, &SHAPE192, &SHAPE192, &SHAPE193,
    &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193,
    &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195,
    &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195,
    &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194,
    &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194,
    &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192,
    &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192,
    &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193,
    &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193,
    &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195,
    &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195,
    &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194,
    &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194,
    &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192,
    &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192,
    &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191,
    &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE191, &SHAPE196, &SHAPE196, &SHAPE197,
    &SHAPE197, &SHAPE198, &SHAPE198, &SHAPE199, &SHAPE199, &SHAPE196, &SHAPE196, &SHAPE197,
    &SHAPE197, &SHAPE198, &SHAPE198, &SHAPE199, &SHAPE199, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE698, &SHAPE699, &SHAPE700,
    &SHAPE701, &SHAPE702, &SHAPE703, &SHAPE704, &SHAPE705, &SHAPE705, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE38, &SHAPE1, &SHAPE1, &SHAPE76, &SHAPE76,
    &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81,
    &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85,
    &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90,
    &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94,
    &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90,
    &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82,
    &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87,
    &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83,
    &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE191, &SHAPE343, &SHAPE344,
    &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE0, &SHAPE346, &SHAPE347,
    &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE354, &SHAPE356,
    &SHAPE357, &SHAPE354, &SHAPE356, &SHAPE357, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE358,
    &SHAPE359, &SHAPE360, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE361, &SHAPE362, &SHAPE363,
    &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE370, &SHAPE372,
    &SHAPE373, &SHAPE370, &SHAPE372, &SHAPE373, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE375,
    &SHAPE377, &SHAPE378, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE380, &SHAPE382, &SHAPE383,
    &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE387, &SHAPE388,
    &SHAPE389, &SHAPE387, &SHAPE388, &SHAPE389, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE390,
    &SHAPE391, &SHAPE392, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE393, &SHAPE394, &SHAPE395,
    &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE399, &SHAPE400,
    &SHAPE401, &SHAPE399, &SHAPE400, &SHAPE401, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE402,
    &SHAPE403, &SHAPE404, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE405, &SHAPE406, &SHAPE407,
    &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE414, &SHAPE416,
    &SHAPE417, &SHAPE414, &SHAPE416, &SHAPE417, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE419,
    &SHAPE421, &SHAPE422, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE424, &SHAPE426, &SHAPE427,
    &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE431, &SHAPE432,
    &SHAPE433, &SHAPE431, &SHAPE432, &SHAPE433, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE435,
    &SHAPE437, &SHAPE438, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE440, &SHAPE442, &SHAPE443,
    &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE450, &SHAPE452,
    &SHAPE453, &SHAPE450, &SHAPE452, &SHAPE453, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE454,
    &SHAPE455, &SHAPE456, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE457, &SHAPE458, &SHAPE459,
    &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE463, &SHAPE464,
    &SHAPE465, &SHAPE463, &SHAPE464, &SHAPE465, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE466,
    &SHAPE467, &SHAPE468, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE469, &SHAPE470, &SHAPE471,
    &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE475, &SHAPE476,
    &SHAPE477, &SHAPE475, &SHAPE476, &SHAPE477, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE478,
    &SHAPE479, &SHAPE480, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE481, &SHAPE482, &SHAPE483,
    &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE487, &SHAPE488,
    &SHAPE489, &SHAPE487, &SHAPE488, &SHAPE489, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE490,
    &SHAPE491, &SHAPE492, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE493, &SHAPE494, &SHAPE495,
    &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE499, &SHAPE500,
    &SHAPE501, &SHAPE499, &SHAPE500, &SHAPE501, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE502,
    &SHAPE503, &SHAPE504, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE505, &SHAPE506, &SHAPE507,
    &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE511, &SHAPE512,
    &SHAPE513, &SHAPE511, &SHAPE512, &SHAPE513, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE514,
    &SHAPE515, &SHAPE516, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE517, &SHAPE518, &SHAPE519,
    &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE523, &SHAPE524,
    &SHAPE525, &SHAPE523, &SHAPE524, &SHAPE525, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE526,
    &SHAPE527, &SHAPE528, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE529, &SHAPE530, &SHAPE531,
    &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77,
    &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81,
    &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86,
    &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90,
    &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95,
    &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90,
    &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95,
    &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87,
    &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92,
    &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE191,
    &SHAPE343, &SHAPE344, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE349,
    &SHAPE351, &SHAPE352, &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE354, &SHAPE356, &SHAPE357,
    &SHAPE354, &SHAPE356, &SHAPE357, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE358, &SHAPE359,
    &SHAPE360, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE365,
    &SHAPE367, &SHAPE368, &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE370, &SHAPE372, &SHAPE373,
    &SHAPE370, &SHAPE372, &SHAPE373, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE375, &SHAPE377,
    &SHAPE378, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE384,
    &SHAPE385, &SHAPE386, &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE387, &SHAPE388, &SHAPE389,
    &SHAPE387, &SHAPE388, &SHAPE389, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE390, &SHAPE391,
    &SHAPE392, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE396,
    &SHAPE397, &SHAPE398, &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE399, &SHAPE400, &SHAPE401,
    &SHAPE399, &SHAPE400, &SHAPE401, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE402, &SHAPE403,
    &SHAPE404, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE409,
    &SHAPE411, &SHAPE412, &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE414, &SHAPE416, &SHAPE417,
    &SHAPE414, &SHAPE416, &SHAPE417, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE419, &SHAPE421,
    &SHAPE422, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE428,
    &SHAPE429, &SHAPE430, &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE431, &SHAPE432, &SHAPE433,
    &SHAPE431, &SHAPE432, &SHAPE433, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE435, &SHAPE437,
    &SHAPE438, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE445,
    &SHAPE447, &SHAPE448, &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE450, &SHAPE452, &SHAPE453,
    &SHAPE450, &SHAPE452, &SHAPE453, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE454, &SHAPE455,
    &SHAPE456, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE460,
    &SHAPE461, &SHAPE462, &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE463, &SHAPE464, &SHAPE465,
    &SHAPE463, &SHAPE464, &SHAPE465, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE466, &SHAPE467,
    &SHAPE468, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE472,
    &SHAPE473, &SHAPE474, &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE475, &SHAPE476, &SHAPE477,
    &SHAPE475, &SHAPE476, &SHAPE477, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE478, &SHAPE479,
    &SHAPE480, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE484,
    &SHAPE485, &SHAPE486, &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE487, &SHAPE488, &SHAPE489,
    &SHAPE487, &SHAPE488, &SHAPE489, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE490, &SHAPE491,
    &SHAPE492, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE496,
    &SHAPE497, &SHAPE498, &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE499, &SHAPE500, &SHAPE501,
    &SHAPE499, &SHAPE500, &SHAPE501, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE502, &SHAPE503,
    &SHAPE504, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE508,
    &SHAPE509, &SHAPE510, &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE511, &SHAPE512, &SHAPE513,
    &SHAPE511, &SHAPE512, &SHAPE513, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE514, &SHAPE515,
    &SHAPE516, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE520,
    &SHAPE521, &SHAPE522, &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE523, &SHAPE524, &SHAPE525,
    &SHAPE523, &SHAPE524, &SHAPE525, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE526, &SHAPE527,
    &SHAPE528, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE1, &SHAPE76,
    &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80,
    &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85,
    &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89,
    &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94,
    &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77,
    &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82,
    &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78,
    &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83,
    &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE340, &SHAPE340,
    &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE215, &SHAPE216, &SHAPE217, &SHAPE218, &SHAPE217,
    &SHAPE218, &SHAPE219, &SHAPE220, &SHAPE219, &SHAPE220, &SHAPE221, &SHAPE222, &SHAPE223,
    &SHAPE224, &SHAPE225, &SHAPE226, &SHAPE227, &SHAPE228, &SHAPE229, &SHAPE230, &SHAPE229,
    &SHAPE230, &SHAPE231, &SHAPE232, &SHAPE231, &SHAPE232, &SHAPE191, &SHAPE343, &SHAPE344,
    &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE0, &SHAPE346, &SHAPE347,
    &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE354, &SHAPE356,
    &SHAPE357, &SHAPE354, &SHAPE356, &SHAPE357, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE358,
    &SHAPE359, &SHAPE360, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE361, &SHAPE362, &SHAPE363,
    &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE370, &SHAPE372,
    &SHAPE373, &SHAPE370, &SHAPE372, &SHAPE373, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE375,
    &SHAPE377, &SHAPE378, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE380, &SHAPE382, &SHAPE383,
    &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE387, &SHAPE388,
    &SHAPE389, &SHAPE387, &SHAPE388, &SHAPE389, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE390,
    &SHAPE391, &SHAPE392, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE393, &SHAPE394, &SHAPE395,
    &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE399, &SHAPE400,
    &SHAPE401, &SHAPE399, &SHAPE400, &SHAPE401, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE402,
    &SHAPE403, &SHAPE404, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE405, &SHAPE406, &SHAPE407,
    &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE414, &SHAPE416,
    &SHAPE417, &SHAPE414, &SHAPE416, &SHAPE417, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE419,
    &SHAPE421, &SHAPE422, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE424, &SHAPE426, &SHAPE427,
    &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE431, &SHAPE432,
    &SHAPE433, &SHAPE431, &SHAPE432, &SHAPE433, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE435,
    &SHAPE437, &SHAPE438, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE440, &SHAPE442, &SHAPE443,
    &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE450, &SHAPE452,
    &SHAPE453, &SHAPE450, &SHAPE452, &SHAPE453, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE454,
    &SHAPE455, &SHAPE456, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE457, &SHAPE458, &SHAPE459,
    &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE463, &SHAPE464,
    &SHAPE465, &SHAPE463, &SHAPE464, &SHAPE465, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE466,
    &SHAPE467, &SHAPE468, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE469, &SHAPE470, &SHAPE471,
    &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE475, &SHAPE476,
    &SHAPE477, &SHAPE475, &SHAPE476, &SHAPE477, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE478,
    &SHAPE479, &SHAPE480, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE481, &SHAPE482, &SHAPE483,
    &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE487, &SHAPE488,
    &SHAPE489, &SHAPE487, &SHAPE488, &SHAPE489, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE490,
    &SHAPE491, &SHAPE492, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE493, &SHAPE494, &SHAPE495,
    &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE499, &SHAPE500,
    &SHAPE501, &SHAPE499, &SHAPE500, &SHAPE501, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE502,
    &SHAPE503, &SHAPE504, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE505, &SHAPE506, &SHAPE507,
    &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE511, &SHAPE512,
    &SHAPE513, &SHAPE511, &SHAPE512, &SHAPE513, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE514,
    &SHAPE515, &SHAPE516, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE517, &SHAPE518, &SHAPE519,
    &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE523, &SHAPE524,
    &SHAPE525, &SHAPE523, &SHAPE524, &SHAPE525, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE526,
    &SHAPE527, &SHAPE528, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE529, &SHAPE530, &SHAPE531,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE301, &SHAPE706, &SHAPE706,
    &SHAPE706, &SHAPE706, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE707, &SHAPE708, &SHAPE708,
    &SHAPE708, &SHAPE708, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709,
    &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709,
    &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709,
    &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709,
    &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE709, &SHAPE1, &SHAPE1, &SHAPE710, &SHAPE710, &SHAPE711,
    &SHAPE711, &SHAPE712, &SHAPE712, &SHAPE713, &SHAPE713, &SHAPE714, &SHAPE714, &SHAPE715,
    &SHAPE715, &SHAPE716, &SHAPE716, &SHAPE717, &SHAPE717, &SHAPE718, &SHAPE718, &SHAPE719,
    &SHAPE719, &SHAPE720, &SHAPE720, &SHAPE721, &SHAPE721, &SHAPE722, &SHAPE722, &SHAPE723,
    &SHAPE723, &SHAPE724, &SHAPE724, &SHAPE725, &SHAPE725, &SHAPE726, &SHAPE726, &SHAPE727,
    &SHAPE727, &SHAPE728, &SHAPE728, &SHAPE729, &SHAPE729, &SHAPE730, &SHAPE730, &SHAPE731,
    &SHAPE731, &SHAPE732, &SHAPE732, &SHAPE733, &SHAPE733, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13,
    &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78,
    &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83,
    &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87,
    &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92,
    &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96,
    &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97,
    &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84,
    &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89,
    &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85,
    &SHAPE94, &SHAPE94, &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE0,
    &SHAPE346, &SHAPE347, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE349, &SHAPE351, &SHAPE352,
    &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE354, &SHAPE356, &SHAPE357, &SHAPE354, &SHAPE356,
    &SHAPE357, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE361,
    &SHAPE362, &SHAPE363, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE365, &SHAPE367, &SHAPE368,
    &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE370, &SHAPE372, &SHAPE373, &SHAPE370, &SHAPE372,
    &SHAPE373, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE380,
    &SHAPE382, &SHAPE383, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE384, &SHAPE385, &SHAPE386,
    &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE387, &SHAPE388, &SHAPE389, &SHAPE387, &SHAPE388,
    &SHAPE389, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE393,
    &SHAPE394, &SHAPE395, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE396, &SHAPE397, &SHAPE398,
    &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE399, &SHAPE400, &SHAPE401, &SHAPE399, &SHAPE400,
    &SHAPE401, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE405,
    &SHAPE406, &SHAPE407, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE409, &SHAPE411, &SHAPE412,
    &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE414, &SHAPE416, &SHAPE417, &SHAPE414, &SHAPE416,
    &SHAPE417, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE424,
    &SHAPE426, &SHAPE427, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE428, &SHAPE429, &SHAPE430,
    &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE431, &SHAPE432, &SHAPE433, &SHAPE431, &SHAPE432,
    &SHAPE433, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE440,
    &SHAPE442, &SHAPE443, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE445, &SHAPE447, &SHAPE448,
    &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE450, &SHAPE452, &SHAPE453, &SHAPE450, &SHAPE452,
    &SHAPE453, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE457,
    &SHAPE458, &SHAPE459, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE460, &SHAPE461, &SHAPE462,
    &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE463, &SHAPE464, &SHAPE465, &SHAPE463, &SHAPE464,
    &SHAPE465, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE469,
    &SHAPE470, &SHAPE471, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE472, &SHAPE473, &SHAPE474,
    &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE475, &SHAPE476, &SHAPE477, &SHAPE475, &SHAPE476,
    &SHAPE477, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE481,
    &SHAPE482, &SHAPE483, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE484, &SHAPE485, &SHAPE486,
    &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE487, &SHAPE488, &SHAPE489, &SHAPE487, &SHAPE488,
    &SHAPE489, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE493,
    &SHAPE494, &SHAPE495, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE496, &SHAPE497, &SHAPE498,
    &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE499, &SHAPE500, &SHAPE501, &SHAPE499, &SHAPE500,
    &SHAPE501, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE505,
    &SHAPE506, &SHAPE507, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE508, &SHAPE509, &SHAPE510,
    &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE511, &SHAPE512, &SHAPE513, &SHAPE511, &SHAPE512,
    &SHAPE513, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE517,
    &SHAPE518, &SHAPE519, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE520, &SHAPE521, &SHAPE522,
    &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE523, &SHAPE524, &SHAPE525, &SHAPE523, &SHAPE524,
    &SHAPE525, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE529,
    &SHAPE530, &SHAPE531, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13,
    &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78,
    &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83,
    &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87,
    &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92,
    &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96,
    &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97,
    &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84,
    &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89,
    &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85,
    &SHAPE94, &SHAPE94, &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE0,
    &SHAPE346, &SHAPE347, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE349, &SHAPE351, &SHAPE352,
    &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE354, &SHAPE356, &SHAPE357, &SHAPE354, &SHAPE356,
    &SHAPE357, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE361,
    &SHAPE362, &SHAPE363, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE365, &SHAPE367, &SHAPE368,
    &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE370, &SHAPE372, &SHAPE373, &SHAPE370, &SHAPE372,
    &SHAPE373, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE380,
    &SHAPE382, &SHAPE383, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE384, &SHAPE385, &SHAPE386,
    &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE387, &SHAPE388, &SHAPE389, &SHAPE387, &SHAPE388,
    &SHAPE389, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE393,
    &SHAPE394, &SHAPE395, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE396, &SHAPE397, &SHAPE398,
    &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE399, &SHAPE400, &SHAPE401, &SHAPE399, &SHAPE400,
    &SHAPE401, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE405,
    &SHAPE406, &SHAPE407, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE409, &SHAPE411, &SHAPE412,
    &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE414, &SHAPE416, &SHAPE417, &SHAPE414, &SHAPE416,
    &SHAPE417, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE424,
    &SHAPE426, &SHAPE427, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE428, &SHAPE429, &SHAPE430,
    &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE431, &SHAPE432, &SHAPE433, &SHAPE431, &SHAPE432,
    &SHAPE433, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE440,
    &SHAPE442, &SHAPE443, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE445, &SHAPE447, &SHAPE448,
    &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE450, &SHAPE452, &SHAPE453, &SHAPE450, &SHAPE452,
    &SHAPE453, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE457,
    &SHAPE458, &SHAPE459, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE460, &SHAPE461, &SHAPE462,
    &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE463, &SHAPE464, &SHAPE465, &SHAPE463, &SHAPE464,
    &SHAPE465, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE469,
    &SHAPE470, &SHAPE471, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE472, &SHAPE473, &SHAPE474,
    &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE475, &SHAPE476, &SHAPE477, &SHAPE475, &SHAPE476,
    &SHAPE477, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE481,
    &SHAPE482, &SHAPE483, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE484, &SHAPE485, &SHAPE486,
    &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE487, &SHAPE488, &SHAPE489, &SHAPE487, &SHAPE488,
    &SHAPE489, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE493,
    &SHAPE494, &SHAPE495, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE496, &SHAPE497, &SHAPE498,
    &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE499, &SHAPE500, &SHAPE501, &SHAPE499, &SHAPE500,
    &SHAPE501, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE505,
    &SHAPE506, &SHAPE507, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE508, &SHAPE509, &SHAPE510,
    &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE511, &SHAPE512, &SHAPE513, &SHAPE511, &SHAPE512,
    &SHAPE513, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE517,
    &SHAPE518, &SHAPE519, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE520, &SHAPE521, &SHAPE522,
    &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE523, &SHAPE524, &SHAPE525, &SHAPE523, &SHAPE524,
    &SHAPE525, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE529,
    &SHAPE530, &SHAPE531, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340,
    &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78,
    &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82,
    &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87,
    &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91,
    &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96,
    &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79,
    &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84,
    &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80,
    &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85,
    &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE191, &SHAPE343, &SHAPE344,
    &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE349, &SHAPE351, &SHAPE352,
    &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE354, &SHAPE356, &SHAPE357, &SHAPE354, &SHAPE356,
    &SHAPE357, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE361,
    &SHAPE362, &SHAPE363, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE365, &SHAPE367, &SHAPE368,
    &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE370, &SHAPE372, &SHAPE373, &SHAPE370, &SHAPE372,
    &SHAPE373, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE380,
    &SHAPE382, &SHAPE383, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE384, &SHAPE385, &SHAPE386,
    &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE387, &SHAPE388, &SHAPE389, &SHAPE387, &SHAPE388,
    &SHAPE389, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE393,
    &SHAPE394, &SHAPE395, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE396, &SHAPE397, &SHAPE398,
    &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE399, &SHAPE400, &SHAPE401, &SHAPE399, &SHAPE400,
    &SHAPE401, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE405,
    &SHAPE406, &SHAPE407, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE409, &SHAPE411, &SHAPE412,
    &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE414, &SHAPE416, &SHAPE417, &SHAPE414, &SHAPE416,
    &SHAPE417, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE424,
    &SHAPE426, &SHAPE427, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE428, &SHAPE429, &SHAPE430,
    &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE431, &SHAPE432, &SHAPE433, &SHAPE431, &SHAPE432,
    &SHAPE433, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE440,
    &SHAPE442, &SHAPE443, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE445, &SHAPE447, &SHAPE448,
    &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE450, &SHAPE452, &SHAPE453, &SHAPE450, &SHAPE452,
    &SHAPE453, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE457,
    &SHAPE458, &SHAPE459, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE460, &SHAPE461, &SHAPE462,
    &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE463, &SHAPE464, &SHAPE465, &SHAPE463, &SHAPE464,
    &SHAPE465, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE469,
    &SHAPE470, &SHAPE471, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE472, &SHAPE473, &SHAPE474,
    &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE475, &SHAPE476, &SHAPE477, &SHAPE475, &SHAPE476,
    &SHAPE477, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE481,
    &SHAPE482, &SHAPE483, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE484, &SHAPE485, &SHAPE486,
    &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE487, &SHAPE488, &SHAPE489, &SHAPE487, &SHAPE488,
    &SHAPE489, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE493,
    &SHAPE494, &SHAPE495, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE496, &SHAPE497, &SHAPE498,
    &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE499, &SHAPE500, &SHAPE501, &SHAPE499, &SHAPE500,
    &SHAPE501, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE505,
    &SHAPE506, &SHAPE507, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE508, &SHAPE509, &SHAPE510,
    &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE511, &SHAPE512, &SHAPE513, &SHAPE511, &SHAPE512,
    &SHAPE513, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE517,
    &SHAPE518, &SHAPE519, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE520, &SHAPE521, &SHAPE522,
    &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE523, &SHAPE524, &SHAPE525, &SHAPE523, &SHAPE524,
    &SHAPE525, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE529,
    &SHAPE530, &SHAPE531, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE13,
    &SHAPE13, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE306, &SHAPE307, &SHAPE306, &SHAPE307, &SHAPE308,
    &SHAPE309, &SHAPE308, &SHAPE309, &SHAPE310, &SHAPE311, &SHAPE310, &SHAPE311, &SHAPE312,
    &SHAPE313, &SHAPE312, &SHAPE313, &SHAPE314, &SHAPE315, &SHAPE314, &SHAPE315, &SHAPE316,
    &SHAPE317, &SHAPE316, &SHAPE317, &SHAPE318, &SHAPE319, &SHAPE318, &SHAPE319, &SHAPE320,
    &SHAPE321, &SHAPE320, &SHAPE321, &SHAPE322, &SHAPE323, &SHAPE322, &SHAPE323, &SHAPE324,
    &SHAPE325, &SHAPE324, &SHAPE325, &SHAPE326, &SHAPE327, &SHAPE326, &SHAPE327, &SHAPE328,
    &SHAPE329, &SHAPE328, &SHAPE329, &SHAPE330, &SHAPE331, &SHAPE330, &SHAPE331, &SHAPE332,
    &SHAPE333, &SHAPE332, &SHAPE333, &SHAPE334, &SHAPE335, &SHAPE334, &SHAPE335, &SHAPE336,
    &SHAPE75, &SHAPE336, &SHAPE75, &SHAPE44, &SHAPE45, &SHAPE44, &SHAPE45, &SHAPE46, &SHAPE47,
    &SHAPE46, &SHAPE47, &SHAPE48, &SHAPE49, &SHAPE48, &SHAPE49, &SHAPE50, &SHAPE51, &SHAPE50,
    &SHAPE51, &SHAPE52, &SHAPE53, &SHAPE52, &SHAPE53, &SHAPE54, &SHAPE55, &SHAPE54, &SHAPE55,
    &SHAPE56, &SHAPE57, &SHAPE56, &SHAPE57, &SHAPE58, &SHAPE59, &SHAPE58, &SHAPE59, &SHAPE60,
    &SHAPE61, &SHAPE60, &SHAPE61, &SHAPE62, &SHAPE63, &SHAPE62, &SHAPE63, &SHAPE64, &SHAPE65,
    &SHAPE64, &SHAPE65, &SHAPE66, &SHAPE67, &SHAPE66, &SHAPE67, &SHAPE68, &SHAPE69, &SHAPE68,
    &SHAPE69, &SHAPE70, &SHAPE71, &SHAPE70, &SHAPE71, &SHAPE72, &SHAPE73, &SHAPE72, &SHAPE73,
    &SHAPE74, &SHAPE1, &SHAPE74, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79,
    &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83,
    &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88,
    &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92,
    &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88,
    &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97,
    &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98,
    &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89,
    &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94,
    &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79,
    &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84,
    &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88,
    &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93,
    &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88,
    &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93,
    &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98,
    &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99,
    &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94,
    &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80,
    &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84,
    &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89,
    &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93,
    &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77,
    &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93,
    &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78,
    &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99,
    &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76,
    &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80,
    &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85,
    &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89,
    &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94,
    &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77,
    &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82,
    &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78,
    &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83,
    &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE340, &SHAPE340,
    &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1,
    &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340,
    &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79,
    &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83,
    &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88,
    &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92,
    &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88,
    &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97,
    &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98,
    &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89,
    &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94,
    &SHAPE94, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79,
    &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84,
    &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88,
    &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93,
    &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88,
    &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93,
    &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98,
    &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99,
    &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94,
    &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80,
    &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84,
    &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89,
    &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93,
    &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77,
    &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93,
    &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78,
    &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99,
    &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE76,
    &SHAPE76, &SHAPE77, &SHAPE77, &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80,
    &SHAPE81, &SHAPE81, &SHAPE82, &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85,
    &SHAPE85, &SHAPE86, &SHAPE86, &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89,
    &SHAPE90, &SHAPE90, &SHAPE91, &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94,
    &SHAPE94, &SHAPE95, &SHAPE95, &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77,
    &SHAPE90, &SHAPE90, &SHAPE79, &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82,
    &SHAPE82, &SHAPE95, &SHAPE95, &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78,
    &SHAPE87, &SHAPE87, &SHAPE80, &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83,
    &SHAPE83, &SHAPE92, &SHAPE92, &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE340, &SHAPE340,
    &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1,
    &SHAPE1, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE340, &SHAPE340,
    &SHAPE13, &SHAPE13, &SHAPE1, &SHAPE1, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194,
    &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194,
    &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192,
    &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192,
    &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195,
    &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195,
    &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193,
    &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193,
    &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194,
    &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194,
    &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192,
    &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192,
    &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195,
    &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195,
    &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193,
    &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193,
    &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194,
    &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194,
    &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192,
    &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192,
    &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195,
    &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195,
    &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193,
    &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193,
    &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194,
    &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194,
    &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192,
    &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192,
    &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195,
    &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195,
    &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193,
    &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193,
    &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194,
    &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194,
    &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192,
    &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192,
    &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195,
    &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195,
    &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193,
    &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193,
    &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194,
    &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194,
    &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192,
    &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192,
    &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195,
    &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195,
    &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193,
    &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193,
    &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194,
    &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194,
    &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192,
    &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192,
    &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195,
    &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195,
    &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193,
    &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193,
    &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194,
    &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE194,
    &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192,
    &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192,
    &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195,
    &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE193, &SHAPE193, &SHAPE194, &SHAPE194, &SHAPE195,
    &SHAPE195, &SHAPE194, &SHAPE194, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193,
    &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE195, &SHAPE195, &SHAPE192, &SHAPE192, &SHAPE193,
    &SHAPE193, &SHAPE192, &SHAPE192, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE193, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE195, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE194, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE274,
    &SHAPE274, &SHAPE274, &SHAPE274, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE192, &SHAPE275,
    &SHAPE275, &SHAPE275, &SHAPE275, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE578, &SHAPE578, &SHAPE578, &SHAPE578, &SHAPE579, &SHAPE579, &SHAPE579,
    &SHAPE579, &SHAPE578, &SHAPE578, &SHAPE578, &SHAPE578, &SHAPE579, &SHAPE579, &SHAPE579,
    &SHAPE579, &SHAPE266, &SHAPE266, &SHAPE266, &SHAPE266, &SHAPE266, &SHAPE266, &SHAPE266,
    &SHAPE266, &SHAPE734, &SHAPE734, &SHAPE734, &SHAPE734, &SHAPE735, &SHAPE735, &SHAPE736,
    &SHAPE736, &SHAPE737, &SHAPE737, &SHAPE737, &SHAPE737, &SHAPE738, &SHAPE738, &SHAPE738,
    &SHAPE738, &SHAPE739, &SHAPE739, &SHAPE739, &SHAPE739, &SHAPE1, &SHAPE23, &SHAPE23, &SHAPE23,
    &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23,
    &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23,
    &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23,
    &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23,
    &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23,
    &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE740, &SHAPE741, &SHAPE741,
    &SHAPE75, &SHAPE742, &SHAPE743, &SHAPE275, &SHAPE275, &SHAPE744, &SHAPE745, &SHAPE275,
    &SHAPE275, &SHAPE746, &SHAPE747, &SHAPE275, &SHAPE275, &SHAPE748, &SHAPE749, &SHAPE275,
    &SHAPE275, &SHAPE742, &SHAPE743, &SHAPE275, &SHAPE275, &SHAPE744, &SHAPE745, &SHAPE275,
    &SHAPE275, &SHAPE746, &SHAPE747, &SHAPE275, &SHAPE275, &SHAPE748, &SHAPE749, &SHAPE275,
    &SHAPE275, &SHAPE750, &SHAPE751, &SHAPE75, &SHAPE75, &SHAPE752, &SHAPE753, &SHAPE75, &SHAPE75,
    &SHAPE754, &SHAPE755, &SHAPE75, &SHAPE75, &SHAPE756, &SHAPE757, &SHAPE75, &SHAPE75, &SHAPE1,
    &SHAPE759, &SHAPE759, &SHAPE759, &SHAPE759, &SHAPE761, &SHAPE761, &SHAPE762, &SHAPE762,
    &SHAPE763, &SHAPE763, &SHAPE763, &SHAPE763, &SHAPE764, &SHAPE764, &SHAPE765, &SHAPE765,
    &SHAPE766, &SHAPE766, &SHAPE766, &SHAPE766, &SHAPE767, &SHAPE767, &SHAPE768, &SHAPE768,
    &SHAPE769, &SHAPE769, &SHAPE769, &SHAPE769, &SHAPE770, &SHAPE770, &SHAPE771, &SHAPE771,
    &SHAPE772, &SHAPE772, &SHAPE773, &SHAPE773, &SHAPE774, &SHAPE774, &SHAPE775, &SHAPE775,
    &SHAPE20, &SHAPE20, &SHAPE20, &SHAPE20, &SHAPE20, &SHAPE20, &SHAPE20, &SHAPE20, &SHAPE20,
    &SHAPE20, &SHAPE20, &SHAPE20, &SHAPE20, &SHAPE20, &SHAPE20, &SHAPE20, &SHAPE776, &SHAPE776,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77,
    &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82,
    &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86,
    &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91,
    &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95,
    &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79,
    &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95,
    &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80,
    &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92,
    &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1,
    &SHAPE1, &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE0, &SHAPE346,
    &SHAPE347, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE349,
    &SHAPE351, &SHAPE352, &SHAPE354, &SHAPE356, &SHAPE357, &SHAPE354, &SHAPE356, &SHAPE357,
    &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE361, &SHAPE362,
    &SHAPE363, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE365,
    &SHAPE367, &SHAPE368, &SHAPE370, &SHAPE372, &SHAPE373, &SHAPE370, &SHAPE372, &SHAPE373,
    &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE380, &SHAPE382,
    &SHAPE383, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE384,
    &SHAPE385, &SHAPE386, &SHAPE387, &SHAPE388, &SHAPE389, &SHAPE387, &SHAPE388, &SHAPE389,
    &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE393, &SHAPE394,
    &SHAPE395, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE396,
    &SHAPE397, &SHAPE398, &SHAPE399, &SHAPE400, &SHAPE401, &SHAPE399, &SHAPE400, &SHAPE401,
    &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE405, &SHAPE406,
    &SHAPE407, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE409,
    &SHAPE411, &SHAPE412, &SHAPE414, &SHAPE416, &SHAPE417, &SHAPE414, &SHAPE416, &SHAPE417,
    &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE424, &SHAPE426,
    &SHAPE427, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE428,
    &SHAPE429, &SHAPE430, &SHAPE431, &SHAPE432, &SHAPE433, &SHAPE431, &SHAPE432, &SHAPE433,
    &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE440, &SHAPE442,
    &SHAPE443, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE445,
    &SHAPE447, &SHAPE448, &SHAPE450, &SHAPE452, &SHAPE453, &SHAPE450, &SHAPE452, &SHAPE453,
    &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE457, &SHAPE458,
    &SHAPE459, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE460,
    &SHAPE461, &SHAPE462, &SHAPE463, &SHAPE464, &SHAPE465, &SHAPE463, &SHAPE464, &SHAPE465,
    &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE469, &SHAPE470,
    &SHAPE471, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE472,
    &SHAPE473, &SHAPE474, &SHAPE475, &SHAPE476, &SHAPE477, &SHAPE475, &SHAPE476, &SHAPE477,
    &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE481, &SHAPE482,
    &SHAPE483, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE484,
    &SHAPE485, &SHAPE486, &SHAPE487, &SHAPE488, &SHAPE489, &SHAPE487, &SHAPE488, &SHAPE489,
    &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE493, &SHAPE494,
    &SHAPE495, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE496,
    &SHAPE497, &SHAPE498, &SHAPE499, &SHAPE500, &SHAPE501, &SHAPE499, &SHAPE500, &SHAPE501,
    &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE505, &SHAPE506,
    &SHAPE507, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE508,
    &SHAPE509, &SHAPE510, &SHAPE511, &SHAPE512, &SHAPE513, &SHAPE511, &SHAPE512, &SHAPE513,
    &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE517, &SHAPE518,
    &SHAPE519, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE520,
    &SHAPE521, &SHAPE522, &SHAPE523, &SHAPE524, &SHAPE525, &SHAPE523, &SHAPE524, &SHAPE525,
    &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE529, &SHAPE530,
    &SHAPE531, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77,
    &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82,
    &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86,
    &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91,
    &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95,
    &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79,
    &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95,
    &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80,
    &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92,
    &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1,
    &SHAPE1, &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE0, &SHAPE346,
    &SHAPE347, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE349,
    &SHAPE351, &SHAPE352, &SHAPE354, &SHAPE356, &SHAPE357, &SHAPE354, &SHAPE356, &SHAPE357,
    &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE361, &SHAPE362,
    &SHAPE363, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE365,
    &SHAPE367, &SHAPE368, &SHAPE370, &SHAPE372, &SHAPE373, &SHAPE370, &SHAPE372, &SHAPE373,
    &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE380, &SHAPE382,
    &SHAPE383, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE384,
    &SHAPE385, &SHAPE386, &SHAPE387, &SHAPE388, &SHAPE389, &SHAPE387, &SHAPE388, &SHAPE389,
    &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE393, &SHAPE394,
    &SHAPE395, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE396,
    &SHAPE397, &SHAPE398, &SHAPE399, &SHAPE400, &SHAPE401, &SHAPE399, &SHAPE400, &SHAPE401,
    &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE405, &SHAPE406,
    &SHAPE407, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE409,
    &SHAPE411, &SHAPE412, &SHAPE414, &SHAPE416, &SHAPE417, &SHAPE414, &SHAPE416, &SHAPE417,
    &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE424, &SHAPE426,
    &SHAPE427, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE428,
    &SHAPE429, &SHAPE430, &SHAPE431, &SHAPE432, &SHAPE433, &SHAPE431, &SHAPE432, &SHAPE433,
    &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE440, &SHAPE442,
    &SHAPE443, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE445,
    &SHAPE447, &SHAPE448, &SHAPE450, &SHAPE452, &SHAPE453, &SHAPE450, &SHAPE452, &SHAPE453,
    &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE457, &SHAPE458,
    &SHAPE459, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE460,
    &SHAPE461, &SHAPE462, &SHAPE463, &SHAPE464, &SHAPE465, &SHAPE463, &SHAPE464, &SHAPE465,
    &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE469, &SHAPE470,
    &SHAPE471, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE472,
    &SHAPE473, &SHAPE474, &SHAPE475, &SHAPE476, &SHAPE477, &SHAPE475, &SHAPE476, &SHAPE477,
    &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE481, &SHAPE482,
    &SHAPE483, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE484,
    &SHAPE485, &SHAPE486, &SHAPE487, &SHAPE488, &SHAPE489, &SHAPE487, &SHAPE488, &SHAPE489,
    &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE493, &SHAPE494,
    &SHAPE495, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE496,
    &SHAPE497, &SHAPE498, &SHAPE499, &SHAPE500, &SHAPE501, &SHAPE499, &SHAPE500, &SHAPE501,
    &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE505, &SHAPE506,
    &SHAPE507, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE508,
    &SHAPE509, &SHAPE510, &SHAPE511, &SHAPE512, &SHAPE513, &SHAPE511, &SHAPE512, &SHAPE513,
    &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE517, &SHAPE518,
    &SHAPE519, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE520,
    &SHAPE521, &SHAPE522, &SHAPE523, &SHAPE524, &SHAPE525, &SHAPE523, &SHAPE524, &SHAPE525,
    &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE529, &SHAPE530,
    &SHAPE531, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77,
    &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82,
    &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86,
    &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91,
    &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95,
    &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79,
    &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95,
    &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80,
    &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92,
    &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1,
    &SHAPE1, &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE0, &SHAPE346,
    &SHAPE347, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE349,
    &SHAPE351, &SHAPE352, &SHAPE354, &SHAPE356, &SHAPE357, &SHAPE354, &SHAPE356, &SHAPE357,
    &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE361, &SHAPE362,
    &SHAPE363, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE365,
    &SHAPE367, &SHAPE368, &SHAPE370, &SHAPE372, &SHAPE373, &SHAPE370, &SHAPE372, &SHAPE373,
    &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE380, &SHAPE382,
    &SHAPE383, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE384,
    &SHAPE385, &SHAPE386, &SHAPE387, &SHAPE388, &SHAPE389, &SHAPE387, &SHAPE388, &SHAPE389,
    &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE393, &SHAPE394,
    &SHAPE395, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE396,
    &SHAPE397, &SHAPE398, &SHAPE399, &SHAPE400, &SHAPE401, &SHAPE399, &SHAPE400, &SHAPE401,
    &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE405, &SHAPE406,
    &SHAPE407, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE409,
    &SHAPE411, &SHAPE412, &SHAPE414, &SHAPE416, &SHAPE417, &SHAPE414, &SHAPE416, &SHAPE417,
    &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE424, &SHAPE426,
    &SHAPE427, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE428,
    &SHAPE429, &SHAPE430, &SHAPE431, &SHAPE432, &SHAPE433, &SHAPE431, &SHAPE432, &SHAPE433,
    &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE440, &SHAPE442,
    &SHAPE443, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE445,
    &SHAPE447, &SHAPE448, &SHAPE450, &SHAPE452, &SHAPE453, &SHAPE450, &SHAPE452, &SHAPE453,
    &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE457, &SHAPE458,
    &SHAPE459, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE460,
    &SHAPE461, &SHAPE462, &SHAPE463, &SHAPE464, &SHAPE465, &SHAPE463, &SHAPE464, &SHAPE465,
    &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE469, &SHAPE470,
    &SHAPE471, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE472,
    &SHAPE473, &SHAPE474, &SHAPE475, &SHAPE476, &SHAPE477, &SHAPE475, &SHAPE476, &SHAPE477,
    &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE481, &SHAPE482,
    &SHAPE483, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE484,
    &SHAPE485, &SHAPE486, &SHAPE487, &SHAPE488, &SHAPE489, &SHAPE487, &SHAPE488, &SHAPE489,
    &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE493, &SHAPE494,
    &SHAPE495, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE496,
    &SHAPE497, &SHAPE498, &SHAPE499, &SHAPE500, &SHAPE501, &SHAPE499, &SHAPE500, &SHAPE501,
    &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE505, &SHAPE506,
    &SHAPE507, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE508,
    &SHAPE509, &SHAPE510, &SHAPE511, &SHAPE512, &SHAPE513, &SHAPE511, &SHAPE512, &SHAPE513,
    &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE517, &SHAPE518,
    &SHAPE519, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE520,
    &SHAPE521, &SHAPE522, &SHAPE523, &SHAPE524, &SHAPE525, &SHAPE523, &SHAPE524, &SHAPE525,
    &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE529, &SHAPE530,
    &SHAPE531, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE1, &SHAPE76, &SHAPE76, &SHAPE77, &SHAPE77,
    &SHAPE78, &SHAPE78, &SHAPE79, &SHAPE79, &SHAPE80, &SHAPE80, &SHAPE81, &SHAPE81, &SHAPE82,
    &SHAPE82, &SHAPE83, &SHAPE83, &SHAPE84, &SHAPE84, &SHAPE85, &SHAPE85, &SHAPE86, &SHAPE86,
    &SHAPE87, &SHAPE87, &SHAPE88, &SHAPE88, &SHAPE89, &SHAPE89, &SHAPE90, &SHAPE90, &SHAPE91,
    &SHAPE91, &SHAPE92, &SHAPE92, &SHAPE93, &SHAPE93, &SHAPE94, &SHAPE94, &SHAPE95, &SHAPE95,
    &SHAPE96, &SHAPE96, &SHAPE88, &SHAPE88, &SHAPE77, &SHAPE77, &SHAPE90, &SHAPE90, &SHAPE79,
    &SHAPE79, &SHAPE97, &SHAPE97, &SHAPE93, &SHAPE93, &SHAPE82, &SHAPE82, &SHAPE95, &SHAPE95,
    &SHAPE84, &SHAPE84, &SHAPE98, &SHAPE98, &SHAPE78, &SHAPE78, &SHAPE87, &SHAPE87, &SHAPE80,
    &SHAPE80, &SHAPE89, &SHAPE89, &SHAPE99, &SHAPE99, &SHAPE83, &SHAPE83, &SHAPE92, &SHAPE92,
    &SHAPE85, &SHAPE85, &SHAPE94, &SHAPE94, &SHAPE340, &SHAPE340, &SHAPE13, &SHAPE13, &SHAPE1,
    &SHAPE1, &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE191, &SHAPE343, &SHAPE344, &SHAPE0, &SHAPE346,
    &SHAPE347, &SHAPE0, &SHAPE346, &SHAPE347, &SHAPE349, &SHAPE351, &SHAPE352, &SHAPE349,
    &SHAPE351, &SHAPE352, &SHAPE354, &SHAPE356, &SHAPE357, &SHAPE354, &SHAPE356, &SHAPE357,
    &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE358, &SHAPE359, &SHAPE360, &SHAPE361, &SHAPE362,
    &SHAPE363, &SHAPE361, &SHAPE362, &SHAPE363, &SHAPE365, &SHAPE367, &SHAPE368, &SHAPE365,
    &SHAPE367, &SHAPE368, &SHAPE370, &SHAPE372, &SHAPE373, &SHAPE370, &SHAPE372, &SHAPE373,
    &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE375, &SHAPE377, &SHAPE378, &SHAPE380, &SHAPE382,
    &SHAPE383, &SHAPE380, &SHAPE382, &SHAPE383, &SHAPE384, &SHAPE385, &SHAPE386, &SHAPE384,
    &SHAPE385, &SHAPE386, &SHAPE387, &SHAPE388, &SHAPE389, &SHAPE387, &SHAPE388, &SHAPE389,
    &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE390, &SHAPE391, &SHAPE392, &SHAPE393, &SHAPE394,
    &SHAPE395, &SHAPE393, &SHAPE394, &SHAPE395, &SHAPE396, &SHAPE397, &SHAPE398, &SHAPE396,
    &SHAPE397, &SHAPE398, &SHAPE399, &SHAPE400, &SHAPE401, &SHAPE399, &SHAPE400, &SHAPE401,
    &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE402, &SHAPE403, &SHAPE404, &SHAPE405, &SHAPE406,
    &SHAPE407, &SHAPE405, &SHAPE406, &SHAPE407, &SHAPE409, &SHAPE411, &SHAPE412, &SHAPE409,
    &SHAPE411, &SHAPE412, &SHAPE414, &SHAPE416, &SHAPE417, &SHAPE414, &SHAPE416, &SHAPE417,
    &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE419, &SHAPE421, &SHAPE422, &SHAPE424, &SHAPE426,
    &SHAPE427, &SHAPE424, &SHAPE426, &SHAPE427, &SHAPE428, &SHAPE429, &SHAPE430, &SHAPE428,
    &SHAPE429, &SHAPE430, &SHAPE431, &SHAPE432, &SHAPE433, &SHAPE431, &SHAPE432, &SHAPE433,
    &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE435, &SHAPE437, &SHAPE438, &SHAPE440, &SHAPE442,
    &SHAPE443, &SHAPE440, &SHAPE442, &SHAPE443, &SHAPE445, &SHAPE447, &SHAPE448, &SHAPE445,
    &SHAPE447, &SHAPE448, &SHAPE450, &SHAPE452, &SHAPE453, &SHAPE450, &SHAPE452, &SHAPE453,
    &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE454, &SHAPE455, &SHAPE456, &SHAPE457, &SHAPE458,
    &SHAPE459, &SHAPE457, &SHAPE458, &SHAPE459, &SHAPE460, &SHAPE461, &SHAPE462, &SHAPE460,
    &SHAPE461, &SHAPE462, &SHAPE463, &SHAPE464, &SHAPE465, &SHAPE463, &SHAPE464, &SHAPE465,
    &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE466, &SHAPE467, &SHAPE468, &SHAPE469, &SHAPE470,
    &SHAPE471, &SHAPE469, &SHAPE470, &SHAPE471, &SHAPE472, &SHAPE473, &SHAPE474, &SHAPE472,
    &SHAPE473, &SHAPE474, &SHAPE475, &SHAPE476, &SHAPE477, &SHAPE475, &SHAPE476, &SHAPE477,
    &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE478, &SHAPE479, &SHAPE480, &SHAPE481, &SHAPE482,
    &SHAPE483, &SHAPE481, &SHAPE482, &SHAPE483, &SHAPE484, &SHAPE485, &SHAPE486, &SHAPE484,
    &SHAPE485, &SHAPE486, &SHAPE487, &SHAPE488, &SHAPE489, &SHAPE487, &SHAPE488, &SHAPE489,
    &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE490, &SHAPE491, &SHAPE492, &SHAPE493, &SHAPE494,
    &SHAPE495, &SHAPE493, &SHAPE494, &SHAPE495, &SHAPE496, &SHAPE497, &SHAPE498, &SHAPE496,
    &SHAPE497, &SHAPE498, &SHAPE499, &SHAPE500, &SHAPE501, &SHAPE499, &SHAPE500, &SHAPE501,
    &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE502, &SHAPE503, &SHAPE504, &SHAPE505, &SHAPE506,
    &SHAPE507, &SHAPE505, &SHAPE506, &SHAPE507, &SHAPE508, &SHAPE509, &SHAPE510, &SHAPE508,
    &SHAPE509, &SHAPE510, &SHAPE511, &SHAPE512, &SHAPE513, &SHAPE511, &SHAPE512, &SHAPE513,
    &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE514, &SHAPE515, &SHAPE516, &SHAPE517, &SHAPE518,
    &SHAPE519, &SHAPE517, &SHAPE518, &SHAPE519, &SHAPE520, &SHAPE521, &SHAPE522, &SHAPE520,
    &SHAPE521, &SHAPE522, &SHAPE523, &SHAPE524, &SHAPE525, &SHAPE523, &SHAPE524, &SHAPE525,
    &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE526, &SHAPE527, &SHAPE528, &SHAPE529, &SHAPE530,
    &SHAPE531, &SHAPE529, &SHAPE530, &SHAPE531, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE38, &SHAPE38, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE777, &SHAPE1, &SHAPE23, &SHAPE23,
    &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23,
    &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE23, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1,
    &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE1, &SHAPE557, &SHAPE557, &SHAPE1,
    &SHAPE75, &SHAPE778, &SHAPE336, &SHAPE779, &SHAPE780, &SHAPE781, &SHAPE333, &SHAPE782,
    &SHAPE332, &SHAPE783, &SHAPE784, &SHAPE785, &SHAPE786, &SHAPE787, &SHAPE788, &SHAPE789,
    &SHAPE790, &SHAPE791, &SHAPE329, &SHAPE792, &SHAPE328, &SHAPE793, &SHAPE794, &SHAPE795,
    &SHAPE325, &SHAPE796, &SHAPE324, &SHAPE797, &SHAPE798, &SHAPE799, &SHAPE800, &SHAPE801,
    &SHAPE802, &SHAPE803, &SHAPE804, &SHAPE805, &SHAPE806, &SHAPE807, &SHAPE808, &SHAPE809,
    &SHAPE810, &SHAPE811, &SHAPE812, &SHAPE813, &SHAPE814, &SHAPE815, &SHAPE816, &SHAPE817,
    &SHAPE818, &SHAPE819, &SHAPE820, &SHAPE821, &SHAPE822, &SHAPE823, &SHAPE321, &SHAPE824,
    &SHAPE320, &SHAPE825, &SHAPE826, &SHAPE827, &SHAPE317, &SHAPE828, &SHAPE316, &SHAPE829,
    &SHAPE830, &SHAPE831, &SHAPE832, &SHAPE833, &SHAPE834, &SHAPE835, &SHAPE836, &SHAPE837,
    &SHAPE313, &SHAPE838, &SHAPE312, &SHAPE839, &SHAPE840, &SHAPE841, &SHAPE309, &SHAPE842,
    &SHAPE308, &SHAPE1, &SHAPE843, &SHAPE74, &SHAPE844, &SHAPE845, &SHAPE846, &SHAPE71, &SHAPE847,
    &SHAPE70, &SHAPE848, &SHAPE849, &SHAPE850, &SHAPE851, &SHAPE852, &SHAPE853, &SHAPE854,
    &SHAPE855, &SHAPE856, &SHAPE67, &SHAPE857, &SHAPE66, &SHAPE858, &SHAPE859, &SHAPE860, &SHAPE63,
    &SHAPE861, &SHAPE62, &SHAPE862, &SHAPE863, &SHAPE864, &SHAPE865, &SHAPE866, &SHAPE867,
    &SHAPE868, &SHAPE869, &SHAPE870, &SHAPE871, &SHAPE872, &SHAPE873, &SHAPE874, &SHAPE875,
    &SHAPE876, &SHAPE877, &SHAPE878, &SHAPE879, &SHAPE880, &SHAPE881, &SHAPE882, &SHAPE883,
    &SHAPE884, &SHAPE885, &SHAPE886, &SHAPE887, &SHAPE888, &SHAPE59, &SHAPE889, &SHAPE58,
    &SHAPE890, &SHAPE891, &SHAPE892, &SHAPE55, &SHAPE893, &SHAPE54, &SHAPE894, &SHAPE895,
    &SHAPE896, &SHAPE897, &SHAPE898, &SHAPE899, &SHAPE900, &SHAPE901, &SHAPE902, &SHAPE51,
    &SHAPE903, &SHAPE50, &SHAPE904, &SHAPE905, &SHAPE906, &SHAPE47, &SHAPE907, &SHAPE46, &SHAPE908,
    &SHAPE23, &SHAPE37, &SHAPE37, &SHAPE38, &SHAPE38, &SHAPE1,
];
