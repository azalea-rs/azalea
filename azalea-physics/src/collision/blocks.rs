//! Autogenerated block collisions for every block

use super::{BitSetDiscreteVoxelShape, CubeVoxelShape, VoxelShape};
use lazy_static::lazy_static;

trait BlockWithShape {
    fn shape(&self) -> &'static dyn VoxelShape;
}

lazy_static! {
    static ref SHAPE1: CubeVoxelShape = {
        let mut shape = BitSetDiscreteVoxelShape::new(1, 1, 1);
        shape.fill(0, 0, 0);
        CubeVoxelShape::new(Box::new(shape))
    };
}

impl BlockWithShape for azalea_block::StoneSlabBlock {
    fn shape(&self) -> &'static dyn VoxelShape {
        &*SHAPE1
    }
}
